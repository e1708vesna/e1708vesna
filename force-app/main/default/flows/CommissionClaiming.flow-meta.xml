<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <description>Sends an email to the current Claim Member in the loop with a notification that a fellow colleague has started his/her claim process.</description>
        <name>ClaimTeamNotification</name>
        <label>Claim Team Notification</label>
        <locationX>3606</locationX>
        <locationY>5736</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>RemoveEmailAddress</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen5</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>varSingleEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Fellow Claim Member Notification</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>txtClaimTeamNotification</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>This is an email to the Eligible Sales Lead to notify them that a Claim has been started where they are set as Eligible Sales Lead, whereas they are not the current manager (and thus approver).</description>
        <name>EligibleSalesLeadNotification</name>
        <label>Eligible Sales Lead Notification</label>
        <locationX>3654</locationX>
        <locationY>6121</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>scrClaimMemberSubmitted</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen5</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>GetEligibleSalesLead.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Claim Notification</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>txtEligibleSalesLeadNotification</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Here the Claim Member is submitted for Approval. IMPORTANT HERE, there is NO approval process linked as there is currently only ONE on Claim Member. If this ever changes, this requires attention.

Also, there are Entry Criteria for the Approval Process such as the Status being either &apos;Submitted&apos;, &apos;Recalled&apos; or &apos;Denied&apos; and the Claim Member being &apos;Eligible for Claim&apos; except for SDR ^&amp; Exception Claims.</description>
        <name>SubmitClaimMemberForApproval</name>
        <label>Submit Claim Member for Approval</label>
        <locationX>3282</locationX>
        <locationY>5180</locationY>
        <actionName>submit</actionName>
        <actionType>submit</actionType>
        <connector>
            <targetReference>WhatClaimType</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen5</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>objectId</name>
            <value>
                <elementReference>forClaimMemberToUpdate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>submitterId</name>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>52.0</apiVersion>
    <assignments>
        <description>All the record variables for each unique Claim Member are added to a collection, so we can update them at once.</description>
        <name>AddToCollection</name>
        <label>Add to Collection</label>
        <locationX>1305</locationX>
        <locationY>3259</locationY>
        <assignmentItems>
            <assignToReference>collectionNewSplitClaimMembers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordClaimMember1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>collectionNewSplitClaimMembers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordClaimMember2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>collectionNewSplitClaimMembers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordClaimMember3</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>collectionNewSplitClaimMembers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordClaimMember4</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateSplitClaimMembers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>If this is an Exception Request for multiple Claim Members that were assigned in the Exception Screen, this assignment will be used to assign values to 3 separate Claim Member record variables. The lookups Account, User, Claim, Opportunity &amp; Owner are assigned, also the Record Type is set to &apos;Exception&apos;, Status to &apos;No Claim Started&apos; and percentages are updated based on the input in the Exception screen.</description>
        <name>AssignClaimMembers</name>
        <label>Assign Claim Members</label>
        <locationX>190</locationX>
        <locationY>2316</locationY>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forExceptionClaimMemberRT</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.User__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varSecondClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.Claim__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forClaimIDForOtherMembers</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.Opportunity__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varOpportunity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forExceptionClaimMemberRT</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.User__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varThirdClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.Claim__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forClaimIDForOtherMembers</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.Opportunity__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varOpportunity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.Account__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forExceptionClaimMemberRT</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.User__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varFourthClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.Claim__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forClaimIDForOtherMembers</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.Opportunity__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varOpportunity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No claim started</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No claim started</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No claim started</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varSecondClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varThirdClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varFourthClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recSecondClaimMember.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>numSecondClaimMemberPercentage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recThirdClaimMember.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>numThirdClaimMemberPercentage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recFourthClaimMember.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>numFourthClaimMemberPercentage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>NumberOfClaimMembersToCreate</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>We add the email address of the current Claim Member we&apos;re looping over to a collection-variable which will be used in the next element to send an email.</description>
        <name>AssignEmailAddresses</name>
        <label>Assign Email Addresses</label>
        <locationX>3596</locationX>
        <locationY>5559</locationY>
        <assignmentItems>
            <assignToReference>varSingleEmailAddress</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopClaimTeam.User__r.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ClaimTeamNotification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>In this assignment we use record variables for each unique Claim Member and assign the chosen percentage to them.</description>
        <name>AssignNewPercentages1</name>
        <label>Assign New Percentages 1 CM</label>
        <locationX>1119</locationX>
        <locationY>3111</locationY>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split1__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddToCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>In this assignment we use record variables for each unique Claim Member and assign the chosen percentage to them.</description>
        <name>AssignNewPercentages2</name>
        <label>Assign New Percentages 2 CM</label>
        <locationX>1243</locationX>
        <locationY>3114</locationY>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split1__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember2.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember2.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split2__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddToCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>In this assignment we use record variables for each unique Claim Member and assign the chosen percentage to them.</description>
        <name>AssignNewPercentages3</name>
        <label>Assign New Percentages 3 CM</label>
        <locationX>1364</locationX>
        <locationY>3114</locationY>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split1__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember2.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember2.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split2__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember3.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember3</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember3.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split3__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddToCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>In this assignment we use record variables for each unique Claim Member and assign the chosen percentage to them.</description>
        <name>AssignNewPercentages4</name>
        <label>Assign New Percentages 4 CM</label>
        <locationX>1499</locationX>
        <locationY>3116</locationY>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember1.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split1__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember2.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember2.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split2__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember3.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember3</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember3.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split3__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember4.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pickClaimMember4</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordClaimMember4.Percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Split4__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddToCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the Claim Member record variable where values were assigned to in the Assignment &apos;Assign Claim Members&apos; to a collection, which will be created in the following node.</description>
        <name>AssignOneClaimMember</name>
        <label>Assign one Claim Member</label>
        <locationX>50</locationX>
        <locationY>2798</locationY>
        <assignmentItems>
            <assignToReference>recClaimMembersToBeCreated</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recSecondClaimMember</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateExceptionClaimMembers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds three Claim Member record variables where values were assigned to in the Assignment &apos;Assign Claim Members&apos; to a collection, which will be created in the following node.</description>
        <name>AssignThreeClaimMembers</name>
        <label>Assign three Claim Members</label>
        <locationX>287</locationX>
        <locationY>2798</locationY>
        <assignmentItems>
            <assignToReference>recClaimMembersToBeCreated</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recSecondClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recClaimMembersToBeCreated</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recThirdClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recClaimMembersToBeCreated</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recFourthClaimMember</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateExceptionClaimMembers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds two Claim Member record variables where values were assigned to in the Assignment &apos;Assign Claim Members&apos; to a collection, which will be created in the following node.</description>
        <name>AssignTwoClaimMembers</name>
        <label>Assign two Claim Members</label>
        <locationX>167</locationX>
        <locationY>2786</locationY>
        <assignmentItems>
            <assignToReference>recClaimMembersToBeCreated</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recSecondClaimMember</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recClaimMembersToBeCreated</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recThirdClaimMember</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateExceptionClaimMembers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>This assignment counts the number of uploaded files which is done via an &apos;Equals Count&apos; operator taking the number of unique uploads in the collection variable &apos;varUploadedFiles&apos;.</description>
        <name>AssignUploadCount</name>
        <label>Assign Upload Count</label>
        <locationX>2616</locationX>
        <locationY>4348</locationY>
        <assignmentItems>
            <assignToReference>varFileUploadCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>varUploadedFiles</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsFileUploaded</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set a couple of variables that are used later in the flow as validations or criteria:
- varNumberOfEligibleClaimMembers is the number of Eligible Regular Claim Members which is used to determine whether Regular Claim is allowed and in specification of an Alternative Split.
- varCollectionOfCountries is the total list of Claim Member Areas on the Regular Claim Members used for the formula below
- varNumberOfUniqueCountries is the total of unique Claim Member Areas on the Claim Members, which is used to validate whether Regular Claim is allowed.
- varClaimMemberPercentageBreakdown is the combination of percentage splits from high to low of the Claim Members, used to prevent query of the current Split Deal when someone chooses alternative split later in this flow.</description>
        <name>CountNumberOfClaimMembers</name>
        <label>Count Number of Claim Members</label>
        <locationX>2399</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>varNumberOfEligibleClaimMembers</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCollectionOfCountries</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopClaimMembers.ClaimMemberArea__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNumberOfUniqueCountries</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forCountUniqueCountries</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varClaimMemberPercentageBreakdown</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopClaimMembers.Percentage__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopClaimMembers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CountNumberOfClaims</name>
        <label>Count Number of Claims</label>
        <locationX>2399</locationX>
        <locationY>740</locationY>
        <assignmentItems>
            <assignToReference>varNumberOfRegularClaims</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forCounterRegularClaims</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNumberOfExceptionClaimsExclPOS</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forCounterExceptionClaimsExclPOS</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNumberOfRegularOrExceptionClaims</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forCounterRegularOrExceptionClaims</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNumberOfSdrClaims</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forCounterSdrClaims</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopClaims</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>This is only to ensure that Claim Members are created, also when flow is closed in next screen, because otherwise a rollback happens.</description>
        <name>EnsureCreationOfClaimMembers</name>
        <label>Ensure Creation of Claim Members</label>
        <locationX>165</locationX>
        <locationY>3471</locationY>
        <assignmentItems>
            <assignToReference>varNone</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>None</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>scrCommitment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>In this assignment the collection variable is being emptied again to prevent that in the next iteration of the loop, the first Claim Member that was looped over is receiving another notification (and to prevent the 5 recipients limit is still being hit).</description>
        <name>RemoveEmailAddress</name>
        <label>Remove Email Address</label>
        <locationX>3468</locationX>
        <locationY>5737</locationY>
        <assignmentItems>
            <assignToReference>varSingleEmailAddress</assignToReference>
            <operator>RemoveAll</operator>
            <value>
                <elementReference>LoopClaimTeam.User__r.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopClaimTeam</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>choCreateNewClaim</name>
        <choiceText>Create a new Claim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Create a new Claim</stringValue>
        </value>
    </choices>
    <choices>
        <name>choCurrentPosAdvanceAmount</name>
        <choiceText>{!defaultPosAdvanceAmount}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>defaultPosAdvanceAmount</elementReference>
        </value>
    </choices>
    <choices>
        <name>choCurrentRatingAdyenFormulaImprove</name>
        <choiceText>{!defaultRatingAdyenFormulaImprove}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>defaultRatingAdyenFormulaImprove</elementReference>
        </value>
    </choices>
    <choices>
        <name>choCurrentRatingAdyenFormulaSuccess1</name>
        <choiceText>{!defaultRatingAdyenFormulaSuccess1}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>defaultRatingAdyenFormulaSuccess1</elementReference>
        </value>
    </choices>
    <choices>
        <name>choCurrentRatingAdyenFormulaSuccess2</name>
        <choiceText>{!defaultRatingAdyenFormulaSuccess2}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>defaultRatingAdyenFormulaSuccess2</elementReference>
        </value>
    </choices>
    <choices>
        <name>choDifferentSplitPercentages</name>
        <choiceText>Different Split Percentages</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Different Split Percentages</stringValue>
        </value>
    </choices>
    <choices>
        <name>choException</name>
        <choiceText>Exception</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Exception</stringValue>
        </value>
    </choices>
    <choices>
        <name>choExistingClaim</name>
        <choiceText>Existing Claim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Existing Claim</stringValue>
        </value>
    </choices>
    <choices>
        <name>choMerchantAccountClaim</name>
        <choiceText>Merchant Account Claim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Merchant Account Claim</stringValue>
        </value>
    </choices>
    <choices>
        <name>choNo</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No</stringValue>
        </value>
    </choices>
    <choices>
        <name>choNoOpportunity</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Don&apos;t relate to an Opportunity&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Dont relate to an Opportunity</stringValue>
        </value>
    </choices>
    <choices>
        <name>choOther</name>
        <choiceText>Other</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Other</stringValue>
        </value>
    </choices>
    <choices>
        <name>choPosAdvance</name>
        <choiceText>IPP Advance</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>IPP Advance</stringValue>
        </value>
    </choices>
    <choices>
        <name>choRegular</name>
        <choiceText>Regular</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Regular</stringValue>
        </value>
    </choices>
    <choices>
        <name>choSDR</name>
        <choiceText>SDR</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>SDR</stringValue>
        </value>
    </choices>
    <choices>
        <name>choYes</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes</stringValue>
        </value>
    </choices>
    <choices>
        <name>IssuingIncentive</name>
        <choiceText>Issuing Incentive</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Issuing Incentive</stringValue>
        </value>
    </choices>
    <decisions>
        <description>Decision to check if we need to retrieve an existing Claim Member, which happens if &apos;Current Claim Member is valid&apos; is TRUE. This would mean it&apos;s either Regular Claim where there should always be an existing Claim Member for the user in order to continue OR it&apos;s an exception and an existing Claim Member was chosen in the first screen.
If a new IPP Advance Claim was started, we need to query afterwards whether an open regular Claim Member for this user exists as you can only claim IPP Advance in advance of a Regular Claim.</description>
        <name>CheckForCurrentClaimMember</name>
        <label>Check for Current Claim Member</label>
        <locationX>1980</locationX>
        <locationY>1020</locationY>
        <defaultConnector>
            <targetReference>IsClaimAllowed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CurrentClaimMemberIsValid</name>
            <conditionLogic>(1 AND 2) OR 3</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varClaimMemberToBeUpdated</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCurrentClaimMember</targetReference>
            </connector>
            <label>Current Claim Member is valid</label>
        </rules>
        <rules>
            <name>CheckWhetherPOSAdvanceIsAllowed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FindRegularClaimMember</targetReference>
            </connector>
            <label>Check whether IPP Advance is Allowed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision that first checks whether only unique Claim Members were chosen in the dividing screen. If not, it brings you back to the previous screen. If correctly selected, it needs to check the number of eligible Claim Members to correctly assign the percentages.</description>
        <name>ClaimMembersSelected</name>
        <label>Claim Members Selected?</label>
        <locationX>1326</locationX>
        <locationY>2882</locationY>
        <defaultConnectorLabel>Error</defaultConnectorLabel>
        <rules>
            <name>IncorrectSelection</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>forCorrectSelection</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrDivideNewSplit</targetReference>
            </connector>
            <label>Incorrect Selection</label>
        </rules>
        <rules>
            <name>X1ClaimMember</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNewPercentages1</targetReference>
            </connector>
            <label>1</label>
        </rules>
        <rules>
            <name>X2ClaimMembers</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNewPercentages2</targetReference>
            </connector>
            <label>2</label>
        </rules>
        <rules>
            <name>X3ClaimMembers</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>3.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNewPercentages3</targetReference>
            </connector>
            <label>3</label>
        </rules>
        <rules>
            <name>X4ClaimMembers</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>4.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNewPercentages4</targetReference>
            </connector>
            <label>4</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision to see whether the user choose an alternative split. If so, the split needs to be divided.</description>
        <name>DecidedForAlternativeSplit</name>
        <label>Decided for Alternative Split?</label>
        <locationX>1791</locationX>
        <locationY>2820</locationY>
        <defaultConnector>
            <targetReference>SetCheckpointOnClaim</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesAlternativeSplit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>tableAlternativeSplit.firstSelectedRow.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrDivideNewSplit</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision based on the isNotClaimable__c checkbox on Account to validate if the Account can be claimed or not.</description>
        <name>decIsAccountClaimable</name>
        <label>dec Is Account Claimable</label>
        <locationX>2189</locationX>
        <locationY>578</locationY>
        <defaultConnector>
            <targetReference>GetClaims</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Can be claimed</defaultConnectorLabel>
        <rules>
            <name>NotClaimable</name>
            <conditionLogic>(1 AND 2) OR (1 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>GetAccount.isNotClaimable__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SDR</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WarningNoManagerAssigned</targetReference>
            </connector>
            <label>Not Claimable</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision checks whether the current claim concerns an Exception Claim, but not of the type &apos;IPP Advance&apos; or &apos;Issuing Incentive&apos;. If so, the user could have submitted an Exception Request in advance and can link that in the next screen to skip the step of uploading evidence.</description>
        <name>decisionExceptionClaim</name>
        <label>Exception Claim?</label>
        <locationX>2307</locationX>
        <locationY>3925</locationY>
        <defaultConnector>
            <targetReference>scrUploadFiles</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesExceptionClaim</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Issuing Incentive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrExceptionRequest</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision to see if a Claim record already exists. This could be the case if a Regular Claim is done by a second, third or fourth user, or when someone is part of an Exception that holds multiple Claim Members.</description>
        <name>DoesClaimExist</name>
        <label>Does Claim exist?</label>
        <locationX>1978</locationX>
        <locationY>1592</locationY>
        <defaultConnector>
            <targetReference>CreateClaim</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Claim does not exist</defaultConnectorLabel>
        <rules>
            <name>ClaimDoesExist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Claim__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DoesClaimMemberExist</targetReference>
            </connector>
            <label>Claim does exist</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if the Claim Member already exists. For Regular this will always be the case, otherwise you can&apos;t reach this point. However, for Exception &amp; SDR claims, this is the point where the Claim Member is being created for the running user (if no existing Exception Claim was chosen).</description>
        <name>DoesClaimMemberExist</name>
        <label>Does Claim Member exist?</label>
        <locationX>1980</locationX>
        <locationY>1763</locationY>
        <defaultConnector>
            <targetReference>CreateClaimMember</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Claim Member does not exist</defaultConnectorLabel>
        <rules>
            <name>ClaimMemberDoesExist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateAdyenFormulaOnClaimMember</targetReference>
            </connector>
            <label>Claim Member does exist</label>
        </rules>
    </decisions>
    <decisions>
        <description>A couple of outcomes are tested on the Existing Claim that was retrieved in the previous GET. This determines whether details that should have been populated are not yet available and based on that we know where the flow was cut-off last time. The running user will be returned to the step where the flow was cut-off last time.

Order of execution:
1. If the Comments field on an Exception (except IPP Advance or Issuing Incentive) is empty, the Exception Screen will follow.
2. If the IPP Advance Amount is empty on an IPP Advance Exception Claim, the IPP Advance screen will follow.
3. If the PSP Reference is empty on an Issuing Incentive Exception Claim, the Issuing Incentive screen will follow.
4. If the checkpoint split checkbox is FALSE on a Regular Claim, the flow was cut-off when the user had to decide whether he/she agreed with the current split.
5. If Commitment details are empty on an Exception or Regular Claim, the flow was cut-off at the Commitment screen.
6. If all above is not true AND it&apos;s not a SDR, IPP Advance or Issuing Incentive claim, this path is followed which is used to show details around the chosen split &amp; commitment to the current running user, just informative.
7. If nothing is true, it will query whether a file was already uploaded. If not it brings the user to the File upload screen.</description>
        <name>ExistingClaimDecisions</name>
        <label>Existing Claim Decisions</label>
        <locationX>2498</locationX>
        <locationY>2576</locationY>
        <defaultConnector>
            <targetReference>GetClaimFiles</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Query for Files</defaultConnectorLabel>
        <rules>
            <name>ExceptionClaimDetailsMissing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetExistingClaim.Comments__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>IssuingIncentive</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrExceptionClaim</targetReference>
            </connector>
            <label>Exception Claim Details Missing</label>
        </rules>
        <rules>
            <name>POSAdvanceDetailsMissing</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.PosAdvanceAmount__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCreatedClaimMemberId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrPosAdvance</targetReference>
            </connector>
            <label>IPP Advance Details Missing</label>
        </rules>
        <rules>
            <name>IssuingIncentiveDetailsMissing</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Issuing Incentive</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.PSP_Reference__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCreatedClaimMemberId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrIssuingIncentive</targetReference>
            </connector>
            <label>Issuing Incentive Details Missing</label>
        </rules>
        <rules>
            <name>RegularSplitCheckpointNotReached</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetExistingClaim.CheckpointSplit__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetExistingClaim.NumberOfClaimMembersApproved__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetExistingClaim.NumberOfClaimMembersInProgress__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetSplitDeals</targetReference>
            </connector>
            <label>Regular - Split Checkpoint Not Reached</label>
        </rules>
        <rules>
            <name>CommitmentNotPopulated</name>
            <conditionLogic>((1 AND 2) OR 3) AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetExistingClaim.FixedCommitment__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Issuing Incentive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrCommitment</targetReference>
            </connector>
            <label>Commitment Not Populated</label>
        </rules>
        <rules>
            <name>NotSDRAndPOSAdvance</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>SDR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Issuing Incentive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetRelatedClaimMembers</targetReference>
            </connector>
            <label>Not SDR &amp; IPP Advance &amp; Issuing Incentive</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision to check whether a File was attached to the existing Claim. If so, the user will skip the file upload screen, otherwise that will be the next screen.</description>
        <name>FilesFound</name>
        <label>Files Found?</label>
        <locationX>2645</locationX>
        <locationY>3275</locationY>
        <defaultConnector>
            <targetReference>decisionExceptionClaim</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesFileFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetClaimFiles</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrSubmitClaimForApproval</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>For each type of Claim we check whether it&apos;s allowed.
SDR -&gt; Not allowed if Merchant Status is not one of the mentioned values, or when there is already a SDR claim, or the profile of the user is not one oof the mentioned values.
Regular -&gt; Not allowed if Merchant Status is not one of the mentioned values, or when the Claim Member is already in one of the mentioned values (thus in approval/approved/blocked), or there are more than 2 Claim Members, but unique countries does not equal the number of Claim Members, or there is already an Exception Claim whereas the current regular Claim Member hasn&apos;t started their claim yet, or TODAY is exceeding the last date to claim on Account, or there is no Business Model Based on Adyen Data.
Exception -&gt; Not allowed if the type is IPP Advance and neither an existing Claim Member was selected nor there is an open eligible regular Claim Member for this user, or the selected existing Claim Member in the first screen does not match the type of Exception Claim selected in that same screen.</description>
        <name>IsClaimAllowed</name>
        <label>Is Claim allowed?</label>
        <locationX>1980</locationX>
        <locationY>1175</locationY>
        <defaultConnector>
            <targetReference>scrAdyenFormula</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Claim is allowed</defaultConnectorLabel>
        <rules>
            <name>SdrClaimIsNotAllowed</name>
            <conditionLogic>1 AND ((2 AND 3 AND 4 AND 5 AND 6 AND 7) OR 8 OR (9 AND 10))</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SDR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Prospect</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Onboarding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Live</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Transacting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Churning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Churned</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varNumberOfSdrClaims</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetUser.Profile.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Adyen v2 Salessupport</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetUser.Profile.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Adyen v2 Salessupport Lead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrSdrClaimNotAllowed</targetReference>
            </connector>
            <label>SDR Claim is not allowed</label>
        </rules>
        <rules>
            <name>RegularClaimIsNotAllowed</name>
            <conditionLogic>1 AND ((2 AND 3 AND 4 AND 5 AND 6) OR 7 OR 8 OR 9 OR 10 OR 11 OR 18 OR (12 AND 13) OR (14 AND 15) OR 16 OR 17)</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Onboarding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Live</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Transacting</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Churning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Churned</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Submitted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Approved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Blocked by Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varNumberOfUniqueCountries</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>varNumberOfEligibleClaimMembers</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varNumberOfExceptionClaimsExclPOS</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No claim started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Flow.CurrentDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>SendClaimReminderFormula</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetAccount.BusinessModelBasedOnAdyenData__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Approved Leaver</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrRegularClaimNotAllowed</targetReference>
            </connector>
            <label>Regular Claim is not allowed</label>
        </rules>
        <rules>
            <name>ExceptionClaimIsNotAllowed</name>
            <conditionLogic>1 AND ((2 AND 3 AND 4) OR (5 AND 6))</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>FindRegularClaimMember</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.Claim__r.ClaimType__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>radTypeOfExceptionClaim</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrExceptionClaimNotAllowed</targetReference>
            </connector>
            <label>Exception Claim is not allowed</label>
        </rules>
    </decisions>
    <decisions>
        <description>In this decision is checked whether the Eligible Sales Lead was updated in the previous screen (in case of an Exception or SDR claim) and whether that deviates from the current manager. If so, the outcome is true and an email will be sent to the new Eligible Sales Lead in the next element. In case of Regular Claims or IPP Advance / Issuing Incentive exceptions users are not able to update the Eligible Sales Lead, so instead it&apos;s checked whether the set Eligible Sales Lead on creation of the Claim Member differs from the current Manager. If so, again an email is sent to the Eligible Sales Lead.</description>
        <name>IsEslOtherThanCm</name>
        <label>Is ESL other than CM?</label>
        <locationX>3278</locationX>
        <locationY>5925</locationY>
        <defaultConnector>
            <targetReference>scrClaimMemberSubmitted</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>EslIsOtherThanCm</name>
            <conditionLogic>(1 AND 2 AND (3 OR 4)) OR (5 AND 6 AND (7 OR 8 OR 9))</conditionLogic>
            <conditions>
                <leftValueReference>varUpdatedEligibleSalesLead</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varUpdatedEligibleSalesLead</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>GetUser.ManagerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SDR</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.EligibleSalesLead__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCurrentClaimMember.EligibleSalesLead__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>GetUser.ManagerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Issuing Incentive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetEligibleSalesLead</targetReference>
            </connector>
            <label>ESL is other than CM</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision to check if File Upload was required and if so, it was also done. If not, it takes the user back to the file upload screen.</description>
        <name>IsFileUploaded</name>
        <label>Is File uploaded?</label>
        <locationX>2609</locationX>
        <locationY>4685</locationY>
        <defaultConnector>
            <targetReference>scrFileUploadFailed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>FileIsUploaded</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>varFileUploadCount</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forFileUploadRequired</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrSubmitClaimForApproval</targetReference>
            </connector>
            <label>File is uploaded</label>
        </rules>
    </decisions>
    <decisions>
        <description>This Decision element has quite some outcomes that run in a certain order as it checks based on type of Claim and the state of it (new or existing) what path to take. Different details are necessary for the various types.</description>
        <name>IsNewClaimCreated</name>
        <label>Is New Claim created?</label>
        <locationX>1987</locationX>
        <locationY>2333</locationY>
        <defaultConnector>
            <targetReference>GetExistingClaim</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Existing Claim</defaultConnectorLabel>
        <rules>
            <name>NewSdrClaimIsCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCreatedClaimId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SDR</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decisionExceptionClaim</targetReference>
            </connector>
            <label>New SDR Claim is created</label>
        </rules>
        <rules>
            <name>NewPOSAdvanceClaimIsCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCreatedClaimId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPP Advance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrPosAdvance</targetReference>
            </connector>
            <label>New IPP Advance Claim is created</label>
        </rules>
        <rules>
            <name>NewIssuingIncentiveClaimisCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCreatedClaimId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Issuing Incentive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrIssuingIncentive</targetReference>
            </connector>
            <label>New Issuing Incentive Claim is Created</label>
        </rules>
        <rules>
            <name>NewExceptionClaimIsCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCreatedClaimId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Exception</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrExceptionClaim</targetReference>
            </connector>
            <label>New Exception Claim is created</label>
        </rules>
        <rules>
            <name>NewRegularClaimIsCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCreatedClaimId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetSplitDeals</targetReference>
            </connector>
            <label>New Regular Claim is created</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is a decision to see whether this concerns a Regular Claim. If so, all other Regular Claim Members on the Account need to be linked to the new Regular Claim as well and need to be moved to &apos;Eligible&apos;.</description>
        <name>IsRegularClaim</name>
        <label>Is Regular Claim?</label>
        <locationX>1983</locationX>
        <locationY>2090</locationY>
        <defaultConnector>
            <targetReference>IsNewClaimCreated</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RegularClaimRequest</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateClaimRelation</targetReference>
            </connector>
            <label>Regular Claim request</label>
        </rules>
    </decisions>
    <decisions>
        <description>Decision to check whether the Manager field on the logged in user is assigned. If not, OR if the assigned manager is an inactive user, the outcome will lead to a screen explaining the user can&apos;t claim due to invalid or no assignment of a manager which is required for approval.</description>
        <name>ManagerFieldPopulated</name>
        <label>Manager field populated?</label>
        <locationX>2016</locationX>
        <locationY>449</locationY>
        <defaultConnector>
            <targetReference>FindExistingExceptionClaimMember</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Manager Assigned</defaultConnectorLabel>
        <rules>
            <name>NoManagerAssignedorInactive</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetUser.Manager__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetUser.Manager.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WarningNoManagerAssigned</targetReference>
            </connector>
            <label>No Manager Assigned or Inactive</label>
        </rules>
    </decisions>
    <decisions>
        <description>This decision checks how many Claim Members were named in the Exception Screen. This is done to determine how many of the Claim Member record variables from previous assignment need to be added to a collection to create them in bulk.</description>
        <name>NumberOfClaimMembersToCreate</name>
        <label>Number of Claim Members to create</label>
        <locationX>157</locationX>
        <locationY>2555</locationY>
        <defaultConnector>
            <targetReference>scrCommitment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>One</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignOneClaimMember</targetReference>
            </connector>
            <label>One</label>
        </rules>
        <rules>
            <name>Two</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>3.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignTwoClaimMembers</targetReference>
            </connector>
            <label>Two</label>
        </rules>
        <rules>
            <name>Three</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>4.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignThreeClaimMembers</targetReference>
            </connector>
            <label>Three</label>
        </rules>
    </decisions>
    <decisions>
        <description>A decision to check whether this is a SDR claim. If it&apos;s not a SDR claim, we&apos;re going to retrieve all Regular Claim Members and notify them that the running user has submitted his/her piece of the Account to claim.</description>
        <name>WhatClaimType</name>
        <label>What Claim Type?</label>
        <locationX>3274</locationX>
        <locationY>5379</locationY>
        <defaultConnector>
            <targetReference>IsEslOtherThanCm</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>SDR Claim</defaultConnectorLabel>
        <rules>
            <name>NotSDRClaim</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>radTypeOfClaim</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>SDR</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetClaimTeam</targetReference>
            </connector>
            <label>Not SDR Claim</label>
        </rules>
    </decisions>
    <description>Last Update: Descriptions added in all Elements</description>
    <dynamicChoiceSets>
        <name>choClaimMembers</name>
        <dataType>String</dataType>
        <displayField>ClaimName__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>User__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forExceptionClaimMemberRT</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Claim__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Pending</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Inactive</stringValue>
            </value>
        </filters>
        <object>ClaimMembers__c</object>
        <outputAssignments>
            <assignToReference>varClaimMemberToBeUpdated</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choClaimMidMarketIncentive</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>ClaimMidMarketIncentive__c</picklistField>
        <picklistObject>ClaimMembers__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choCurrencySet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>CurrencyIsoCode</picklistField>
        <picklistObject>Claim__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choDidYouWorkWithSalesEnterprise</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>DidWorkWithSalesEnterpriseOnDeal__c</picklistField>
        <picklistObject>ClaimMembers__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choExceedsMMMArginThreshold</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>ExceedsMMMarginThreshold__c</picklistField>
        <picklistObject>ClaimMembers__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choIssuingOpportunity</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Transacting</stringValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Sales_channel__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Issuing</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <sortField>CloseDate</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choOpportunity</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Transacting</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputAssignments>
            <assignToReference>varOpportunity</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>CloseDate</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choPosAdvanceAmount</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ClaimMembers__c.00N3W000000VSVt</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentPosAdvanceAmount</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedPosAdvanceAmount</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choRatingAdyenFormulaImprove</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ClaimMembers__c.00N3W000000VSVv</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentRatingAdyenFormulaImprove</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedRatingAdyenFormulaImprove</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choRatingAdyenFormulaSuccess1</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ClaimMembers__c.00N3W000000VSVw</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentRatingAdyenFormulaSuccess1</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedRatingAdyenFormulaSuccess1</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choRatingAdyenFormulaSuccess2</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ClaimMembers__c.00N3W000000VSVx</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentRatingAdyenFormulaSuccess2</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedRatingAdyenFormulaSuccess2</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>collectionchoiceClaimMembers</name>
        <collectionReference>GetEligibleRegularClaimMembers</collectionReference>
        <dataType>String</dataType>
        <displayField>ClaimMemberName__c</displayField>
        <object>ClaimMembers__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>recordchoExceptionRequests</name>
        <dataType>String</dataType>
        <displayField>FlowChoice__c</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>MemberIds__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <object>ExceptionRequest__c</object>
        <sortField>ApprovedDate__c</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>defaultPosAdvanceAmount</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK(TEXT({!GetCurrentClaimMember.PosAdvanceAmount__c}))),
TEXT({!GetCurrentClaimMember.PosAdvanceAmount__c}),
&quot;EUR 5,000.00&quot;)</expression>
    </formulas>
    <formulas>
        <name>defaultRatingAdyenFormulaImprove</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK(TEXT({!GetCurrentClaimMember.RatingAdyenFormulaImprove__c}))),
TEXT({!GetCurrentClaimMember.RatingAdyenFormulaImprove__c}),
&quot;A.B.C.&quot;)</expression>
    </formulas>
    <formulas>
        <name>defaultRatingAdyenFormulaSuccess1</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK(TEXT({!GetCurrentClaimMember.RatingAdyenFormulaSuccess1__c}))),
TEXT({!GetCurrentClaimMember.RatingAdyenFormulaSuccess1__c}),
&quot;A.B.C.&quot;)</expression>
    </formulas>
    <formulas>
        <name>defaultRatingAdyenFormulaSuccess2</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK(TEXT({!GetCurrentClaimMember.RatingAdyenFormulaSuccess2__c}))),
TEXT({!GetCurrentClaimMember.RatingAdyenFormulaSuccess2__c}),
&quot;A.B.C.&quot;)</expression>
    </formulas>
    <formulas>
        <name>forClaimIDForOtherMembers</name>
        <dataType>String</dataType>
        <expression>BLANKVALUE({!varCreatedClaimId}, {!GetExistingClaim.Id})</expression>
    </formulas>
    <formulas>
        <name>forClaimMemberArea</name>
        <dataType>String</dataType>
        <expression>IF(TEXT({!GetUser.SalesCountry__c})=&quot;United States&quot;,TEXT({!GetUser.SalesArea__c}),TEXT({!GetUser.SalesCountry__c}))</expression>
    </formulas>
    <formulas>
        <name>forClaimMemberRT</name>
        <dataType>String</dataType>
        <expression>IF({!radTypeOfClaim}=&quot;Exception&quot;,{!$Label.ExceptionClaimMember},
IF({!radTypeOfClaim}=&quot;SDR&quot;,{!$Label.SdrClaimMember},
IF({!radTypeOfClaim}=&quot;Regular&quot;,{!$Label.RegularClaimMember},
&quot;&quot;)))</expression>
    </formulas>
    <formulas>
        <name>forClaimMemberStartDate</name>
        <dataType>Date</dataType>
        <expression>IF({!radTypeOfExceptionClaim} = &quot;IPP Advance&quot;,DATE(YEAR({!$Flow.CurrentDate})+2,MONTH({!$Flow.CurrentDate}),IF(AND(MONTH({!$Flow.CurrentDate})=2,DAY({!$Flow.CurrentDate})=29),28,DAY({!$Flow.CurrentDate}))),{!$Flow.CurrentDate})</expression>
    </formulas>
    <formulas>
        <name>forClaimMemberToUpdate</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varCreatedClaimMemberId})),{!varCreatedClaimMemberId},{!GetCurrentClaimMember.Id})</expression>
    </formulas>
    <formulas>
        <name>forClaimRecordLink</name>
        <dataType>String</dataType>
        <expression>{!$Label.SFDomain} + {!forClaimToUpdate}</expression>
    </formulas>
    <formulas>
        <name>forClaimRT</name>
        <dataType>String</dataType>
        <expression>IF({!radTypeOfClaim} = &quot;Exception&quot;,{!$Label.ExceptionClaim},
IF({!radTypeOfClaim} = &quot;SDR&quot;,{!$Label.SdrClaim},
{!$Label.RegularClaim}))</expression>
    </formulas>
    <formulas>
        <name>forClaimToUpdate</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varCreatedClaimId})),{!varCreatedClaimId},{!GetCurrentClaimMember.Claim__c})</expression>
    </formulas>
    <formulas>
        <description>Determines Claim Type picklist value on Claim</description>
        <name>forClaimType</name>
        <dataType>String</dataType>
        <expression>IF({!radTypeOfClaim} = &quot;Exception&quot;, {!radTypeOfExceptionClaim},
{!radTypeOfClaim})</expression>
    </formulas>
    <formulas>
        <name>forCorrectSelection</name>
        <dataType>Boolean</dataType>
        <expression>IF(
{!varNumberOfEligibleClaimMembers} =  1,
TRUE,

IF(
{!varNumberOfEligibleClaimMembers} =  2,
{!pickClaimMember1} &lt;&gt; {!pickClaimMember2},

IF(
{!varNumberOfEligibleClaimMembers} =  3,
AND(
{!pickClaimMember1} &lt;&gt; {!pickClaimMember2},
{!pickClaimMember1} &lt;&gt; {!pickClaimMember3},
{!pickClaimMember2} &lt;&gt; {!pickClaimMember3}),

IF(
{!varNumberOfEligibleClaimMembers} =  4,
AND(
{!pickClaimMember1} &lt;&gt; {!pickClaimMember2},
{!pickClaimMember1} &lt;&gt; {!pickClaimMember3},
{!pickClaimMember1} &lt;&gt; {!pickClaimMember4},
{!pickClaimMember2} &lt;&gt; {!pickClaimMember3},
{!pickClaimMember2} &lt;&gt; {!pickClaimMember4},
{!pickClaimMember3} &lt;&gt; {!pickClaimMember4}),

FALSE
))))</expression>
    </formulas>
    <formulas>
        <name>forCounterExceptionClaimsExclPOS</name>
        <dataType>Number</dataType>
        <expression>IF(
AND(
{!LoopClaims.RecordTypeId} = {!$Label.ExceptionClaim}, 
TEXT({!LoopClaims.ClaimType__c}) &lt;&gt; &apos;IPP Advance&apos;, 
TEXT({!LoopClaims.ClaimType__c}) &lt;&gt; &apos;Issuing Incentive&apos;, 
{!LoopClaims.ClaimStatusFormula__c} &lt;&gt; &apos;Inactive&apos;,
{!LoopClaims.ClaimStatusFormula__c} &lt;&gt; &apos;Rejected&apos;
),
1,0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forCounterRegularClaims</name>
        <dataType>Number</dataType>
        <expression>IF({!LoopClaims.RecordTypeId} = {!$Label.RegularClaim},1,0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forCounterRegularOrExceptionClaims</name>
        <dataType>Number</dataType>
        <expression>IF(OR({!LoopClaims.RecordTypeId} = {!$Label.RegularClaim},{!LoopClaims.RecordTypeId} = {!$Label.ExceptionClaim}),1,0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forCounterSdrClaims</name>
        <dataType>Number</dataType>
        <expression>IF({!LoopClaims.RecordTypeId} = {!$Label.SdrClaim},1,0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forCountUniqueCountries</name>
        <dataType>Number</dataType>
        <expression>IF(CONTAINS({!varCollectionOfCountries},{!LoopClaimMembers.ClaimMemberArea__c}),0,1)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forCurrentUserId</name>
        <dataType>String</dataType>
        <expression>{!$User.Id}</expression>
    </formulas>
    <formulas>
        <name>forCurrentUserName</name>
        <dataType>String</dataType>
        <expression>{!$User.FirstName}&amp;&quot; &quot;&amp;{!$User.LastName}</expression>
    </formulas>
    <formulas>
        <name>forEligibleSalesLead</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varUpdatedEligibleSalesLead})),{!varUpdatedEligibleSalesLead},
IF(NOT(ISBLANK({!GetCurrentClaimMember.EligibleSalesLead__c})),{!GetCurrentClaimMember.EligibleSalesLead__c},{!GetUser.ManagerId}))</expression>
    </formulas>
    <formulas>
        <name>forExceptionClaimMemberRT</name>
        <dataType>String</dataType>
        <expression>{!$Label.ExceptionClaimMember}</expression>
    </formulas>
    <formulas>
        <name>forFileUploadRequired</name>
        <dataType>Boolean</dataType>
        <expression>OR
(
{!radTypeOfClaim} = &apos;SDR&apos; ,
({!radTypeOfClaim} = &apos;Exception&apos; &amp;&amp; {!pickReceivedApprovalExceptionRequest} &lt;&gt; &apos;Yes&apos;),
{!radTypeOfExceptionClaim} = &apos;IPP Advance&apos; ,
{!radTypeOfExceptionClaim} = &apos;Issuing Incentive&apos; ,
NOT(ISNULL({!numCommitmentInYears} )) ,
NOT(ISNULL({!numCommitmentInNumberOfMonthlyTransactions} )),
NOT(ISNULL({!GetExistingClaim.CommitmentInYears__c} )),
NOT(ISNULL({!GetExistingClaim.CommittedTransactions__c} ))
)</expression>
    </formulas>
    <formulas>
        <name>forInvalidExceptionType</name>
        <dataType>Boolean</dataType>
        <expression>TEXT({!GetCurrentClaimMember.Claim__r.ClaimType__c}) &lt;&gt; {!radTypeOfExceptionClaim}</expression>
    </formulas>
    <formulas>
        <name>forLiveAccountRT</name>
        <dataType>String</dataType>
        <expression>{!$Label.Live_Account_V2}</expression>
    </formulas>
    <formulas>
        <name>forMMICountryValid</name>
        <dataType>Boolean</dataType>
        <expression>OR(
TEXT({!GetAccount.BillingCountryCode}) = &quot;AT&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;BE&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;CH&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;DE&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;ES&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;FR&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;GB&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;IE&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;LU&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;NL&quot;,
TEXT({!GetAccount.BillingCountryCode}) = &quot;PT&quot;)</expression>
    </formulas>
    <formulas>
        <name>forNoValidRegularClaimMember</name>
        <dataType>Boolean</dataType>
        <expression>AND(
{!FindRegularClaimMember.Id} = NULL,
{!GetCurrentClaimMember.Id} = NULL,
{!radTypeOfExceptionClaim} = &apos;IPP Advance&apos;)</expression>
    </formulas>
    <formulas>
        <name>forProspectAccountRT</name>
        <dataType>String</dataType>
        <expression>{!$Label.Prospect_Account_V2}</expression>
    </formulas>
    <formulas>
        <name>forRegularClaimMemberRT</name>
        <dataType>String</dataType>
        <expression>{!$Label.RegularClaimMember}</expression>
    </formulas>
    <formulas>
        <name>forSalesSupportUkRoleId</name>
        <dataType>String</dataType>
        <expression>{!$Label.SalesSupportUkRoleId}</expression>
    </formulas>
    <formulas>
        <name>forShowCommitment</name>
        <dataType>Boolean</dataType>
        <expression>OR(
NOT(ISBLANK({!GetExistingClaim.CommitmentInYears__c})),
NOT(ISBLANK({!GetExistingClaim.CommittedTransactions__c})),
NOT(ISBLANK({!GetExistingClaim.CostsPerTransaction__c}))
)</expression>
    </formulas>
    <formulas>
        <name>SendClaimReminderFormula</name>
        <dataType>Date</dataType>
        <expression>ADDMONTHS({!GetAccount.SendClaimReminderDate__c},3)</expression>
    </formulas>
    <interviewLabel>Claim Commission {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Commission Claiming</label>
    <loops>
        <description>Loop over ALL the Claims Members that were queried in the last element to do a couple of validations.</description>
        <name>LoopClaimMembers</name>
        <label>Loop Claim Members</label>
        <locationX>2209</locationX>
        <locationY>878</locationY>
        <collectionReference>GetEligibleRegularClaimMembers</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CountNumberOfClaimMembers</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CheckForCurrentClaimMember</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Loop over ALL the related Claims that were queried in the last element to do a couple of validations.</description>
        <name>LoopClaims</name>
        <label>Loop Claims</label>
        <locationX>2208</locationX>
        <locationY>740</locationY>
        <collectionReference>GetClaims</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CountNumberOfClaims</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetEligibleRegularClaimMembers</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>We&apos;re looping over the collection of fellow Claim Members that was queried in the last element. This is done to send an email to them 1 by 1, because there is a LIMIT of only 5 recipients when using Flow Email and there are Accounts that have more than 5 regular Claim Members. To prevent hitting limits we&apos;re sending the emails 1 by 1 via this loop.</description>
        <name>LoopClaimTeam</name>
        <label>Loop Claim Team</label>
        <locationX>3453</locationX>
        <locationY>5559</locationY>
        <collectionReference>GetClaimTeam</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignEmailAddresses</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>IsEslOtherThanCm</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <description>Creates the Claim record, which is important to be able to attach the Claim Member(s) to it. The Record Type and Claim Type are dependent on the type of Claim decided in the first screen of this flow.</description>
        <name>CreateClaim</name>
        <label>Create Claim</label>
        <locationX>2223</locationX>
        <locationY>1600</locationY>
        <assignRecordIdToReference>varCreatedClaimId</assignRecordIdToReference>
        <connector>
            <targetReference>DoesClaimMemberExist</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen2</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ClaimBy__c</field>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ClaimType__c</field>
            <value>
                <elementReference>forClaimType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>forClaimRT</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordCreates>
    <recordCreates>
        <description>This is the point where the Claim Member is being created and all Adyen Formula fields are being populated. The Claim Member is created in &apos;Eligible&apos; status and this will only happen for SDR or Exception Claim Members, as Regular Claim member need to exist in advance.</description>
        <name>CreateClaimMember</name>
        <label>Create Claim Member</label>
        <locationX>2224</locationX>
        <locationY>1766</locationY>
        <assignRecordIdToReference>varCreatedClaimMemberId</assignRecordIdToReference>
        <connector>
            <targetReference>IsRegularClaim</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen2</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AnswerAdyenFormulaImprove__c</field>
            <value>
                <elementReference>txtAnswerAdyenFormulaImprove</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AnswerAdyenFormulaSuccess1__c</field>
            <value>
                <elementReference>txtAnswerAdyenFormulaSuccess1</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AnswerAdyenFormulaSuccess2__c</field>
            <value>
                <elementReference>txtAnswerAdyenFormulaSuccess2</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ClaimMemberArea__c</field>
            <value>
                <elementReference>forClaimMemberArea</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ClaimMidMarketIncentive__c</field>
            <value>
                <elementReference>pickClaimMidMarketIncentive</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Claim__c</field>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DidWorkWithSalesEnterpriseOnDeal__c</field>
            <value>
                <elementReference>pickDidYouWorkWithSalesEnterpriseOnThisDeal</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ExceedsMMMarginThreshold__c</field>
            <value>
                <elementReference>pickExceedsMMMarginThreshold</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RatingAdyenFormulaImprove__c</field>
            <value>
                <elementReference>pickRatingAdyenFormulaImprove</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RatingAdyenFormulaSuccess1__c</field>
            <value>
                <elementReference>pickRatingAdyenFormulaSuccess1</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RatingAdyenFormulaSuccess2__c</field>
            <value>
                <elementReference>pickRatingAdyenFormulaSuccess2</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>forClaimMemberRT</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Eligible</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>User__c</field>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordCreates>
    <recordCreates>
        <description>Bulk creation of the collection of Exception Claim Members that was assigned to the collection in the previous assignment. This depends on how many other Exception Claim Members were specified by the running user.</description>
        <name>CreateExceptionClaimMembers</name>
        <label>Create Exception Claim Members</label>
        <locationX>165</locationX>
        <locationY>3006</locationY>
        <connector>
            <targetReference>EnsureCreationOfClaimMembers</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen6</targetReference>
        </faultConnector>
        <inputReference>recClaimMembersToBeCreated</inputReference>
    </recordCreates>
    <recordLookups>
        <description>This query is done to determine whether there are already existing open Exception Claims where this user is related to. This is likely to happen if a colleague started an Exception for multiple people. If so, this will result in a visual warning in the next screen when the user wants to start an Exception Claim, so he/she is alerted to choose an existing Claim Member to continue on. Therefore, this should use same criteria as the choClaimMembers Record Choice Set.</description>
        <name>FindExistingExceptionClaimMember</name>
        <label>Find Existing Exception Claim Member</label>
        <locationX>1761</locationX>
        <locationY>521</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>scrTypeOfClaim</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>User__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forExceptionClaimMemberRT</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Claim__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Pending</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Inactive</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Approved Leaver</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ClaimMembers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Tries to find an eligible open Regular Claim Member for this User on the Account. If not found, it means the user is not eligible to do an IPP Advance claim.</description>
        <name>FindRegularClaimMember</name>
        <label>Find Regular Claim Member</label>
        <locationX>1765</locationX>
        <locationY>1014</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsClaimAllowed</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>User__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forRegularClaimMemberRT</elementReference>
            </value>
        </filters>
        <filters>
            <field>EligibleForClaim__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Inactive</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Blocked by Exception</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Pending</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Approved Leaver</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ClaimMembers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves all fields from the Account from where the user has clicked on the &apos;Claim Account&apos; button. Details are later necessary in the Flow.</description>
        <name>GetAccount</name>
        <label>Get Account</label>
        <locationX>1999</locationX>
        <locationY>194</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetUser</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Query of the Files that are attached to the current Claim</description>
        <name>GetClaimFiles</name>
        <label>Get Claim Files</label>
        <locationX>2568</locationX>
        <locationY>2932</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FilesFound</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen3</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LinkedEntityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetExistingClaim.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ContentDocumentLink</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Query of ALL related Claim records on the Account which is used to do a couple of validations on various number of Claims to determine whether the process can be continued.</description>
        <name>GetClaims</name>
        <label>Get Claims</label>
        <locationX>1993</locationX>
        <locationY>735</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopClaims</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Claim__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>In this &apos;GET&apos; all the other Regular Claim Members (independent of eligibility) that are linked to the Account and not yet approved are being retrieved. We&apos;re going to notify them in the next part.</description>
        <name>GetClaimTeam</name>
        <label>Get Claim Team</label>
        <locationX>3454</locationX>
        <locationY>5380</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopClaimTeam</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen5</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>User__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.RegularClaimMember</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ClaimMembers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Here we GET either the chosen Exception Claim Member (varClaimMemberToBeUpdated) in the initial screen or an eligible Regular Claim Member for the Account. We need those details to verify whether claiming is allowed and in order to update the Claim Member record in this flow.</description>
        <name>GetCurrentClaimMember</name>
        <label>Get Current Claim Member</label>
        <locationX>2283</locationX>
        <locationY>1027</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsClaimAllowed</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen2</targetReference>
        </faultConnector>
        <filterLogic>1 OR (2 AND 3 AND 4 AND 5)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varClaimMemberToBeUpdated</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EligibleForClaim__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimMemberRT</elementReference>
            </value>
        </filters>
        <filters>
            <field>User__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ClaimMembers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Query of ALL related eligible regular Claim Member records on the Account which is used to do a couple of validations on various number of Claim Members to determine whether the process can be continued. 

This is DESCENDING on Percentage as this is necessary to match on Split Breakdown on the Split Deal Records</description>
        <name>GetEligibleRegularClaimMembers</name>
        <label>Get eligible Regular Claim Members</label>
        <locationX>1989</locationX>
        <locationY>847</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopClaimMembers</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EligibleForClaim__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forRegularClaimMemberRT</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ClaimMembers__c</object>
        <sortField>Percentage__c</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This query retrieves the User that is the Eligible Sales Lead as we need his/her email to notify them that a claim has been started where they are eligible sales lead.</description>
        <name>GetEligibleSalesLead</name>
        <label>Get Eligible Sales Lead</label>
        <locationX>3647</locationX>
        <locationY>5922</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>EligibleSalesLeadNotification</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen5</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forEligibleSalesLead</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This path is only taken when varCreatedClaimId is empty, which means that no new Claim was created during the current flow run. For that reason, the existing claim is retrieved to validate whether the flow was already finished last time or details are missing. This is also the path that will be taken when a second Claim Member on a Claim (Regular or Exception) is running the flow.</description>
        <name>GetExistingClaim</name>
        <label>Get Existing Claim</label>
        <locationX>2506</locationX>
        <locationY>2336</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ExistingClaimDecisions</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen3</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCurrentClaimMember.Claim__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Claim__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Query the related Claim Members from the current Claim to display the Split and Commitment details that were chosen by the user who claimed this Account for the first time.</description>
        <name>GetRelatedClaimMembers</name>
        <label>Get Related Claim Members</label>
        <locationX>2800</locationX>
        <locationY>2572</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>scrReadOnlyClaimDetails</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen3</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Claim__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetExistingClaim.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ClaimMembers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Queries all Split Deal records that are active and that equal the number of Eligible Claim Members on this Account. The Split Deal records that meets the current split is being excluded. This is based on a variable that is populated in the &apos;Count Number of Claim Members&apos; Assignment.</description>
        <name>GetSplitDeals</name>
        <label>Get Split Deals</label>
        <locationX>1734</locationX>
        <locationY>2454</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>scrOptionToChooseAlternativeSplit</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>NumberofPeople__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varNumberOfEligibleClaimMembers</elementReference>
            </value>
        </filters>
        <filters>
            <field>SplitBreakdown__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>varClaimMemberPercentageBreakdown</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SplitDeal__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Retrieves details from the user who clicked the &apos;Claim Account&apos; button (currently logged in user). This is necessary to retrieve details from a parent-level (manager) in the next decision.</description>
        <name>GetUser</name>
        <label>Get User</label>
        <locationX>2000</locationX>
        <locationY>311</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ManagerFieldPopulated</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forCurrentUserId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>This is an update on the Regular Claim record to mark the checkbox &apos;Checkpoint Split&apos; to TRUE, which is used priorly in this flow in the &apos;Existing Claim Decisions&apos; decision to decide whether the running user can still see the &apos;Choose Alternative Split&apos; screen or not as it should NOT happen that a second, third or fourth Claim Member has the option to adjust the split again.</description>
        <name>SetCheckpointOnClaim</name>
        <label>Set Checkpoint On Claim</label>
        <locationX>1800</locationX>
        <locationY>3469</locationY>
        <connector>
            <targetReference>scrCommitment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>CheckpointSplit__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>If the Claim Member for the running user already existed, this is the point where the record is updated with the latest input of the Adyen Formula fields and status is moved to &apos;Eligible&apos; (most often from Claim Started).</description>
        <name>UpdateAdyenFormulaOnClaimMember</name>
        <label>Update Adyen Formula on Claim Member</label>
        <locationX>1992</locationX>
        <locationY>1944</locationY>
        <connector>
            <targetReference>IsRegularClaim</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen2</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCurrentClaimMember.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AnswerAdyenFormulaImprove__c</field>
            <value>
                <elementReference>txtAnswerAdyenFormulaImprove</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AnswerAdyenFormulaSuccess1__c</field>
            <value>
                <elementReference>txtAnswerAdyenFormulaSuccess1</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AnswerAdyenFormulaSuccess2__c</field>
            <value>
                <elementReference>txtAnswerAdyenFormulaSuccess2</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ClaimMidMarketIncentive__c</field>
            <value>
                <elementReference>pickClaimMidMarketIncentive</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Claim__c</field>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DidWorkWithSalesEnterpriseOnDeal__c</field>
            <value>
                <elementReference>pickDidYouWorkWithSalesEnterpriseOnThisDeal</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ExceedsMMMarginThreshold__c</field>
            <value>
                <elementReference>pickExceedsMMMarginThreshold</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RatingAdyenFormulaImprove__c</field>
            <value>
                <elementReference>pickRatingAdyenFormulaImprove</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RatingAdyenFormulaSuccess1__c</field>
            <value>
                <elementReference>pickRatingAdyenFormulaSuccess1</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RatingAdyenFormulaSuccess2__c</field>
            <value>
                <elementReference>pickRatingAdyenFormulaSuccess2</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Eligible</stringValue>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>This is an update of the Claim Member belonging to the running user to update the status to &apos;Submitted&apos;, to set a start date of the Claim and to potentially update the Eligible Sales Lead if changed in the previous screen.</description>
        <name>UpdateClaimMemberToSubmitted</name>
        <label>Update Claim Member to Submitted</label>
        <locationX>3278</locationX>
        <locationY>5025</locationY>
        <connector>
            <targetReference>SubmitClaimMemberForApproval</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen5</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimMemberToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ClaimStart__c</field>
            <value>
                <elementReference>forClaimMemberStartDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EligibleSalesLead__c</field>
            <value>
                <elementReference>forEligibleSalesLead</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>Populates the Claim lookup and updates status to &apos;Eligible&apos; for all eligible Regular Claim Members on the Account that are not yet linked to the new Regular Claim (should be all Claim Members exception for the running user).</description>
        <name>UpdateClaimRelation</name>
        <label>Update Claim Relation</label>
        <locationX>2190</locationX>
        <locationY>2177</locationY>
        <connector>
            <targetReference>IsNewClaimCreated</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen2</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Claim__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>EligibleForClaim__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forRegularClaimMemberRT</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Blocked by Exception</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Claim__c</field>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Eligible</stringValue>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>In this update the commitment answers from the previous screen are updated on the Claim record. Once populated, it will not be asked again when someone starts a Claim on this Account.</description>
        <name>UpdateCommitmentOnClaim</name>
        <label>Update Commitment on Claim</label>
        <locationX>1938</locationX>
        <locationY>4086</locationY>
        <connector>
            <targetReference>decisionExceptionClaim</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen6</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>CommitmentInYears__c</field>
            <value>
                <elementReference>numCommitmentInYears</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CommittedTransactions__c</field>
            <value>
                <elementReference>numCommitmentInNumberOfMonthlyTransactions</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CostsPerTransaction__c</field>
            <value>
                <elementReference>numCostsPerTransaction</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>pickCurrency</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ExceptionCommitment__c</field>
            <value>
                <elementReference>txtExceptionCommitment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FixedCommitment__c</field>
            <value>
                <elementReference>pickFixedCommitment</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>This is an update of the Exception Claim to update the Comments &amp; Merchants text field populated in the previous screen. This is placed in between to allow users to continue the flow when closing early.</description>
        <name>UpdateExceptionDetailsOnClaim</name>
        <label>Update Exception Details on Claim</label>
        <locationX>372</locationX>
        <locationY>2317</locationY>
        <connector>
            <targetReference>AssignClaimMembers</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen4</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments__c</field>
            <value>
                <elementReference>txtExceptionComments</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Merchants__c</field>
            <value>
                <elementReference>txtMerchants</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>In this update the Exception Request lookup field on Claim is updated with the Exception Request that was chosen in the last screen.</description>
        <name>UpdateExceptionRequestOnClaim</name>
        <label>Update Exception Request on Claim</label>
        <locationX>2185</locationX>
        <locationY>4349</locationY>
        <connector>
            <targetReference>scrUploadFiles</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ExceptionRequest__c</field>
            <value>
                <elementReference>pickMyApprovedExceptionRequest</elementReference>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>This is an update of the Exception Claim Member of the running user to ensure the details from the Issuing Incentive screen in the previous element are saved on the Claim Member.</description>
        <name>UpdateIssuingIncentiveonClaimMember</name>
        <label>Update Issuing Incentive on Claim Member</label>
        <locationX>2343</locationX>
        <locationY>3051</locationY>
        <connector>
            <targetReference>decisionExceptionClaim</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimMemberToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Contract_Signed_Period__c</field>
            <value>
                <elementReference>chkContractSignedPeriod</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Live_With_Transactions__c</field>
            <value>
                <elementReference>chkLiveWithTransactions</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity__c</field>
            <value>
                <elementReference>pickIssuingOpportunity</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PSP_Reference__c</field>
            <value>
                <elementReference>PSP_Reference</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Processing_3M_Monthly__c</field>
            <value>
                <elementReference>chkProcessing3MMonthly</elementReference>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>This is an update of the Clam Member of the running user to set the Opportunity that was populated in the previous screen and update the percentage based on the previous screen.</description>
        <name>UpdateOpportunityOnClaimMember</name>
        <label>Update Opportunity on Claim Member</label>
        <locationX>559</locationX>
        <locationY>2317</locationY>
        <connector>
            <targetReference>UpdateExceptionDetailsOnClaim</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen4</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimMemberToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Opportunity__c</field>
            <value>
                <elementReference>varOpportunity</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Percentage__c</field>
            <value>
                <elementReference>numFirstClaimMemberPercentage</elementReference>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>This is an update of the Exception Claim Member of the running user to populate the values that were specified in the previous screen on the Claim Member. This is a prove that the Claim Member confirms the Claim meets all criteria to claim 5K or 10K in advance.</description>
        <name>UpdatePosAdvanceOnClaimMember</name>
        <label>Update IPP Advance on Claim Member</label>
        <locationX>2102</locationX>
        <locationY>2836</locationY>
        <connector>
            <targetReference>decisionExceptionClaim</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ErrorScreen6</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimMemberToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AccountNotYetFullyLive__c</field>
            <value>
                <elementReference>chkAccountNotFullyLive</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AgreementSigned__c</field>
            <value>
                <elementReference>chkAgreementSigned</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AwareClaimSubmittedWithin24Months__c</field>
            <value>
                <elementReference>chkAwareClaimSubmittedWithin24Months</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MarginJustifiesAdvanceClaim__c</field>
            <value>
                <elementReference>txtMarginJustifyingAdvanceClaim</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MinimalCommitmentOf75Terminals__c</field>
            <value>
                <elementReference>chkMoreThan75Terminals</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pct75ComingFromPointOfSale__c</field>
            <value>
                <elementReference>chk75PctComingFromPointOfSale</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PosAdvanceAmount__c</field>
            <value>
                <elementReference>pickPosAdvanceAmount</elementReference>
            </value>
        </inputAssignments>
        <object>ClaimMembers__c</object>
    </recordUpdates>
    <recordUpdates>
        <description>Update of the percentages on the Claim Members based on the alternative split.</description>
        <name>UpdateSplitClaimMembers</name>
        <label>Update Split Claim Members</label>
        <locationX>1305</locationX>
        <locationY>3395</locationY>
        <connector>
            <targetReference>UpdateSplitDealLookupOnClaim</targetReference>
        </connector>
        <inputReference>collectionNewSplitClaimMembers</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>This is an update on the Regular Claim record to populate the lookup to the Alternative Split that was chosen. Also a checkbox &apos;Checkpoint Split&apos; is being marked as TRUE, which is used priorly in this flow in the &apos;Existing Claim Decisions&apos; decision to decide whether the running user can still see the &apos;Choose Alternative Split&apos; screen or not as it should NOT happen that a second, third or fourth Claim Member can adjust the split again.</description>
        <name>UpdateSplitDealLookupOnClaim</name>
        <label>Update Split Deal Lookup on Claim</label>
        <locationX>1306</locationX>
        <locationY>3558</locationY>
        <connector>
            <targetReference>scrCommitment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forClaimToUpdate</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AlternativeSplit__c</field>
            <value>
                <elementReference>tableAlternativeSplit.firstSelectedRow.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CheckpointSplit__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Claim__c</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>ErrorScreen1</name>
        <label>ErrorScreen1</label>
        <locationX>1471</locationX>
        <locationY>331</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrorScreen2</name>
        <label>ErrorScreen2</label>
        <locationX>2868</locationX>
        <locationY>1940</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText2</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrorScreen3</name>
        <label>ErrorScreen3</label>
        <locationX>3288</locationX>
        <locationY>2696</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText3</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrorScreen4</name>
        <label>ErrorScreen4</label>
        <locationX>460</locationX>
        <locationY>2073</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText4</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrorScreen5</name>
        <label>ErrorScreen5</label>
        <locationX>3670</locationX>
        <locationY>5181</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText5</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrorScreen6</name>
        <label>ErrorScreen6</label>
        <locationX>1964</locationX>
        <locationY>4504</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText5_0</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen where user needs to populate how he/she applied the Adyen Formula Successfully and how to improve.</description>
        <name>scrAdyenFormula</name>
        <label>Adyen Formula</label>
        <locationX>1986</locationX>
        <locationY>1436</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>DoesClaimExist</targetReference>
        </connector>
        <fields>
            <name>disAdyenFormulaSuccess1</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;Question&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;An example of how I applied the Adyen Formula successfully is (please select the appropriate formula from the rating drop down):&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>pickRatingAdyenFormulaSuccess1</name>
            <choiceReferences>choCurrentRatingAdyenFormulaSuccess1</choiceReferences>
            <choiceReferences>choRatingAdyenFormulaSuccess1</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choCurrentRatingAdyenFormulaSuccess1</defaultSelectedChoiceReference>
            <fieldText>Rating</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>txtAnswerAdyenFormulaSuccess1</name>
            <defaultValue>
                <stringValue>{!GetCurrentClaimMember.AnswerAdyenFormulaSuccess1__c}</stringValue>
            </defaultValue>
            <fieldText>Answer</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;Your answer must contain at least 100 characters.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!txtAnswerAdyenFormulaSuccess1}) &gt; 99</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>disAdyenFormulaSuccess2</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;Question&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;An example of how I applied the Adyen Formula successfully is (please select the appropriate formula from the rating drop down):&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>pickRatingAdyenFormulaSuccess2</name>
            <choiceReferences>choCurrentRatingAdyenFormulaSuccess2</choiceReferences>
            <choiceReferences>choRatingAdyenFormulaSuccess2</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choCurrentRatingAdyenFormulaSuccess2</defaultSelectedChoiceReference>
            <fieldText>Rating</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>txtAnswerAdyenFormulaSuccess2</name>
            <defaultValue>
                <stringValue>{!GetCurrentClaimMember.AnswerAdyenFormulaSuccess2__c}</stringValue>
            </defaultValue>
            <fieldText>Answer</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Your answer must contain at least 100 characters.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!txtAnswerAdyenFormulaSuccess2}) &gt; 99</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>disAdyenFormulaImprove</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 12px;&quot;&gt;Question&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Please provide an example of how your behavior according to the Adyen Way of Selling could be improved next time:&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>pickRatingAdyenFormulaImprove</name>
            <choiceReferences>choCurrentRatingAdyenFormulaImprove</choiceReferences>
            <choiceReferences>choRatingAdyenFormulaImprove</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choCurrentRatingAdyenFormulaImprove</defaultSelectedChoiceReference>
            <fieldText>Rating</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>txtAnswerAdyenFormulaImprove</name>
            <defaultValue>
                <stringValue>{!GetCurrentClaimMember.AnswerAdyenFormulaImprove__c}</stringValue>
            </defaultValue>
            <fieldText>Answer</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;Your answer must contain at least 100 characters.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!txtAnswerAdyenFormulaImprove}) &gt; 99</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>disMidMarket</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Mid-Market Incentive&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>forMMICountryValid</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Regular</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetUser.SalesTeam__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Sales Mid-Market</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>pickClaimMidMarketIncentive</name>
            <choiceReferences>choClaimMidMarketIncentive</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.ClaimMidMarketIncentive__c</elementReference>
            </defaultValue>
            <fieldText>Claim Mid-Market Incentive?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
                <conditions>
                    <leftValueReference>forMMICountryValid</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Regular</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetUser.SalesTeam__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Sales Mid-Market</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetUser.SalesTeam__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Sales Enterprise</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>pickExceedsMMMarginThreshold</name>
            <choiceReferences>choExceedsMMMArginThreshold</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.ExceedsMMMarginThreshold__c</elementReference>
            </defaultValue>
            <fieldText>Exceeds Mid-Market Margin Threshold</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;You need to have a pre-approval for any MM deals that have scaled beyond 30K margin.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickClaimMidMarketIncentive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>pickDidYouWorkWithSalesEnterpriseOnThisDeal</name>
            <choiceReferences>choDidYouWorkWithSalesEnterprise</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.DidWorkWithSalesEnterpriseOnDeal__c</elementReference>
            </defaultValue>
            <fieldText>Did you work with Sales Enterprise on this deal?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickClaimMidMarketIncentive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>scrAdyenFormula_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>scrAdyenFormula_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>disThreshold</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Are you aware that the claimable threshold is 1.5K - 30K EUR? For merchants coming in via Partners (using an Adyen approved integration) this threshold is 0.5K - 30K EUR.&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>9</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrAdyenFormula_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>checkThreshold</name>
                    <dataType>Boolean</dataType>
                    <fieldText>Yes, I am</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!checkThreshold} = TRUE</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickClaimMidMarketIncentive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>scrAdyenFormula_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>scrAdyenFormula_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>disMidMarketIndustryAwareness</name>
                    <fieldText>&lt;p&gt;Are you aware that the Mid-Market Incentive only applies to Accounts that are active in the following Industries?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Retail&lt;/li&gt;&lt;li&gt;Restaurants&lt;/li&gt;&lt;li&gt;Digital (Goods delivery, Food delivery &amp;amp; Streaming, Reading &amp;amp; Podcasting)&lt;/li&gt;&lt;li&gt;B2B (Services)&lt;/li&gt;&lt;/ul&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>9</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrAdyenFormula_Section2_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>checkAwareIndustry</name>
                    <dataType>Boolean</dataType>
                    <fieldText>Yes, I am</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!checkAwareIndustry} = TRUE</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickClaimMidMarketIncentive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>scrAdyenFormula_Section3</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>scrAdyenFormula_Section3_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>disMidMarketSalesChannelAwareness</name>
                    <fieldText>&lt;p&gt;Are you aware that the Mid-Market Incentive only applies to deals that do not include IPP?&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>9</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrAdyenFormula_Section3_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>checkSalesChannel</name>
                    <dataType>Boolean</dataType>
                    <fieldText>Yes, I am</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                    <validationRule>
                        <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!checkSalesChannel} = TRUE</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickClaimMidMarketIncentive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Final screen in which the user is notified that the flow was successfully completed and Claim is now submitted for approval.</description>
        <name>scrClaimMemberSubmitted</name>
        <label>Claim Member submitted</label>
        <locationX>3289</locationX>
        <locationY>6171</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disClaimMemberSubmitted</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;Your Claim has been submitted for approval! Please click Finish to return to the Account record.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>In this screen the running user can set whether there is a fixed commitment. If so, some follow-up questions needs to be answers. The answers are stored on the Claim record itself and are only asked to the first person claiming.</description>
        <name>scrCommitment</name>
        <label>Commitment</label>
        <locationX>1915</locationX>
        <locationY>3726</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateCommitmentOnClaim</targetReference>
        </connector>
        <fields>
            <name>pickFixedCommitment</name>
            <choiceReferences>choYes</choiceReferences>
            <choiceReferences>choNo</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choNo</defaultSelectedChoiceReference>
            <fieldText>Is there a fixed commitment?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>numCommitmentInYears</name>
            <dataType>Number</dataType>
            <fieldText>Commitment in Years</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;There is a maximum of 2 characters for this field.&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TEXT({!numCommitmentInYears})) &lt;= 2</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickFixedCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>numCommitmentInNumberOfMonthlyTransactions</name>
            <dataType>Number</dataType>
            <fieldText>Commitment in # of Monthly Transactions</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickFixedCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>pickCurrency</name>
            <choiceReferences>choCurrencySet</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Currency</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickFixedCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>numCostsPerTransaction</name>
            <dataType>Number</dataType>
            <fieldText>Cost per Transaction</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickFixedCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disCommitment</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 16px; font-family: Calibri, sans-serif;&quot;&gt;Is there a commitment from before the change to a transaction commitments (before 2018), please leave the above questions blank and explain your exception below.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickFixedCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>txtExceptionCommitment</name>
            <fieldText>Exception Commitment</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickFixedCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disMistake3</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Note:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(10, 191, 83); font-size: 11px;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Made a mistake on a previous screen? Close this window &amp;amp; open the Claim record to make changes.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Afterwards, click on the Claim button again to continue.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen in which the running user can divide the chosen alternative split amongst all eligible Regular Claim Members. The number of Claim Members shown here depends on the number of eligible Claim Members and is set up with visibility filters. You need to select unique Claim Members in the overview, otherwise you&apos;ll be brought back to this screen and the error shows.</description>
        <name>scrDivideNewSplit</name>
        <label>Divide New Split</label>
        <locationX>1331</locationX>
        <locationY>2683</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>ClaimMembersSelected</targetReference>
        </connector>
        <fields>
            <name>displErrorIncorrectSelection</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0);&quot;&gt;Error:&lt;/strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; You need to select a unique Claim Member per Split %. Try again and press &apos;Next&apos;&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>IncorrectSelection</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>dispSelectedSplitDivide</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;You have selected &lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!tableAlternativeSplit.firstSelectedRow.Name} &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;as alternative split. Now divide this over the eligible Claim Members:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>scrDivideNewSplit_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>scrDivideNewSplit_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>displPercentageHeader</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Percentage&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>displSplitPercentage1</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Split1__c}%&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>displSplitPercentage2</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Split2__c}%&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>2.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>displSplitPercentage3</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Split3__c}%&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>3.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>displSplitPercentage4</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Split4__c}%&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>4.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrDivideNewSplit_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>displRoleHeader</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Role&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>displRole1</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Role1__c}&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>displRole2</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Role2__c}&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>2.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>displRole3</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Role3__c}&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>3.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>displRole4</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;{!tableAlternativeSplit.firstSelectedRow.Role4__c}&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>4.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrDivideNewSplit_Section1_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>displClaimMemberHeader</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Claim Member&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>pickClaimMember1</name>
                    <choiceReferences>collectionchoiceClaimMembers</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Claim Member</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>pickClaimMember2</name>
                    <choiceReferences>collectionchoiceClaimMembers</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Claim Member</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>2.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>pickClaimMember3</name>
                    <choiceReferences>collectionchoiceClaimMembers</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Claim Member</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>3.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>pickClaimMember4</name>
                    <choiceReferences>collectionchoiceClaimMembers</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Claim Member</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                            <operator>GreaterThanOrEqualTo</operator>
                            <rightValue>
                                <numberValue>4.0</numberValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen which is used to provide additional details on the Exception. Only used for &apos;Different Split Percentage&apos;, &apos;Merchant Account Claim&apos; and &apos;Other&apos; Exceptions. There are some visibility filters based on the type of Exception.</description>
        <name>scrExceptionClaim</name>
        <label>Exception Claim</label>
        <locationX>814</locationX>
        <locationY>2317</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateOpportunityOnClaimMember</targetReference>
        </connector>
        <fields>
            <name>disExceptionDisclaimer</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;You need to submit proof of that you have an approval for this exception.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>txtExceptionComments</name>
            <fieldText>Comments</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Please add here the context of your exception request (i.e. an approved merchant claim)&lt;/span&gt;&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>txtMerchants</name>
            <fieldText>Merchants</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;In the case of requesting a &apos;merchant exception claim&apos;, please specify all the correct Backoffice accountnames of the merchant accounts in scope. Missing and / or incorrect spelled accounts won’t be processed.&lt;/span&gt;&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Different Split Percentages</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>numNumberOfInvolvedClaimMembers</name>
            <dataType>Number</dataType>
            <fieldText>Number of involved Claim Members (including myself)</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
        </fields>
        <fields>
            <name>disFirstClaimMember</name>
            <fieldText>&lt;p&gt;First Claim Member&lt;/p&gt;&lt;p&gt;&lt;b&gt;{!forCurrentUserName}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>numFirstClaimMemberPercentage</name>
            <dataType>Number</dataType>
            <fieldText>First Claim Member Percentage</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
        </fields>
        <fields>
            <name>lkpSecondClaimMember</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>User__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Second Claim Member</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>ClaimMembers__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varSecondClaimMember</assignToReference>
                <name>recordId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>varSecondClaimMemberName</assignToReference>
                <name>recordName</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>1.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>numSecondClaimMemberPercentage</name>
            <dataType>Number</dataType>
            <fieldText>Second Claim Member Percentage</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>1.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>lkpThirdClaimMember</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>User__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Third Claim Member</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>ClaimMembers__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varThirdClaimMember</assignToReference>
                <name>recordId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>varThirdClaimMemberName</assignToReference>
                <name>recordName</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>2.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>numThirdClaimMemberPercentage</name>
            <dataType>Number</dataType>
            <fieldText>Third Claim Member Percentage</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>2.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>lkpFourthClaimMember</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>User__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Fourth Claim Member</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>ClaimMembers__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varFourthClaimMember</assignToReference>
                <name>recordId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>varFourthClaimMemberName</assignToReference>
                <name>recordName</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <numberValue>4.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>numFourthClaimMemberPercentage</name>
            <dataType>Number</dataType>
            <fieldText>Fourth Claim Member Percentage</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>numNumberOfInvolvedClaimMembers</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <numberValue>4.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>pickOpportunity</name>
            <choiceReferences>choOpportunity</choiceReferences>
            <choiceReferences>choNoOpportunity</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Opportunity</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>disMistake2</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;font-size: 11px; color: rgb(10, 191, 83); background-color: rgb(255, 255, 255);&quot;&gt;Note:&lt;/b&gt;&lt;span style=&quot;font-size: 11px; color: rgb(10, 191, 83); background-color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-size: 11px; color: rgb(10, 191, 83);&quot;&gt;Made a mistake on a previous screen? You can close this window and use the Claim button again to populate other values.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen with all reasons why an Exception claim may not be allowed. The warnings are shown based on visibility filters.</description>
        <name>scrExceptionClaimNotAllowed</name>
        <label>Exception Claim Not Allowed</label>
        <locationX>1749</locationX>
        <locationY>1236</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>displNotAllowedException</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;You did not pass the validation to start an Exception Claim. Below you find the reason(s) why. If this is something you cannot solve or do not agree with, please reach out to &lt;/strong&gt;&lt;a href=&quot;mailto:salesforce-claims@adyen.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;strong&gt;salesforce-claims@adyen.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>errorNoRegularClaimMemberFound</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/strong&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: T&lt;/span&gt;o submit a IPP Advance Claim you need to be an eligible Claim Member on the Account.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>forNoValidRegularClaimMember</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorDifferentTypeOfExceptionClaim</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You have chosen to continue with an existing Exception Claim, but its Claim Type &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;&apos;{!GetCurrentClaimMember.Claim__r.ClaimType__c}&apos;&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt; differs from the Claim Type that you chose in the first screen: &lt;/span&gt;&lt;b style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;&apos;{!radTypeOfExceptionClaim}&apos;&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;. If you want to continue with an existing Claim, please ensure you choose the same Exception Claim  Type.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varClaimMemberToBeUpdated</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forInvalidExceptionType</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>In this screen the user can set whether he/she received approved on an Exception Request in advance. If &apos;Yes&apos;, the user can choose from a list of approved Exception Request where this used is an Exception Request Member. The requirement to upload files will then be skipped.</description>
        <name>scrExceptionRequest</name>
        <label>ExceptionRequest</label>
        <locationX>2185</locationX>
        <locationY>4178</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateExceptionRequestOnClaim</targetReference>
        </connector>
        <fields>
            <name>disExceptionRequest</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Exception Request&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Did you get approval on an Exception Request for the Account &lt;b&gt;&lt;i&gt;{!GetAccount.Name}&lt;/i&gt;&lt;/b&gt;? If so, please choose the Exception Request below, by doing so you don&apos;t need to upload other evidence that you are eligible to claim this Account.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>pickReceivedApprovalExceptionRequest</name>
            <choiceReferences>choYes</choiceReferences>
            <choiceReferences>choNo</choiceReferences>
            <dataType>String</dataType>
            <fieldText>I received approval on an Exception Request</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>pickMyApprovedExceptionRequest</name>
            <choiceReferences>recordchoExceptionRequests</choiceReferences>
            <dataType>String</dataType>
            <fieldText>My Approved Exception Request</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;If you don&apos;t see any options to choose from, it means there are no approved Exception Request where you are part of on the Account. Choose &apos;No&apos; on the option above and upload evidence in the next screen.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickReceivedApprovalExceptionRequest</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disMistake4_0</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Note:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(10, 191, 83); font-size: 11px;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Made a mistake on a previous screen? Close this window &amp;amp; open the Claim record to make changes.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;Afterwards, click on the Claim button again to continue.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Screen which provides a promp to the user that a file upload is required and was not done and it&apos;s going to bring the user back to the File Upload screen.</description>
        <name>scrFileUploadFailed</name>
        <label>File Upload Failed</label>
        <locationX>2423</locationX>
        <locationY>4687</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>scrUploadFiles</targetReference>
        </connector>
        <fields>
            <name>disFileUploadFailed</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;You did not upload documents in the previous screen screen. Click the Next button to enter the Upload Documents screen again.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen is specifically for Issuing Incentive claims and forces the user to confirm the deal meets all the requirements for this incentive. If checkboxes are not marked as TRUE, they can&apos;t continue.

Additionally, a PSP reference &amp; a transacting Opportunity with Sales Channel &apos;Issuing&apos; needs to be linked.</description>
        <name>scrIssuingIncentive</name>
        <label>Issuing Incentive</label>
        <locationX>2343</locationX>
        <locationY>2844</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateIssuingIncentiveonClaimMember</targetReference>
        </connector>
        <fields>
            <name>chkContractSignedPeriod</name>
            <dataType>Boolean</dataType>
            <fieldText>I confirm that the contract was signed between May 1, 2022 and December 31, 2023. (We’ll ask you for a screenshot in the next step!)</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Roboto, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; background-color: rgb(255, 255, 255);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkContractSignedPeriod} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>chkProcessing3MMonthly</name>
            <dataType>Boolean</dataType>
            <fieldText>I confirm that the Merchant will process at least EUR 3M per month.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Roboto, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkProcessing3MMonthly} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>chkLiveWithTransactions</name>
            <dataType>Boolean</dataType>
            <fieldText>I confirm that the Merchant is Live with real transactions.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Roboto, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkLiveWithTransactions} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>PSP_Reference</name>
            <dataType>String</dataType>
            <fieldText>PSP Reference</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Your PSP reference must be 16 characters.&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!PSP_Reference}) = 16</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>OpportunityMustExist</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px; color: rgb(234, 27, 27);&quot;&gt;If you don&apos;t see any opportunity that means you do not have a Transacting opportunity with Sales Channel = Issuing.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>pickIssuingOpportunity</name>
            <choiceReferences>choIssuingOpportunity</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Opportunity</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;Please, pick your Issuing Opportunity here!&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen allows users to choose an alternative split if they don&apos;t agree with the standard one. Some of these elements only show dependent on the number of Claim Members, e.g. you can&apos;t select an alternative split if you are the only eligible Claim Member.

The table with alternative splits only show Split Deal records that meet the same number of Claim Members and excludes the current split.</description>
        <name>scrOptionToChooseAlternativeSplit</name>
        <label>Option to Choose Alternative Split</label>
        <locationX>1734</locationX>
        <locationY>2632</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>DecidedForAlternativeSplit</targetReference>
        </connector>
        <fields>
            <name>displExplanation</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;Please check the table below with the eligible Claim Members and decide whether you agree with the split or want to choose an alternative. You can only make this selection once, so be careful.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                    <operator>GreaterThanOrEqualTo</operator>
                    <rightValue>
                        <numberValue>2.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>displExplanation1User</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;It seems that you are the only eligible Claim Member on this Account, is this correct? &lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;If not, close this window and let us know via an email to &lt;/strong&gt;&lt;a href=&quot;mailto:salesforce-claims@adyen.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;&lt;strong&gt;salesforce-claims@adyen.com&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;If correct, you can continue by pressing next&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <numberValue>1.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>tableEligibleClaimMembers</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>ClaimMembers__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Eligible Claim Members</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>NO_SELECTION</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>GetEligibleRegularClaimMembers</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;ClaimMemberName__c&quot;,&quot;guid&quot;:&quot;column-fd2b&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Claim Member&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Claim Member Name&quot;,&quot;type&quot;:&quot;customRichText&quot;},{&quot;apiName&quot;:&quot;Status__c&quot;,&quot;guid&quot;:&quot;column-f9e6&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;ClaimMemberArea__c&quot;,&quot;guid&quot;:&quot;column-103d&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Claim Member Area&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Percentage__c&quot;,&quot;guid&quot;:&quot;column-aecf&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Percentage&quot;,&quot;type&quot;:&quot;customPercent&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>disBreakLine</name>
            <fieldText>&lt;p&gt; &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>pickChooseOtherSplit</name>
            <choiceReferences>choNo</choiceReferences>
            <choiceReferences>choYes</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choNo</defaultSelectedChoiceReference>
            <fieldText>Choose Other Split?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                    <operator>GreaterThanOrEqualTo</operator>
                    <rightValue>
                        <numberValue>2.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>dispSelectSplitBelow</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Select an alternative split from the table below.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickChooseOtherSplit</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>tableAlternativeSplit</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>SplitDeal__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Alternative Splits</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>GetSplitDeals</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-b58e&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Split&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Split Deal Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;TypeofDeal__c&quot;,&quot;guid&quot;:&quot;column-fff3&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Local/Global&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Type of Deal&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Description__c&quot;,&quot;guid&quot;:&quot;column-15fc&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Description&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickChooseOtherSplit</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disbreakline2</name>
            <fieldText>&lt;p&gt; &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>chkInformedOtherClaimMembers</name>
            <dataType>Boolean</dataType>
            <fieldText>I have informed the other Claim Members and they all agree on the new split</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(199, 0, 0);&quot;&gt;You can only continue if you aligned and agreed on the new split with your fellow Claim Members&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkInformedOtherClaimMembers} = TRUE</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickChooseOtherSplit</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>displMistake</name>
            <fieldText>&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Note:&lt;/strong&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt; Not sure what to select? Your progress is saved, so you can close this window and use the Claim button again to return to this point.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                    <operator>GreaterThanOrEqualTo</operator>
                    <rightValue>
                        <numberValue>2.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This screen is specifically for IPP Advance claims and forces the user to confirm the deal meets all the requirements for IPP Advance. If checkboxes are not marked as TRUE, they can&apos;t continue.

The values are also updated on the Claim Member afterwards.</description>
        <name>scrPosAdvance</name>
        <label>IPP Advance</label>
        <locationX>2103</locationX>
        <locationY>2679</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdatePosAdvanceOnClaimMember</targetReference>
        </connector>
        <fields>
            <name>chkAccountNotFullyLive</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.AccountNotYetFullyLive__c</elementReference>
            </defaultValue>
            <fieldText>The account is not yet fullly live and it will take some time before the rollout is complete.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkAccountNotFullyLive} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>chk75PctComingFromPointOfSale</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.Pct75ComingFromPointOfSale__c</elementReference>
            </defaultValue>
            <fieldText>75% of the merchant its volume coming from In-Person Payments.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chk75PctComingFromPointOfSale} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>txtMarginJustifyingAdvanceClaim</name>
            <defaultValue>
                <stringValue>{!GetCurrentClaimMember.MarginJustifiesAdvanceClaim__c}</stringValue>
            </defaultValue>
            <fieldText>The expected margin justifying an advance claim. Please specify.</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>chkMoreThan75Terminals</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.MinimalCommitmentOf75Terminals__c</elementReference>
            </defaultValue>
            <fieldText>The agreements with the merchant includes a minimal commitment of 75 terminals.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkMoreThan75Terminals} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>chkAgreementSigned</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.AgreementSigned__c</elementReference>
            </defaultValue>
            <fieldText>The agreement is signed.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkAgreementSigned} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>pickPosAdvanceAmount</name>
            <choiceReferences>choCurrentPosAdvanceAmount</choiceReferences>
            <choiceReferences>choPosAdvanceAmount</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choCurrentPosAdvanceAmount</defaultSelectedChoiceReference>
            <fieldText>I&apos;m claiming 5000 or 10000 EUR in advance</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>chkAwareClaimSubmittedWithin24Months</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>GetCurrentClaimMember.AwareClaimSubmittedWithin24Months__c</elementReference>
            </defaultValue>
            <fieldText>I&apos;m aware that the original claim needs to be submitted within 24 months, and if not it will automatically start running in a year.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;You need to mark this checkbox in order to continue.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!chkAwareClaimSubmittedWithin24Months} = TRUE</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>disMistake1</name>
            <fieldText>&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Note:&lt;/b&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt; Made a mistake on a previous screen? You can close this window and use the Claim button again to populate other values.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>In this screen we summarize some details that we know so far which were populated by the person who claimed first. This is read-only and just to inform the second, third and sometimes even fourth user that is eligible on the Claim. There are visibility filters as the Adjusted Split is only shown when also chosen, similarly for Commitment details and Exception details.</description>
        <name>scrReadOnlyClaimDetails</name>
        <label>Read-Only Claim Details</label>
        <locationX>2800</locationX>
        <locationY>2795</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetClaimFiles</targetReference>
        </connector>
        <fields>
            <name>disIntroScreen</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Details of the Claim were already populated in a previous stage by you or a colleague. You can find details below:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Created by: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.CreatedBy.FirstName} {!GetExistingClaim.CreatedBy.LastName}&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Created on: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.CreatedDate}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Fixed Commitment: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt; {!GetExistingClaim.FixedCommitment__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>disCommitmentDetails</name>
            <fieldText>&lt;ul&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Commitment in Years: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.CommitmentInYears__c}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Commitment in # of Monthly Transactions: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.CommittedTransactions__c}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Currency: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.CurrencyIsoCode}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Costs per Transaction: &lt;/strong&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.CostsPerTransaction__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>forShowCommitment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disExceptionDetails</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;u&gt;Exception Request Comments:&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.Comments__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;u&gt;Exception Claim Merchants:&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.Merchants__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>displAlternativeSplit</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Adjusted Split:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;An alternative split was chosen: &lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!GetExistingClaim.AlternativeSplit__r.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetExistingClaim.AlternativeSplit__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>tableClaimMemberDetailsReadOnly</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>ClaimMembers__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Claim Member Details</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>NO_SELECTION</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>GetRelatedClaimMembers</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;ClaimMemberName__c&quot;,&quot;guid&quot;:&quot;column-e30f&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Name&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Claim Member Name&quot;,&quot;type&quot;:&quot;customRichText&quot;},{&quot;apiName&quot;:&quot;Status__c&quot;,&quot;guid&quot;:&quot;column-a14e&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Percentage__c&quot;,&quot;guid&quot;:&quot;column-f73c&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Percentage&quot;,&quot;type&quot;:&quot;customPercent&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen with all reasons why a Regular claim may not be allowed. The warnings are shown based on visibility filters.</description>
        <name>scrRegularClaimNotAllowed</name>
        <label>Regular Claim not allowed</label>
        <locationX>2210</locationX>
        <locationY>1306</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>errorOverview</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;You did not pass the validation to start a Regular Claim. Below you find the reason(s) why. If this is something you cannot solve or do not agree with, please reach out to &lt;/strong&gt;&lt;a href=&quot;mailto:salesforce-claims@adyen.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;salesforce-claims@adyen.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>errorRegularClaimNotLiveAccount</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You can only claim Live Accounts.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Live</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Transacting</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Churning</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Churned</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Onboarding</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorRegularClaimNotResubmitted</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;: It is not allowed to resubmit a Claim.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Submitted</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Pending</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Approved</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorRegularClaimCountrySetupIncorrect</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: When a Claim contains more than 2 eligible Claim Members, all eligible Claim Members should be from different Claim Member Areas. Therefore, your request cannot be processed. Please contact your administrator to correct eligibility of Claim Members.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varNumberOfEligibleClaimMembers</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>2.0</numberValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>varNumberOfUniqueCountries</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <elementReference>varNumberOfEligibleClaimMembers</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorRegularClaimMemberDoesNotExist</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;: You are not eligible to start a Regular Claim. If this is a mistake, please contact your administrator to correct eligibility of Claim Members.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetCurrentClaimMember.Id</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorRegularClaimAlreadyClaimed</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/strong&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You are not allowed to create a Regular Claim because the Account has at least one Exception Claim (IPP Advance excluded).&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>No claim started</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>varNumberOfExceptionClaimsExclPOS</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>0.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorBlockedByException</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;Warning&lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;: You are not allowed to create a Regular Claim because you already were approved on an Exception Claim.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetCurrentClaimMember.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Blocked by Exception</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorClaimPeriodExceeded</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/strong&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You are not allowed to create a Regular Claim because you have exceeded the last allowed quarter to Claim on this Account. Your last quarter to claim was: {!GetAccount.Last_Quarter_to_Claim__c}.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>$Flow.CurrentDate</leftValueReference>
                    <operator>GreaterThanOrEqualTo</operator>
                    <rightValue>
                        <elementReference>SendClaimReminderFormula</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorBusinessModelisBlank</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/strong&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You are not allowed to create a Regular Claim because the following field is blank on the Account that you are about to Claim: Business Model Based on Adyen Data. &lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccount.BusinessModelBasedOnAdyenData__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>errorNoLiveDate</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;Warning&lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;: You are not allowed to claim as the Account has no Live Date. This value should be synced from the BackOffice.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccount.AccountLiveDate__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen with all reasons why a SDR claim may not be allowed. The warnings are shown based on visibility filters.</description>
        <name>scrSdrClaimNotAllowed</name>
        <label>SDR Claim not allowed</label>
        <locationX>2209</locationX>
        <locationY>1167</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>displNotAllowedSDR</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;You did not pass the validation to start a SDR Claim. Below you find the reason(s) why. If this is something you cannot solve or do not agree with, please reach out to &lt;/strong&gt;&lt;a href=&quot;mailto:salesforce-claims@adyen.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;strong&gt;salesforce-claims@adyen.com&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>disSdrClaimNotProspectOrLiveAccount</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You can only claim Prospect Accounts or Live Accounts.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Prospect</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Live</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Transacting</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Churning</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Churned</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetAccount.Account_Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Onboarding</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disSdrClaimNotSalesSupportUk</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You are not allowed to create an SDR Claim when you don&apos;t have a Sales Support Role.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetUser.Profile.Name</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Adyen v2 Salessupport Lead</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetUser.Profile.Name</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Adyen v2 Salessupport</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disSdrClaimOnlyOneSdrClaim</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: You are not allowed to create a second SDR Claim on the Account.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>varNumberOfSdrClaims</leftValueReference>
                    <operator>GreaterThan</operator>
                    <rightValue>
                        <numberValue>0.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>In this screen the user can change the Eligible Sales Lead for SDR and Exception Claims. This is not possible for Regular Claims where eligible Sales Lead is set on creation of them. This is the last screen before approval.</description>
        <name>scrSubmitClaimForApproval</name>
        <label>Submit Claim for approval</label>
        <locationX>3277</locationX>
        <locationY>4830</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateClaimMemberToSubmitted</targetReference>
        </connector>
        <fields>
            <name>disEligibleSalesLead</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;By default, the Eligible Sales Lead is set to your manager, based on the data known in Salesforce it is ({!GetUser.Manager__c}). This is the Team Lead who will receive the related Sales Team Lead Commission for this deal/claim. If this is incorrect please enter the correct Eligible Sales Lead to be rewarded.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>SDR</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>IPP Advance</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Issuing Incentive</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>pickCorrectEligibleSalesLead</name>
            <choiceReferences>choYes</choiceReferences>
            <choiceReferences>choNo</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choNo</defaultSelectedChoiceReference>
            <fieldText>Do you want to update the Eligible Sales Lead?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>SDR</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>IPP Advance</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Issuing Incentive</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>lkpEligibleSalesLead</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>EligibleSalesLead__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Eligible Sales Lead</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>ClaimMembers__c</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varUpdatedEligibleSalesLead</assignToReference>
                <name>recordId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>varUpdatedEligibleSalesLeadName</assignToReference>
                <name>recordName</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>pickCorrectEligibleSalesLead</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disSubmitClaimForApproval</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Warning&lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;: After clicking the Next button, your claim request will be submitted for approval. Click the Next button if you are sure you want to submit your claim request.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>disMistake5</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); font-size: 11px; color: rgb(10, 191, 83);&quot;&gt;Note:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 11px; color: rgb(10, 191, 83);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-size: 11px; color: rgb(10, 191, 83);&quot;&gt;Made a mistake on a previous screen? Close this window &amp;amp; open the Claim record to make changes.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 11px; color: rgb(10, 191, 83); background-color: rgb(255, 255, 255);&quot;&gt;Afterwards, click on the Claim button again to continue.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Main screen in which user selects the type of Claim. If Exception is chosen, a type of exception needs to be selected as well and potentially existing open Exception Claims for this user are shown to select from.</description>
        <name>scrTypeOfClaim</name>
        <label>Type of Claim</label>
        <locationX>1973</locationX>
        <locationY>603</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>decIsAccountClaimable</targetReference>
        </connector>
        <fields>
            <name>radTypeOfClaim</name>
            <choiceReferences>choRegular</choiceReferences>
            <choiceReferences>choException</choiceReferences>
            <choiceReferences>choSDR</choiceReferences>
            <dataType>String</dataType>
            <fieldText>What type of Claim do you want to submit?</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>radTypeOfExceptionClaim</name>
            <choiceReferences>choMerchantAccountClaim</choiceReferences>
            <choiceReferences>choPosAdvance</choiceReferences>
            <choiceReferences>choDifferentSplitPercentages</choiceReferences>
            <choiceReferences>IssuingIncentive</choiceReferences>
            <choiceReferences>choOther</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Type of Exception Claim</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disExceptionClaimMemberFound</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;﻿Attention:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;At least one open Exception Claim related to your user for this Account was found. Ensure you choose this Claim from the radio buttons below when you want to continue with that Claim. Click on the Claim Name to see more details.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>FindExistingExceptionClaimMember.Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>radSelectClaim</name>
            <choiceReferences>choClaimMembers</choiceReferences>
            <choiceReferences>choCreateNewClaim</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choCreateNewClaim</defaultSelectedChoiceReference>
            <fieldText>Please select the Claim that you would like to submit.</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disStartClaim</name>
            <fieldText>&lt;p&gt;{!txtStartClaim}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>In this screen the user is prompted with an explanation whether additional attachments are necessary to continue the Claim. There are various reasons to require the upload of files and these are shown based on visibility filters. Using a formula variable in the next element, we determine whether file upload was required and actually done. If not, we navigate back to this screen.

If you ADD or REMOVE reasons, you need to keep in mind to update the formula variable as well, which also determines whether the text &apos;You are not required to upload files&apos; shows at the bottom of this screen.</description>
        <name>scrUploadFiles</name>
        <label>Upload Files</label>
        <locationX>2425</locationX>
        <locationY>4348</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>AssignUploadCount</targetReference>
        </connector>
        <fields>
            <name>NoFilesAvailable</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Uploading Files&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;In this screen you can upload all the required files for your claim request. Below you can read whether you are required to upload a file or whether this is optional.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; You won&apos;t see any preview when you upload files below, but they will be added to your Claim record.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 18px;&quot;&gt;Requested Files&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>disProofException</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;﻿Required:&lt;/b&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt; &lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Please provide evidence that you have received approval from the CCO to submit an Exception Claim for this account (such as a screenshot of an email with the approval).&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Exception</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>IPP Advance</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>pickReceivedApprovalExceptionRequest</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Issuing Incentive</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disProofSdr</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Required:&lt;/b&gt;&lt;b style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt; &lt;/b&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;Please provide any extra evidence needed to submit an SDR Claim for this account.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>SDR</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disProofCommitment</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;Required: &lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;﻿Please provide evidence that the commitment has been configured and activated on this account (such as a screenshot of the backoffice).&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>numCommitmentInYears</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>numCommitmentInNumberOfMonthlyTransactions</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>GetExistingClaim.CommitmentInYears__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>GetExistingClaim.CommittedTransactions__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disProofPosAdvance</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;Required:&lt;/strong&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt; &lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Please provide evidence that you have received approval from the CCO to submit a IPP Advance Claim on this account (such as a screenshot of an email with the approval).&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>IPP Advance</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disProofIssuingIncentive</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Required:&lt;/strong&gt;&lt;strong style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt; &lt;/strong&gt;&lt;span style=&quot;color: rgb(50, 51, 56); background-color: transparent; font-size: 12px;&quot;&gt;Please provide a screenshot of the signed contract with date and signature included.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>radTypeOfExceptionClaim</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Issuing Incentive</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disNoFilesRequired</name>
            <fieldText>&lt;p&gt;You are not required to upload files.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>forFileUploadRequired</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disBreaklines</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>scrUploadFiles_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>scrUploadFiles_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrUploadFiles_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>uplFiles</name>
                    <extensionName>forceContent:fileUpload</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>Upload Files</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>accept</name>
                        <value>
                            <stringValue>.jpg, .jpeg, .pdf, .png, .xlsx, .xls</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>multiple</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>disabled</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>title</name>
                        <value>
                            <stringValue>Add files related to your claim</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>recordId</name>
                        <value>
                            <elementReference>forClaimToUpdate</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <outputParameters>
                        <assignToReference>varUploadedFiles</assignToReference>
                        <name>fileNames</name>
                    </outputParameters>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>scrUploadFiles_Section1_Column3</name>
                <fieldType>Region</fieldType>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>3</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>disMistake4</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Note:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(10, 191, 83); font-size: 11px;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px;&quot;&gt;Made a mistake on a previous screen? Close this window &amp;amp; open the Claim record to make changes.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(10, 191, 83); font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;Afterwards, click on the Claim button again to continue.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Screen that shows potential reasons to NOT allow a user continue the claim process. Either because they have no active manager or because the Account is marked as &apos;cannot be claimed&apos;.</description>
        <name>WarningNoManagerAssigned</name>
        <label>Warning No Manager Assigned</label>
        <locationX>2652</locationX>
        <locationY>523</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>WarningNoManagerAssigned_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>WarningNoManagerAssigned_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>dtCantBeClaimed</name>
                    <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;This Account Cannot Be Claimed&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Unfortunately, y&lt;/span&gt;ou cannot start a claim because this Account has already been claimed as part of another Account&lt;span style=&quot;font-size: 12px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;You can reach out to &lt;a href=&quot;mailto:salesforce-claims@adyen.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;salesforce-claims@adyen.com&lt;/a&gt;, in case of any question.&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>NotClaimable</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>NoManagerAssignedorInactive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>WarningNoManagerAssigned_Section2</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>WarningNoManagerAssigned_Section2_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>NoManagerAssignedYet</name>
                    <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;No Manager Found&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 12px;&quot;&gt;Unfortunately, we could not find an active manager for your user in Salesforce. You are only allowed to start this process if you have an active manager in Salesforce. Please reach out to &lt;/span&gt;&lt;a href=&quot;mailto:commercialtools@adyen.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255); font-size: 12px; color: rgb(2, 169, 219);&quot;&gt;commercialtools@adyen.com&lt;/a&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 12px;&quot;&gt; to set an active manager for your user. &lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>NoManagerAssignedorInactive</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>1873</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>GetAccount</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>txtClaimTeamNotification</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif; color: rgb(68, 68, 68);&quot;&gt;Just a heads up that {!GetUser.Name} is Claiming a Commission on the {!GetAccount.Name} Account.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif; color: rgb(68, 68, 68);&quot;&gt;You are also a Claim Member on this Account.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif; color: rgb(68, 68, 68);&quot;&gt;You can view this Claim here:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif; color: rgb(68, 68, 68);&quot;&gt;{!forClaimRecordLink}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif; color: rgb(68, 68, 68);&quot;&gt;Reach out to the Commercial Operations &amp;amp; Technology team in case this is a mistake or if you&apos;re marked as Ineligible to Claim when in fact you should be Eligible.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif;&quot;&gt;Thank you,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Roboto, sans-serif; color: rgb(68, 68, 68);&quot;&gt;Business Operations &amp;amp; Technology Team&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>txtEligibleSalesLeadNotification</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Just a heads up that {!GetUser.Name} is Claiming a Commission on the {!GetAccount.Name} Account.&lt;/p&gt;&lt;p&gt;You have been selected as the Team Lead eligible to Claim Commission.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You can view this Claim here:&lt;/p&gt;&lt;p&gt;{!forClaimRecordLink}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Reach out to the Commercial Ops &amp;amp; Tech Team via this email address: &lt;u style=&quot;color: rgb(7, 51, 182);&quot;&gt;salesforce-claims@adyen.com&lt;/u&gt; in case of any question.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Thank you,&lt;/p&gt;&lt;p&gt;Business Operations &amp;amp; Technology Team&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>txtStartClaim</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Please note that by clicking next you are starting a claim for the Account &lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!GetAccount.Name}&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>collectionNewSplitClaimMembers</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recClaimMembersToBeCreated</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recFourthClaimMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recordClaimMember1</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recordClaimMember2</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recordClaimMember3</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recordClaimMember4</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recSecondClaimMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>recThirdClaimMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ClaimMembers__c</objectType>
    </variables>
    <variables>
        <name>varClaimMemberPercentageBreakdown</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varClaimMemberToBeUpdated</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>varCollectionOfCountries</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varCountClaimMembersToBeUpdated</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varCreatedClaimId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varCreatedClaimMemberId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varFileUploadCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varFourthClaimMember</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varFourthClaimMemberName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varNone</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varNumberOfEligibleClaimMembers</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varNumberOfExceptionClaimsExclPOS</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varNumberOfNotificationMember</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varNumberOfRegularClaims</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varNumberOfRegularOrExceptionClaims</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varNumberOfSdrClaims</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varNumberOfUniqueCountries</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varOpportunity</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSecondClaimMember</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSecondClaimMemberName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSelectedPosAdvanceAmount</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSelectedRatingAdyenFormulaImprove</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSelectedRatingAdyenFormulaSuccess1</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSelectedRatingAdyenFormulaSuccess2</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSingleEmailAddress</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSplitClaimMembers</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varThirdClaimMember</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varThirdClaimMemberName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varUpdatedEligibleSalesLead</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varUpdatedEligibleSalesLeadName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varUploadedFiles</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
