<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <decisions>
        <name>AddToCommercialOrService</name>
        <label>Add To Commercial Or Service?</label>
        <locationX>1172</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>Do Nothing</defaultConnectorLabel>
        <rules>
            <name>RemoveFromGroups</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteFromServiceOrCommercial</targetReference>
            </connector>
            <label>Remove From Groups</label>
        </rules>
        <rules>
            <name>AddToBothGroupsAdminAMPool</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SalesTeam__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Account Management Pool</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Profile.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Admin</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Impact_Manager</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AlreadyPartOfCommercialUsersGroup</targetReference>
            </connector>
            <label>Add To Both Groups (Admin &amp; AM Pool)</label>
        </rules>
        <rules>
            <name>AddToCommercialUsersGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Profile_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Basic Service</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Impact_Manager</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteFromServiceUsersPublicGroupFirst</targetReference>
            </connector>
            <label>Add To Commercial Users Group</label>
        </rules>
        <rules>
            <name>AddToServiceUsersGroup</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Profile_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Basic Service</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Impact_Manager</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteFromCommercialUsersPublicGroupFirst</targetReference>
            </connector>
            <label>Add To Service Users Group</label>
        </rules>
    </decisions>
    <decisions>
        <name>AlreadyPartOfCommercialUsersGroup</name>
        <label>Already Part Of Commercial Users Group?</label>
        <locationX>710</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>AddUserToCommercialGroup1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Not Yet</defaultConnectorLabel>
        <rules>
            <name>YesDoNothing0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCommercialGroupMemberCheck2.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AlreadyPartOfServiceUsersGroup</targetReference>
            </connector>
            <label>Yes, Do Nothing</label>
        </rules>
    </decisions>
    <decisions>
        <name>AlreadyPartOfCommercialUsersPublicGroup</name>
        <label>Already Part Of Commercial Users Public Group?</label>
        <locationX>1238</locationX>
        <locationY>1163</locationY>
        <defaultConnector>
            <targetReference>AddUserToCommercialGroup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Not Yet</defaultConnectorLabel>
        <rules>
            <name>YesDoNothing</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetCommercialGroupMemberCheck2.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes, Do Nothing</label>
        </rules>
    </decisions>
    <decisions>
        <name>AlreadyPartOfServiceUsersGroup</name>
        <label>Already Part Of Service Users Group?</label>
        <locationX>710</locationX>
        <locationY>1163</locationY>
        <defaultConnector>
            <targetReference>AddUserToServiceGroup0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Not Yet</defaultConnectorLabel>
        <rules>
            <name>YesDoNothing1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetServiceGroupMemberCheck.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes, Do Nothing</label>
        </rules>
    </decisions>
    <decisions>
        <name>AlreadyPartOfServiceUsersPublicGroup</name>
        <label>Already Part Of Service Users Public Group?</label>
        <locationX>1766</locationX>
        <locationY>1163</locationY>
        <defaultConnector>
            <targetReference>AddUserToServiceGroup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Not Yet</defaultConnectorLabel>
        <rules>
            <name>YesDoNothing2</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetServiceGroupMemberCheck.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes, Do Nothing</label>
        </rules>
    </decisions>
    <decisions>
        <name>DeleteFromCommercialUsersPublicGroupFirst</name>
        <label>Delete From Commercial Users Public Group First</label>
        <locationX>1766</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>AlreadyPartOfServiceUsersPublicGroup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Do Nothing</defaultConnectorLabel>
        <rules>
            <name>YesDeleteFromCommercialGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCommercialGroupMemberCheck2.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteFromCommercialGroup</targetReference>
            </connector>
            <label>Yes, Delete From Commercial Group</label>
        </rules>
    </decisions>
    <decisions>
        <name>DeleteFromServiceOrCommercial</name>
        <label>Delete From Service Or Commercial</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <defaultConnectorLabel>No Group</defaultConnectorLabel>
        <rules>
            <name>DeleteFromServiceORCommercial1</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetServiceGroupMemberCheck.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCommercialGroupMemberCheck2.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteFromGroups</targetReference>
            </connector>
            <label>Delete From Service OR Commercial</label>
        </rules>
    </decisions>
    <decisions>
        <name>DeleteFromServiceUsersPublicGroupFirst</name>
        <label>Delete From Service Users Public Group First</label>
        <locationX>1238</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>AlreadyPartOfCommercialUsersPublicGroup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No, Do Nothing</defaultConnectorLabel>
        <rules>
            <name>YesDeleteFromServiceGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetServiceGroupMemberCheck.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteFromServiceGroup</targetReference>
            </connector>
            <label>Yes, Delete From Service Group</label>
        </rules>
    </decisions>
    <description>06/09/2023 - Vesna: Add all users with Impact Manager Role to the All Service User Public Group, and not add them to the Commercial User Public Group</description>
    <environments>Default</environments>
    <formulas>
        <name>NewUserCreatedFormula</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>User Commercial and Service Users Groups Assignments {!$Flow.CurrentDateTime}</interviewLabel>
    <label>User Commercial and Service Users Groups Assignments</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>AddUserToCommercialGroup</name>
        <label>Add User To Commercial Group</label>
        <locationX>1370</locationX>
        <locationY>1271</locationY>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>GetCommercialUsersGroup.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>AddUserToCommercialGroup1</name>
        <label>Add User To Commercial Group</label>
        <locationX>798</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>AlreadyPartOfServiceUsersGroup</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>GetCommercialUsersGroup.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>AddUserToServiceGroup</name>
        <label>Add User To Service Group</label>
        <locationX>1898</locationX>
        <locationY>1271</locationY>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>GetServiceUsersGroup.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>AddUserToServiceGroup0</name>
        <label>Add User To Service Group</label>
        <locationX>842</locationX>
        <locationY>1271</locationY>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>GetServiceUsersGroup.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>DeleteFromCommercialGroup</name>
        <label>Delete From Commercial Group</label>
        <locationX>1634</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>AlreadyPartOfServiceUsersPublicGroup</targetReference>
        </connector>
        <inputReference>GetCommercialGroupMemberCheck2</inputReference>
    </recordDeletes>
    <recordDeletes>
        <name>DeleteFromGroups</name>
        <label>Delete From Groups</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetServiceUsersGroup.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCommercialUsersGroup.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
    </recordDeletes>
    <recordDeletes>
        <name>DeleteFromServiceGroup</name>
        <label>Delete From Service Group</label>
        <locationX>1106</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>AlreadyPartOfCommercialUsersPublicGroup</targetReference>
        </connector>
        <inputReference>GetServiceGroupMemberCheck</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>GetCommercialGroupMemberCheck2</name>
        <label>Get Commercial Group Member Check</label>
        <locationX>1172</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetServiceGroupMemberCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCommercialUsersGroup.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCommercialUsersGroup</name>
        <label>Get Commercial Users Group</label>
        <locationX>1172</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetCommercialGroupMemberCheck2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CommercialUsers</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetServiceGroupMemberCheck</name>
        <label>Get Service Group Member Check</label>
        <locationX>1172</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddToCommercialOrService</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetServiceUsersGroup.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetServiceUsersGroup</name>
        <label>Get Service Users Group</label>
        <locationX>1172</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetCommercialUsersGroup</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>AllServiceUsers</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1046</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetServiceUsersGroup</targetReference>
        </connector>
        <filterFormula>AND( 
TEXT({!$Record.UserType}) = &apos;Standard&apos;,
{!$Record.DoNotRunFlow__c} = FALSE,

OR(
ISNEW(),
ISCHANGED({!$Record.ProfileId}),
ISCHANGED({!$Record.IsActive}),
ISCHANGED({!$Record.SalesTeam__c})
)
)</filterFormula>
        <object>User</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CollectionPlatformEventRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>HistoryRecordCreation__e</objectType>
    </variables>
    <variables>
        <name>NewHistoryPlatformRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>HistoryRecordCreation__e</objectType>
    </variables>
    <variables>
        <name>NewParticipantPlatformRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ParticipantPlatformEvent__e</objectType>
    </variables>
    <variables>
        <name>varShouldHistoryRecordBeCreated</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
