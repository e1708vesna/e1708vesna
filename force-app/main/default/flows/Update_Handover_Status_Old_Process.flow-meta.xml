<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>49.0</apiVersion>
    <choices>
        <name>choCurrentImNeeded</name>
        <choiceText>{!forImNeededDefault}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>forImNeededDefault</elementReference>
        </value>
    </choices>
    <choices>
        <name>choCurrentPomNeeded</name>
        <choiceText>{!forPomNeededDefault}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>forPomNeededDefault</elementReference>
        </value>
    </choices>
    <choices>
        <name>choCurrentRegion</name>
        <choiceText>{!forRegionDefault}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>forRegionDefault</elementReference>
        </value>
    </choices>
    <choices>
        <name>choNo</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No</stringValue>
        </value>
    </choices>
    <choices>
        <name>choYes</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes</stringValue>
        </value>
    </choices>
    <choices>
        <name>CurrentStatus</name>
        <choiceText>{!StatusDefaultChoice}</choiceText>
        <dataType>String</dataType>
        <value>
            <elementReference>StatusDefaultChoice</elementReference>
        </value>
    </choices>
    <choices>
        <name>EmptyChoice</name>
        <choiceText>&lt;span style=&quot;color: rgb(30, 30, 30); font-family: &amp;quot;Salesforce Sans&amp;quot;, -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, sans-serif; font-size: 15px; background-color: rgb(255, 255, 255);&quot;&gt;--None--&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue></stringValue>
        </value>
    </choices>
    <decisions>
        <name>MeetsCriteria</name>
        <label>Meets Criteria?</label>
        <locationX>468</locationX>
        <locationY>278</locationY>
        <defaultConnector>
            <targetReference>scrError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>1 OR 2 OR 3 OR 4 OR (5 AND 6 AND 7)</conditionLogic>
            <conditions>
                <leftValueReference>GetHandover.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetHandover.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetHandover.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IM/POM Requested</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetHandover.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AM/CSM Requested</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetHandover.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Assigned</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forLiveAccount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forValidAssignedAm</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>scrFlow</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>NoneSelected</name>
        <label>None Selected</label>
        <locationX>182</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>UpdateHandover</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes1</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>picklistIsImNeeded</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>EmptyChoice</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>picklistIsPomNeeded</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>EmptyChoice</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InputValidation</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>choAvailableImNeeded</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forImNeededParticleId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentImNeeded</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedImNeeded</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choAvailablePomNeeded</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>forPomNeededParticleId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentPomNeeded</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedPomNeeded</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choAvailableRegions</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Handover__c.00N1o00000JpM4q</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>choCurrentRegion</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeHongKong</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeManchester</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeNewYork</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeSanFrancisco</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeSaoPaulo</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeShanghai</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeSingapore</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeStockholm</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeSydney</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeTokyo</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeToronto</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeBrussels</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeAustin</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeBoston</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeMumbai</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeWarsaw</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeMexicoCity</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeMunich</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>forExcludeDubai</elementReference>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>varSelectedRegion</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>Label</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choImNeeded</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>IsImNeeded__c</picklistField>
        <picklistObject>Handover__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>choPomNeeded</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>IsPomNeeded__c</picklistField>
        <picklistObject>Handover__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>StatusPicklistChoices</name>
        <dataType>String</dataType>
        <displayField>Label</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>EntityParticleId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Handover__c.00N1o00000JpqAt</stringValue>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>CurrentStatus</elementReference>
            </value>
        </filters>
        <filters>
            <field>Value</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <object>PicklistValueInfo</object>
        <outputAssignments>
            <assignToReference>SelectedStatus</assignToReference>
            <field>Value</field>
        </outputAssignments>
        <sortField>IsActive</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Value</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>forAdyenWalletShare</name>
        <dataType>Number</dataType>
        <expression>IF(NOT(ISBLANK({!varAdyenWalletShare})),{!varAdyenWalletShare},{!GetHandover.AdyenWalletShare__c}*100)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forAmToAmHandover</name>
        <dataType>Boolean</dataType>
        <expression>{!GetHandover.RecordType.DeveloperName} = &quot;AMCSMtoAMCSM&quot;</expression>
    </formulas>
    <formulas>
        <name>forAssignedAm</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varAssignedAm})),{!varAssignedAm},{!GetHandover.AssignToUser__c})</expression>
    </formulas>
    <formulas>
        <name>forAssignedIm</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varAssignedIm})),{!varAssignedIm},{!GetHandover.AssignedIm__c})</expression>
    </formulas>
    <formulas>
        <name>forAssignedImEmail</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varAssignedImEmail})),{!varAssignedImEmail},{!GetHandover.AssignedImEmail__c})</expression>
    </formulas>
    <formulas>
        <name>forAssignedPom</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varAssignedPom})),{!varAssignedPom},{!GetHandover.AssignedPom__c})</expression>
    </formulas>
    <formulas>
        <name>forAssignToUser</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!GetHandover.AssignToUser__c}),NULL,{!GetHandover.AssignToUser__r.Id})</expression>
    </formulas>
    <formulas>
        <name>forDesiredRegion</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varSelectedRegion})),{!varSelectedRegion},{!forRegionDefault})</expression>
    </formulas>
    <formulas>
        <name>forExcludeAustin</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Austin&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeBerlin</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Berlin&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeBoston</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Boston&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeBrussels</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Brussels&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeDubai</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Dubai&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeHongKong</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Hong Kong&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeMadrid</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Madrid&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeManchester</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Manchester&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeMexicoCity</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Mexico City&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeMilan</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Milan&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeMumbai</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Mumbai&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeMunich</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Munich&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeNewYork</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;New York&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeParis</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Paris&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeSanFrancisco</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;San Francisco&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeSaoPaulo</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Sao Paulo&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeShanghai</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Shanghai&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeSingapore</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Singapore&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeStockholm</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Stockholm&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeSydney</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Sydney&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeTokyo</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Tokyo&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeToronto</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Toronto&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forExcludeWarsaw</name>
        <dataType>String</dataType>
        <expression>IF({!forSalesToCsmHandover}=True,&quot;Warsaw&quot;,&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>forGiveSomeBackgroundOnTheDealMade</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varGiveSomeBackgroundOnTheDealMade})),{!varGiveSomeBackgroundOnTheDealMade},{!GetHandover.Givesomebackgroundonthedealmade__c})</expression>
    </formulas>
    <formulas>
        <name>forImNeededDefault</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK(TEXT({!GetHandover.IsImNeeded__c})),&quot;Select whether IM is needed&quot;,TEXT({!GetHandover.IsImNeeded__c}))</expression>
    </formulas>
    <formulas>
        <name>forImNeededParticleId</name>
        <dataType>String</dataType>
        <expression>{!$Label.IsImNeeded}</expression>
    </formulas>
    <formulas>
        <name>forIsImNeeded</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varSelectedImNeeded})),{!varSelectedImNeeded},TEXT({!GetHandover.IsImNeeded__c}))</expression>
    </formulas>
    <formulas>
        <name>forIsPomNeeded</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!varSelectedPomNeeded})),{!varSelectedPomNeeded},TEXT({!GetHandover.IsPomNeeded__c}))</expression>
    </formulas>
    <formulas>
        <name>forLiveAccount</name>
        <dataType>Boolean</dataType>
        <expression>{!GetHandover.Account__r.RecordTypeId} = {!$Label.BusinessAccount}</expression>
    </formulas>
    <formulas>
        <name>forPomNeededDefault</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK(TEXT({!GetHandover.IsPomNeeded__c})),&quot;Select whether POM is needed&quot;,TEXT({!GetHandover.IsPomNeeded__c}))</expression>
    </formulas>
    <formulas>
        <name>forPomNeededParticleId</name>
        <dataType>String</dataType>
        <expression>{!$Label.IsPomNeeded}</expression>
    </formulas>
    <formulas>
        <name>forRegionDefault</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK(TEXT({!GetHandover.Desired_AM_Region__c})),&quot;Amsterdam&quot;,TEXT({!GetHandover.Desired_AM_Region__c}))</expression>
    </formulas>
    <formulas>
        <name>forSalesToCsmHandover</name>
        <dataType>Boolean</dataType>
        <expression>{!GetHandover.RecordType.DeveloperName} = &quot;SalesToAM&quot;</expression>
    </formulas>
    <formulas>
        <name>forSalesToCxHandover</name>
        <dataType>Boolean</dataType>
        <expression>{!GetHandover.RecordType.DeveloperName} = &quot;SalesToCx&quot;</expression>
    </formulas>
    <formulas>
        <name>forUpdatedStatus</name>
        <dataType>String</dataType>
        <expression>IF(AND(TEXT({!GetHandover.Status__c})=&quot;Open&quot;,{!picklistIsImNeeded}=&quot;Yes&quot;),&quot;IM/POM Requested&quot;,
IF(AND(TEXT({!GetHandover.Status__c})=&quot;Open&quot;,{!picklistIsPomNeeded}=&quot;Yes&quot;),&quot;IM/POM Requested&quot;,
IF(TEXT({!GetHandover.Status__c})=&quot;Open&quot;,&quot;AM/CSM Requested&quot;,
IF(TEXT({!GetHandover.Status__c})=&quot;IM/POM Requested&quot;,&quot;AM/CSM Requested&quot;,
IF(TEXT({!GetHandover.Status__c})=&quot;AM/CSM Requested&quot;,&quot;Assigned&quot;,
IF(TEXT({!GetHandover.Status__c})=&quot;Assigned&quot;,&quot;Completed&quot;,TEXT({!GetHandover.Status__c})))))))</expression>
    </formulas>
    <formulas>
        <name>forValidAssignedAm</name>
        <dataType>Boolean</dataType>
        <expression>AND(
NOT(ISBLANK({!GetHandover.AssignToUser__c})),
{!GetHandover.AssignToUser__r.IsActive}=True,
OR(
{!GetHandover.AssignToUser__r.Profile_Name__c} = &quot;Adyen v2 Account Manager&quot;,
{!GetHandover.AssignToUser__r.Profile_Name__c} = &quot;Adyen v2 Account Manager Lead&quot;,
{!GetHandover.AssignToUser__r.Profile_Name__c} = &quot;Adyen v2 Customer Success&quot;,
{!GetHandover.AssignToUser__r.Profile_Name__c} = &quot;Adyen v2 Customer Success Lead&quot;))</expression>
    </formulas>
    <formulas>
        <name>StatusDefaultChoice</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK(TEXT({!GetHandover.Status__c})),&quot;Select a Status&quot;,TEXT({!GetHandover.Status__c}))</expression>
    </formulas>
    <interviewLabel>Update Handover Status - Old Process {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Handover Status - Old Process</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetHandover</name>
        <label>Get Handover</label>
        <locationX>468</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>MeetsCriteria</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>ErrorScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Handover__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateHandover</name>
        <label>Update Handover</label>
        <locationX>182</locationX>
        <locationY>854</locationY>
        <faultConnector>
            <targetReference>ErrorScreen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AdyenWalletShare__c</field>
            <value>
                <elementReference>forAdyenWalletShare</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AssignToUser__c</field>
            <value>
                <elementReference>forAssignedAm</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AssignedImEmail__c</field>
            <value>
                <elementReference>forAssignedImEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AssignedIm__c</field>
            <value>
                <elementReference>forAssignedIm</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AssignedPom__c</field>
            <value>
                <elementReference>forAssignedPom</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Desired_AM_Region__c</field>
            <value>
                <elementReference>forDesiredRegion</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Givesomebackgroundonthedealmade__c</field>
            <value>
                <elementReference>forGiveSomeBackgroundOnTheDealMade</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsImNeeded__c</field>
            <value>
                <elementReference>picklistIsImNeeded</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsPomNeeded__c</field>
            <value>
                <elementReference>picklistIsPomNeeded</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <elementReference>forUpdatedStatus</elementReference>
            </value>
        </inputAssignments>
        <object>Handover__c</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>ErrorScreen</name>
        <label>ErrorScreen</label>
        <locationX>490</locationX>
        <locationY>974</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disErrorText</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Something went wrong during this process due to the following error:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(192, 1, 1);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Please retry if you understand what goes wrong, otherwise reach out to your System Administrator.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>InputValidation</name>
        <label>Input Validation</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateHandover</targetReference>
        </connector>
        <fields>
            <name>NoneSelectedText</name>
            <fieldText>&lt;p&gt;You did not specifiy whether or not and IM and/or POM is needed. Please go back and select either &apos;Yes&apos; or &apos;No&apos;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>scrError</name>
        <label>Error Screen</label>
        <locationX>754</locationX>
        <locationY>398</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>disNoLiveAccount</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;Warning:&lt;/b&gt; Handovers can only be completed after go live of the Account/Opportunity.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>forLiveAccount</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disAssignedAmNotValid</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;Warning:&lt;/b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; &lt;/span&gt;The AM/CSM is not assigned or is not valid (the user is inactive or has the wrong profile). Please update the Assigned AM/CSM before completing the Handover.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>forValidAssignedAm</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disWarningCompletedHandover</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;Warning:&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;You cannot upddate the status of a Handover that is already completed. If this is a mistake, ask your admin for help.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Completed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>scrFlow</name>
        <label>scrFlow</label>
        <locationX>182</locationX>
        <locationY>398</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>NoneSelected</targetReference>
        </connector>
        <fields>
            <name>disUpdateStatus1</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;If an IM is needed, the Handover Status will be updated to&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;IM Requested&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;. If IM is not needed, the Handover Status will be updated to&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;AM Requested&lt;/b&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Open</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forSalesToCxHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disUpdatedStatus2</name>
            <fieldText>&lt;p&gt;The Handover Status will be updated to &lt;b&gt;AM/CSM Requested&lt;/b&gt;.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Open</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forSalesToCxHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disUpdatedStatus3</name>
            <fieldText>&lt;p&gt;{!tmpUpdateStatus}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Open</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>varDesiredCxRegion</name>
            <choiceReferences>choCurrentRegion</choiceReferences>
            <choiceReferences>choAvailableRegions</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choCurrentRegion</defaultSelectedChoiceReference>
            <fieldText>Desired CX / Customer Success Region</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Open</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>picklistIsImNeeded</name>
            <choiceReferences>EmptyChoice</choiceReferences>
            <choiceReferences>choImNeeded</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetHandover.IsImNeeded__c</elementReference>
            </defaultValue>
            <fieldText>Is IM needed?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Open</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>IM/POM Requested</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forSalesToCxHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>varAssignedIm</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetHandover.AssignedIm__c</elementReference>
            </defaultValue>
            <fieldText>Assigned IM</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>IM/POM Requested</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AssignedImEmail</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Assigned IM Email</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>GetHandover.AssignedImEmail__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varAssignedImEmail</assignToReference>
                <name>value</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>IM/POM Requested</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>picklistIsPomNeeded</name>
            <choiceReferences>EmptyChoice</choiceReferences>
            <choiceReferences>choPomNeeded</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetHandover.IsPomNeeded__c</elementReference>
            </defaultValue>
            <fieldText>Is POM needed?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Open</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>IM/POM Requested</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forSalesToCxHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AssignedPom</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>AssignedPom__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Assigned POM</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Handover__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>GetHandover.AssignedPom__c</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varAssignedPom</assignToReference>
                <name>recordId</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>IM/POM Requested</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AssignedAm</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>AssignToUser__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Assigned AM/CSM</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Handover__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>GetHandover.AssignToUser__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>varAssignedAm</assignToReference>
                <name>recordId</name>
            </outputParameters>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>AM/CSM Requested</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disMandatoryFields</name>
            <fieldText>&lt;p&gt;Please populate the following mandatory fields in order to be able to complete this Handover.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND ((3 AND 6) OR (4 AND 5))</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Assigned</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Completed</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forSalesToCxHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forAmToAmHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Givesomebackgroundonthedealmade__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.AdyenWalletShare__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>varGiveSomeBackgroundOnTheDealMade</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetHandover.Givesomebackgroundonthedealmade__c</elementReference>
            </defaultValue>
            <fieldText>Give some background on the deal made</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Givesomebackgroundonthedealmade__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forAmToAmHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Assigned</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Completed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>varAdyenWalletShare</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>GetHandover.AdyenWalletShare__c</elementReference>
            </defaultValue>
            <fieldText>Adyen wallet share %</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Assigned</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Completed</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>forSalesToCxHandover</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetHandover.AdyenWalletShare__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>342</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetHandover</targetReference>
        </connector>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>tmpUpdateStatus</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;The Handover Status will be updated to &lt;b&gt;{!forUpdatedStatus}&lt;/b&gt;.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SelectedStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varAssignedAm</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetHandover.AssignToUser__c</elementReference>
        </value>
    </variables>
    <variables>
        <name>varAssignedImEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetHandover.AssignedImEmail__c</elementReference>
        </value>
    </variables>
    <variables>
        <name>varAssignedPom</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>GetHandover.AssignedPom__c</elementReference>
        </value>
    </variables>
    <variables>
        <name>varSelectedImNeeded</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSelectedPomNeeded</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSelectedRegion</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
