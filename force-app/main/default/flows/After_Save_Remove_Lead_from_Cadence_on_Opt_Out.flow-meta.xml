<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action that removes the opted-out lead from all cadences and sets the completion reason to ManuallyRemoved.</description>
        <name>RemoveLead</name>
        <label>Remove Lead</label>
        <locationX>242</locationX>
        <locationY>492</locationY>
        <actionName>removeTargetFromSalesCadenceNotFound</actionName>
        <actionType>removeTargetFromSalesCadence</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>completionReasonCode</name>
            <value>
                <stringValue>ManuallyRemoved</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <decisions>
        <description>Determines whether the ID of the GetActiveCadenceTrackerRecord exists.</description>
        <name>HasCadenceTrackerId</name>
        <label>Has Cadence Tracker ID?</label>
        <locationX>374</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>CadenceTrackerIdExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetActiveCadenceTrackerRecord.Id__NotFound</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RemoveLead</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Determines whether the ID of the GetActiveCadenceTrackerRecord exists.</description>
    <environments>Default</environments>
    <interviewLabel>$Label.SEIncludedFlowLabel.RemoveLeadfromCadenceonOptOut {!$Flow.CurrentDateTime}</interviewLabel>
    <label>After Save - Remove Lead from Cadence on Opt-Out</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets a cadence tracker record with a Target ID matching the Lead ID of the triggering record and with a State not equal to Complete or Error. Stores the ID of the returned record in the GetActiveCadenceTrackerRecord record variable.</description>
        <name>GetActiveCadenceTrackerRecord</name>
        <label>Get Active Cadence Tracker Record</label>
        <locationX>374</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasCadenceTrackerId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TargetId__NotFound</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>State__NotFound</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Complete</stringValue>
            </value>
        </filters>
        <filters>
            <field>State__NotFound</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Error</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ActionCadenceTracker__NotFound</object>
        <queriedFields>Id__NotFound</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>or</filterLogic>
        <filters>
            <field>HasOptedOutOfEmail</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>DoNotCall</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Lead</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Run20RecordBatch</name>
            <connector>
                <targetReference>GetActiveCadenceTrackerRecord</targetReference>
            </connector>
            <label>Run 20-Record Batch</label>
            <maxBatchSize>20</maxBatchSize>
            <offsetNumber>0</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
