<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>AssignNotApplicableToBlankFields</name>
        <label>Assign Not Applicable to Blank Fields</label>
        <locationX>50</locationX>
        <locationY>2114</locationY>
        <assignmentItems>
            <assignToReference>recVarProductRequest.Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Applicable</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recVarProductRequest.ProductOption__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Applicable</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recVarProductRequest.Feature__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not Applicable</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateProductRequest</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>OverwriteRecordIdWithCaseAccountId</name>
        <label>Overwrite RecordId with CaseAccountId</label>
        <locationX>424</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>recordId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetACase.AccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>WhatProductIsTheRequestFor</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>Authentication</name>
        <choiceText>Authentication</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Authentication</stringValue>
        </value>
    </choices>
    <choices>
        <name>DataInsights</name>
        <choiceText>Data &amp;amp; Insights</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Data &amp; Insights</stringValue>
        </value>
    </choices>
    <choices>
        <name>EmbeddedFinancialProducts</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Embedded Financial Products&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>EmbeddedFinancialProducts</stringValue>
        </value>
    </choices>
    <choices>
        <name>EmbeddedPayments</name>
        <choiceText>Embedded Payments</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Embedded Payments</stringValue>
        </value>
    </choices>
    <choices>
        <name>EnterpriseFinancialServices</name>
        <choiceText>Enterprise Financial Services</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Enterprise Financial Services</stringValue>
        </value>
    </choices>
    <choices>
        <name>Impact1</name>
        <choiceText>Impact</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Impact</stringValue>
        </value>
    </choices>
    <choices>
        <name>InPersonPayments</name>
        <choiceText>In-person Payments</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>In-Person Payments</stringValue>
        </value>
    </choices>
    <choices>
        <name>OnlinePayments</name>
        <choiceText>Online Payments</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Online Payments</stringValue>
        </value>
    </choices>
    <choices>
        <name>RevenueOptimization</name>
        <choiceText>Revenue Optimization</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Revenue Optimization</stringValue>
        </value>
    </choices>
    <choices>
        <name>RiskManagement</name>
        <choiceText>Risk Management&lt;p&gt;&lt;br&gt;&lt;/p&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Risk Management</stringValue>
        </value>
    </choices>
    <choices>
        <name>SelfService</name>
        <choiceText>Self-Service</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Self-Service</stringValue>
        </value>
    </choices>
    <constants>
        <name>ProductRequest</name>
        <dataType>String</dataType>
        <value>
            <stringValue>ProductRequest__c</stringValue>
        </value>
    </constants>
    <decisions>
        <name>AreThereExistingProductRequests</name>
        <label>Are there existing Product Requests?</label>
        <locationX>336</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>CreateAProductRequest</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetExistingProductRequestRecords</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ScreenExistingProductRequests</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>decIsAProductRequestFromAnAccountOrACase</name>
        <label>Is a product request from an Account or a Case?</label>
        <locationX>336</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>GetACase</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Created From Case</defaultConnectorLabel>
        <rules>
            <name>CreatedFromAccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>001</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WhatProductIsTheRequestFor</targetReference>
            </connector>
            <label>Created from Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsNewPaymentMethod</name>
        <label>Is New Payment Method?</label>
        <locationX>182</locationX>
        <locationY>2006</locationY>
        <defaultConnector>
            <targetReference>CreateProductRequest</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SubType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New Payment Method</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNotApplicableToBlankFields</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsThereAnExistingProductRequestSelected</name>
        <label>Is there an existing Product Request selected?</label>
        <locationX>182</locationX>
        <locationY>974</locationY>
        <defaultConnector>
            <targetReference>CreateAProductRequest</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_PRSelected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ExistingProductRequestList.firstSelectedRow.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddOpportunityAndPilot</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsTypePaymentMethod</name>
        <label>Is Type Payment Method?</label>
        <locationX>336</locationX>
        <locationY>1790</locationY>
        <defaultConnector>
            <targetReference>CreateProductRequest</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payment Method</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCaseAssignment</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>- Run as system without sharing (access all data)</description>
    <dynamicChoiceSets>
        <name>ExistingProductReqeustRecords</name>
        <dataType>String</dataType>
        <displayField>Product__c</displayField>
        <object>ProductRequest__c</object>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>MainMarketCountriesRegions</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>MainMarketCountryRegion__c</picklistField>
        <picklistObject>ProductRequest__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>pcsImpact</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Impact__c</picklistField>
        <picklistObject>ProductRequest__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>pcsMainMarket</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Market__c</picklistField>
        <picklistObject>ProductRequest__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>pcsPilot</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Pilot__c</picklistField>
        <picklistObject>LinkedAccount__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>pcsSubType</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>SubType__c</picklistField>
        <picklistObject>ProductRequest__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>pscType</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Type__c</picklistField>
        <picklistObject>ProductRequest__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>RelatedOpportunityLinkedAccount</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Copy_1_of_luAccount.recordId</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>forAssignee</name>
        <dataType>String</dataType>
        <expression>IF({!GetCaseAssignment.Id} = NULL, {!$Label.QueueProductRequestId}, {!GetCaseAssignment.Assignee__c})</expression>
    </formulas>
    <formulas>
        <name>forMainMarket</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!MainMarket2}), TEXT({!recVarProductRequest.MainMarketCountryRegion__c}), {!MainMarket2})</expression>
    </formulas>
    <formulas>
        <name>forPilot</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!PilotNonPaymentMethod}),{!PilotPaymentMethods},{!PilotNonPaymentMethod})</expression>
    </formulas>
    <interviewLabel>Screen - Product Request {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Screen - Product Request</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>CreateLinkedAccount</name>
        <label>Create Linked Account</label>
        <locationX>336</locationX>
        <locationY>2498</locationY>
        <connector>
            <targetReference>AProductRequestHasBeenCreated</targetReference>
        </connector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>Copy_1_of_luAccount.recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IssueDescription__c</field>
            <value>
                <elementReference>Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MainMarketCountryRegion__c</field>
            <value>
                <elementReference>forMainMarket</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pilot__c</field>
            <value>
                <elementReference>forPilot</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProductRequest__c</field>
            <value>
                <elementReference>varProductRequestId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedCase__c</field>
            <value>
                <elementReference>GetACase.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedOpportunity__c</field>
            <value>
                <elementReference>RelatedOpportunityNewProductRequest.selectedChoiceValues</elementReference>
            </value>
        </inputAssignments>
        <object>LinkedAccount__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateProductRequest</name>
        <label>Create Product Request</label>
        <locationX>336</locationX>
        <locationY>2390</locationY>
        <assignRecordIdToReference>varProductRequestId</assignRecordIdToReference>
        <connector>
            <targetReference>CreateLinkedAccount</targetReference>
        </connector>
        <inputAssignments>
            <field>Category__c</field>
            <value>
                <elementReference>recVarProductRequest.Category__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description__c</field>
            <value>
                <elementReference>Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Feature__c</field>
            <value>
                <elementReference>recVarProductRequest.Feature__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ImpactDescription__c</field>
            <value>
                <elementReference>ImpactDescription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Impact__c</field>
            <value>
                <elementReference>recVarProductRequest.Impact__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MainMarketCountryRegion__c</field>
            <value>
                <elementReference>forMainMarket</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>ProductRequestName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>NewPaymentMethodName__c</field>
            <value>
                <elementReference>PaymentMethodName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>forAssignee</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProductOption__c</field>
            <value>
                <elementReference>recVarProductRequest.ProductOption__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Product__c</field>
            <value>
                <elementReference>recVarProductRequest.Product__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SubType__c</field>
            <value>
                <elementReference>SubType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type__c</field>
            <value>
                <elementReference>recVarProductRequest.Type__c</elementReference>
            </value>
        </inputAssignments>
        <object>ProductRequest__c</object>
    </recordCreates>
    <recordCreates>
        <name>LinkAccountToExistingProductRequest</name>
        <label>Link Account to existing Product Request</label>
        <locationX>50</locationX>
        <locationY>1190</locationY>
        <connector>
            <targetReference>LinkedAccountCreated</targetReference>
        </connector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>Copy_1_of_luAccount.recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IssueDescription__c</field>
            <value>
                <elementReference>recVarLinkedAccount.IssueDescription__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MainMarketCountryRegion__c</field>
            <value>
                <elementReference>recVarLinkedAccount.MainMarketCountryRegion__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pilot__c</field>
            <value>
                <elementReference>recVarLinkedAccount.Pilot__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProductRequest__c</field>
            <value>
                <elementReference>ExistingProductRequestList.firstSelectedRow.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedCase__c</field>
            <value>
                <elementReference>GetACase.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedOpportunity__c</field>
            <value>
                <elementReference>RelatedOpportunityForLinkedAccount.selectedChoiceValues</elementReference>
            </value>
        </inputAssignments>
        <object>LinkedAccount__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetACase</name>
        <label>Get a Case</label>
        <locationX>424</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>OverwriteRecordIdWithCaseAccountId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCaseAssignment</name>
        <label>Get Case Assignment</label>
        <locationX>182</locationX>
        <locationY>1898</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsNewPaymentMethod</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Market__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recVarProductRequest.MainMarketCountryRegion__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.CaseAssignmentPaymentMethodRT</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case_Assignment__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetExistingProductRequestRecords</name>
        <label>Get Existing Product Request Records</label>
        <locationX>336</locationX>
        <locationY>650</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AreThereExistingProductRequests</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recVarProductRequest.Type__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recVarProductRequest.Product__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProductOption__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recVarProductRequest.ProductOption__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Category__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recVarProductRequest.Category__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Feature__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recVarProductRequest.Feature__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SubType__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SubType1</elementReference>
            </value>
        </filters>
        <filters>
            <field>NewPaymentMethodName__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PaymentMethodName1</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductRequest__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>AddOpportunityAndPilot</name>
        <label>Add Opportunity and Pilot</label>
        <locationX>50</locationX>
        <locationY>1082</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>LinkAccountToExistingProductRequest</targetReference>
        </connector>
        <fields>
            <name>RelateAnOpportunityAndPilot</name>
            <fieldText>&lt;p&gt;As you have chosen an existing Product Request to upvote, please add an issue description, main market, related Opportunity, plus indicate whether your Merchant would like to participate in a pilot.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarLinkedAccount.IssueDescription__c</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarLinkedAccount.MainMarketCountryRegion__c</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarLinkedAccount.Pilot__c</objectFieldReference>
        </fields>
        <fields>
            <name>RelatedOpportunityForLinkedAccount</name>
            <choiceReferences>RelatedOpportunityLinkedAccount</choiceReferences>
            <extensionName>flowruntime:choiceLookup</extensionName>
            <fieldText>Related Opportunity</fieldText>
            <fieldType>ComponentChoice</fieldType>
            <isRequired>false</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetACase.Id</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>AProductRequestHasBeenCreated</name>
        <label>A Product Request has been created</label>
        <locationX>336</locationX>
        <locationY>2606</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>UploadAnAttachmentProdFeed</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;If you would like to upload an attachment, please click below.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>UploadFile</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Upload an attachment</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>disabled</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Here you can upload an attachment if you would like to.</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>varProductRequestId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>ConfirmationProductRequest</name>
            <fieldText>&lt;p&gt;Thanks! You have successfully created a Product Request record.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Details of the Product Request you submitted:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Account: &lt;/strong&gt;{!recVarLinkedAccount.Account__c}{!Copy_1_of_luAccount.recordName}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Product: &lt;/strong&gt;{!recVarProductRequest.Product__c}&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Product Option: &lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!recVarProductRequest.ProductOption__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>This will create a Product Request which will be routed to the respective Product teams. Please fill all mandatory field</description>
        <name>CreateAProductRequest</name>
        <label>Create a Product Request</label>
        <locationX>336</locationX>
        <locationY>1682</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>IsTypePaymentMethod</targetReference>
        </connector>
        <fields>
            <name>CreateAProductRequest_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CreateAProductRequest_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Header</name>
                    <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); font-size: 12px; color: rgb(68, 68, 68);&quot;&gt;As we were not able to find an existing Product Request based on your input, please provide us with more information by filling out the blank fields. This will create a new Product Request.&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>AccountName</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Account Name:&lt;/strong&gt; {!Copy_1_of_luAccount.recordName}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ProductRequestName</name>
            <dataType>String</dataType>
            <fieldText>Product Request Name</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;The Product Request Name should be shorter than 80 characters.&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!ProductRequestName}) &lt; 80</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Type__c</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Category__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SubType</name>
            <choiceReferences>pcsSubType</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>SubType1</elementReference>
            </defaultValue>
            <fieldText>Sub-Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PaymentMethodName</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>PaymentMethodName1</elementReference>
            </defaultValue>
            <fieldText>Payment Method Name</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Only use this flow if you are willing to suggest a Payment Method that Adyen should consider integrating. Please do make sure to first &lt;/span&gt;&lt;a href=&quot;https://hub.is.adyen.com/our-solution/payments/payments-engine/payment-methods/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;check&lt;/a&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt; that we do not already offer that Payment Method in any way (in any country and on any service level). &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If it&apos;s on the HUB Payment Method list but doesn&apos;t match your merchant&apos;s needs, use the &quot;Improvements or Expansion&quot; Sub-type.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Product__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>(1 AND 2 AND 3 AND 4) OR (1 AND 5)</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Category__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.ProductOption__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Product__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Feature__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.ProductOption__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.MainMarketCountryRegion__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Country Expansion for Existing Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>MainMarket2</name>
            <choiceReferences>MainMarketCountriesRegions</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Main Market</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SubType</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Country Expansion for Existing Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Description</name>
            <fieldText>What is the problem the Merchant is facing? Explain the Product Request in detail.</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Impact__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ImpactDescription</name>
            <fieldText>How does this issue impact the Merchant or Adyen?</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>PilotPaymentMethods</name>
            <choiceReferences>pcsPilot</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Would your Merchant be interested in piloting the product (once available)?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PilotNonPaymentMethod</name>
            <choiceReferences>pcsPilot</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Would your Merchant be interested in piloting the product (once available)?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RelatedOpportunityNewProductRequest</name>
            <choiceReferences>RelatedOpportunityLinkedAccount</choiceReferences>
            <extensionName>flowruntime:choiceLookup</extensionName>
            <fieldText>Related Opportunity</fieldText>
            <fieldType>ComponentChoice</fieldType>
            <isRequired>false</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetACase.Id</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Footer</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;On the next step, you will be able to add attachments to your request.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>LinkedAccountCreated</name>
        <label>Linked Account Created</label>
        <locationX>50</locationX>
        <locationY>1298</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>UpvotedAnExistingProductRequest</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;You have upvoted an existing Product Request!&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://happy-hunting.lightning.force.com/lightning/r/ProductRequest__c/{!LinkAccountToExistingProductRequest}/view&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;You can find the Product Request here&lt;/strong&gt;&lt;/a&gt;, and by going back to the Account you started this process from and click on the &quot;Product Requests&quot; tab in the list of related objects in the &quot;Related List Quick Links&quot; component.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ScreenExistingProductRequests</name>
        <label>Existing Product Requests</label>
        <locationX>182</locationX>
        <locationY>866</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>IsThereAnExistingProductRequestSelected</targetReference>
        </connector>
        <fields>
            <name>SearchExistingPRsFirst</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;We found these existing Product Requests based on your input in the previous screen.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If you can find a similar Product Request, select the record and you will be able to add an Opportunity in the next screen.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If you cannot find a similar Product Request, click &quot;Next&quot; to create a new one.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ExistingProductRequestList</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>ProductRequest__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Existing Product Requests</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>GetExistingProductRequestRecords</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>isShowSearchBar</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Category__c&quot;,&quot;guid&quot;:&quot;column-166d&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Category&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Product__c&quot;,&quot;guid&quot;:&quot;column-6678&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Product&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;ProductOption__c&quot;,&quot;guid&quot;:&quot;column-ed31&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Product Option&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Feature__c&quot;,&quot;guid&quot;:&quot;column-3115&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Feature&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Description__c&quot;,&quot;guid&quot;:&quot;column-1801&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:4,&quot;label&quot;:&quot;Issue Description&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>WhatProductIsTheRequestFor</name>
        <label>What Product is the Request for?</label>
        <locationX>336</locationX>
        <locationY>542</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>GetExistingProductRequestRecords</targetReference>
        </connector>
        <fields>
            <name>FindingExistingProductRequests</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Please let us know for which Product you want to give feedback on or request new features, so we can already find existing Product Request records for you to upvote.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If we cannot find any existing Product Requests for you, you will be able to provide more information on the next screen.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Copy_1_of_luAccount</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>Account__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Account</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>LinkedAccount__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Type__c</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Category__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SubType1</name>
            <choiceReferences>pcsSubType</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Sub-Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PaymentMethodName1</name>
            <dataType>String</dataType>
            <fieldText>Payment Method Name</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Only use this flow if you are willing to suggest a Payment Method that Adyen should consider integrating. Please do make sure to first &lt;/span&gt;&lt;a href=&quot;https://hub.is.adyen.com/our-solution/payments/payments-engine/payment-methods/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;check&lt;/a&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt; that we do not already offer that Payment Method in any way (in any country and on any service level). &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If it&apos;s on the HUB Payment Method list but doesn&apos;t match your merchant&apos;s needs, use the &quot;Improvements or Expansion&quot; Sub-type.&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SubType1</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Product__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>(1 AND 2 AND 3 AND 4) OR (1 AND 5)</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Category__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>recVarProductRequest.Type__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Payment Method</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SubType1</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SubType1</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>SubType1</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.ProductOption__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.Product__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>SubType1</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <isRequired>false</isRequired>
            <objectFieldReference>recVarProductRequest.Feature__c</objectFieldReference>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recVarProductRequest.ProductOption__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                </conditions>
                <conditions>
                    <leftValueReference>SubType1</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>New Payment Method</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>decIsAProductRequestFromAnAccountOrACase</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>ExistingPR</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ProductRequest__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recVarLinkedAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>LinkedAccount__c</objectType>
    </variables>
    <variables>
        <name>recVarProductRequest</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ProductRequest__c</objectType>
    </variables>
    <variables>
        <name>varOwnerId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>00G3O000007mE2jUAE</stringValue>
        </value>
    </variables>
    <variables>
        <name>varProductRequestId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
