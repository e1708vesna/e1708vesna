<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>NotifyAccountOwner</name>
        <label>Notify Account Owner</label>
        <locationX>308</locationX>
        <locationY>1548</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.OwnerFullname__c}, your Account &apos;{!$Record.Name}&apos; will be moved to &apos;Unmanaged&apos; in 7 days due to inactivity. Please ensure you log a Task, Event or Opportunity on the Account if you want to prevent this.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning!</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>collectionAccountOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>AddAccountOwnerToCollection</name>
        <label>Add Account Owner to Collection</label>
        <locationX>308</locationX>
        <locationY>1332</locationY>
        <assignmentItems>
            <assignToReference>collectionAccountOwner</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetCustomNotification</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>ClosingOpportunityFound</name>
        <label>Closing Opportunity Found?</label>
        <locationX>176</locationX>
        <locationY>360</locationY>
        <defaultConnector>
            <targetReference>GetMostRecentEmailMessage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesOpportunityFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetClosingOpportunities</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Evaluates activity on the Account/Opportunity:
1. No Action necessary when there was activity in the last 82 days
2. Send Notification when Activity was 83 days ago
3. At 90 days without Activity, move to Unmanaged</description>
        <name>EvaluationOfActivity</name>
        <label>Evaluation of Activity</label>
        <locationX>572</locationX>
        <locationY>1116</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NoActionNecessary</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetMostRecentTask.ActivityDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for82DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentEvent.ActivityDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for82DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forOpportunityCreatedDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for82DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forTaskRelationCreatedDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for82DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forEventRelationCreatedDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for82DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Days_Since_Last_activity__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>82.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentEmailMessage.MessageDate</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for82DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <label>No Action Necessary</label>
        </rules>
        <rules>
            <name>SendNotification</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetMostRecentEvent.ActivityDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentTask.ActivityDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forOpportunityCreatedDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forAccountCreatedDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forTaskRelationCreatedDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forEventRelationCreatedDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Days_Since_Last_activity__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>83.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentEmailMessage.MessageDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>for83DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsOwnerActive</targetReference>
            </connector>
            <label>Send Notification (7 Days Left)</label>
        </rules>
        <rules>
            <name>MoveToUnmanaged</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4) AND (5 OR 6) AND (7 OR 8) AND (9 OR 10) AND 11 AND 12 AND 13</conditionLogic>
            <conditions>
                <leftValueReference>GetMostRecentTask.ActivityDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentTask</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentEvent.ActivityDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentEvent</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forOpportunityCreatedDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentOpportunity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forTaskRelationCreatedDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forTaskRelationCreatedDate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forEventRelationCreatedDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forEventRelationCreatedDate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forAccountCreatedDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Days_Since_Last_activity__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>90.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetMostRecentEmailMessage.MessageDate</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>for90DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MoveProspectToUnmanaged</targetReference>
            </connector>
            <label>Move to Unmanaged</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsOwnerActive</name>
        <label>Is Owner Active?</label>
        <locationX>440</locationX>
        <locationY>1224</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesOwnerActive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddAccountOwnerToCollection</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Latest Update: changed the Decision Node to include days since last activity
Latest Update: Added Email Messages to the flow.

Scheduled: Daily 5:00</description>
    <environments>Default</environments>
    <formulas>
        <name>for82DaysAgo</name>
        <dataType>Date</dataType>
        <expression>TODAY() - 82</expression>
    </formulas>
    <formulas>
        <name>for83DaysAgo</name>
        <dataType>Date</dataType>
        <expression>TODAY() - 83</expression>
    </formulas>
    <formulas>
        <name>for90DaysAgo</name>
        <dataType>Date</dataType>
        <expression>TODAY() - 90</expression>
    </formulas>
    <formulas>
        <name>forAccountCreatedDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!$Record.CreatedDate})</expression>
    </formulas>
    <formulas>
        <name>forActivityMetricLastActivityDateTime</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!$Record.ActivityMetric.LastActivityDateTime})</expression>
    </formulas>
    <formulas>
        <name>forDaysOfInactivity</name>
        <dataType>Number</dataType>
        <expression>MAX(
IF(TODAY()-DATEVALUE({!GetMostRecentEventRelation.CreatedDate}) = null, 0, TODAY()-DATEVALUE({!GetMostRecentEventRelation.CreatedDate})), 
IF(TODAY()-DATEVALUE({!GetMostRecentTask.CreatedDate}) = null, 0 , TODAY()-DATEVALUE({!GetMostRecentTask.CreatedDate}))
)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forEventRelationCreatedDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!GetMostRecentEventRelation.CreatedDate})</expression>
    </formulas>
    <formulas>
        <name>forOpportunityCreatedDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!GetMostRecentOpportunity.CreatedDate})</expression>
    </formulas>
    <formulas>
        <name>forTaskRelationCreatedDate</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!GetMostRecentTaskRelation.CreatedDate})</expression>
    </formulas>
    <interviewLabel>Batch - {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Batch - Prospect and Suspect Accounts to Unmanaged (2022)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>That are in stage &apos;Transacting&apos; or &apos;Contract Signed&apos;</description>
        <name>GetClosingOpportunities</name>
        <label>Get Closing Opportunities</label>
        <locationX>176</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ClosingOpportunityFound</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Transacting</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contract signed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCustomNotification</name>
        <label>Get Custom Notification</label>
        <locationX>308</locationX>
        <locationY>1440</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>NotifyAccountOwner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CustomNotifTypeName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Prospect Owner Notification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMostRecentEmailMessage</name>
        <label>Get Most Recent Email Message</label>
        <locationX>572</locationX>
        <locationY>468</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetMostRecentTask</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RelatedToId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>MessageDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>for90DaysAgo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailMessage</object>
        <sortField>MessageDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMostRecentEvent</name>
        <label>Get Most Recent Event</label>
        <locationX>572</locationX>
        <locationY>792</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetMostRecentEventRelation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ActivityDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>for90DaysAgo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Event</object>
        <sortField>ActivityDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This was added as one Event can apply to multiple Accounts/Contacts and in that case it&apos;s only linked to one via the AccountId field on the Event itself. However, the EventRelation object displays all relations of the Event.</description>
        <name>GetMostRecentEventRelation</name>
        <label>Get Most Recent Event Relation</label>
        <locationX>572</locationX>
        <locationY>900</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetMostRecentOpportunity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CreatedDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>for90DaysAgo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EventRelation</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMostRecentOpportunity</name>
        <label>Get Most Recent Opportunity</label>
        <locationX>572</locationX>
        <locationY>1008</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>EvaluationOfActivity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CreatedDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>for90DaysAgo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMostRecentTask</name>
        <label>Get Most Recent Task</label>
        <locationX>572</locationX>
        <locationY>576</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetMostRecentTaskRelation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ActivityDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>for90DaysAgo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <sortField>ActivityDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This was added as one Task can apply to multiple Accounts/Contacts and in that case it&apos;s only linked to one via the AccountId field on the Task itself. However, the TaskRelation object displays all relations of the Task.</description>
        <name>GetMostRecentTaskRelation</name>
        <label>Get Most Recent Task Relation</label>
        <locationX>572</locationX>
        <locationY>684</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetMostRecentEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CreatedDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>for90DaysAgo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TaskRelation</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>MoveProspectToUnmanaged</name>
        <label>Move Prospect to Unmanaged</label>
        <locationX>836</locationX>
        <locationY>1224</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Label.UnmanagedUser</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetClosingOpportunities</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND 6 AND (4 OR 5)</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>0053W000000Ni36QAC</stringValue>
            </value>
        </filters>
        <filters>
            <field>OpportunityCreatedLast82Days__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>X82DaysOrOlder__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Account_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Suspect</stringValue>
            </value>
        </filters>
        <filters>
            <field>Account_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Prospect</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeMirror__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>PartnerAccountv2</stringValue>
            </value>
        </filters>
        <object>Account</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2022-02-07</startDate>
            <startTime>05:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>collectionAccountOwner</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varDaysOfInactivity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
