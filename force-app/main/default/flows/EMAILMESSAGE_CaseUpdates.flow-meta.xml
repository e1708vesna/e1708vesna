<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Set_Case_Escalation_Values</name>
        <label>Set Case Escalation Values</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>GetRelatedCase.IsEscalated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetRelatedCase.EscalationReason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Emergency Email Used By Customer</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetRelatedCase.EscalationDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetRelatedCase.InformMerchantOneTimeOnly__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetRelatedCase.EscalationRequester__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetRelatedCase.Comments</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Escalation: Emergency Email Address used</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateRecords</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Null Check.</description>
        <name>Case_Found</name>
        <label>Case Found?</label>
        <locationX>792</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>NOT Found</defaultConnectorLabel>
        <rules>
            <name>Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetRelatedCase</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsIncoming</targetReference>
            </connector>
            <label>Found</label>
        </rules>
    </decisions>
    <decisions>
        <description>Escalates a Case because an emergency Email Address was used. This is done in a similar way to the Escalation Case Action.
Future improvement: Use the Escalate Case Action as a trigger only and move the field assignments into this flow (create a subflow to handle everything Escalation related).</description>
        <name>Escalate_because_Emergency_Email_Used</name>
        <label>Escalate because Emergency Email Used?</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>UpdateRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>1 AND (2 OR (3 AND 4))</conditionLogic>
            <conditions>
                <leftValueReference>forEmergencyEmailUsed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRelatedCase.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRelatedCase.EscalationReason__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Emergency Email Used By Customer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRelatedCase.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Case_Escalation_Values</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>First time anyone sends an email from the email composer on this case. This can be a reply on an merchant email or a first message.</description>
        <name>FirstMessageByAgent</name>
        <label>First Message by Agent?</label>
        <locationX>622</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>UpdateRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Multiple Replies</defaultConnectorLabel>
        <rules>
            <name>FirstReply</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetRelatedCase.FirstReplyTime__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FirstReplyTime</targetReference>
            </connector>
            <label>First Reply</label>
        </rules>
    </decisions>
    <decisions>
        <name>FromAdyenEmail</name>
        <label>FromAdyenEmail?</label>
        <locationX>776</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>UpdateRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NOT FormAdyenEmail</defaultConnectorLabel>
        <rules>
            <name>Is_FromAdyenEmail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FromAdyenEmail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FirstMessageByAgent</targetReference>
            </connector>
            <label>Is FromAdyenEmail</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsIncoming</name>
        <label>IsIncoming?</label>
        <locationX>479</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>FromAdyenEmail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Outgoing</defaultConnectorLabel>
        <rules>
            <name>Incoming</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Escalate_because_Emergency_Email_Used</targetReference>
            </connector>
            <label>Incoming</label>
        </rules>
    </decisions>
    <description>Add Case Escalation logic when an emergency email address is included in the email tread.</description>
    <environments>Default</environments>
    <formulas>
        <name>forEmergencyEmailUsed</name>
        <dataType>Boolean</dataType>
        <expression>IF(
OR(CONTAINS({!$Record.ToAddress}, &quot;emergency-&quot;),CONTAINS({!$Record.CcAddress}, &quot;emergency-&quot;)),
true, 
false
)</expression>
    </formulas>
    <formulas>
        <name>TotalReplies</name>
        <dataType>Number</dataType>
        <expression>{!varSumOfEmails} + {!varCountFeedItems}</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>EMAILMESSAGE_CaseUpdates {!$Flow.CurrentDateTime}</interviewLabel>
    <label>EMAILMESSAGE_CaseUpdates</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get Case data</description>
        <name>GetRelatedCase</name>
        <label>Get Related Case</label>
        <locationX>792</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update the First Reply Time</description>
        <name>UpdateRecords</name>
        <label>Update Records</label>
        <locationX>479</locationX>
        <locationY>1223</locationY>
        <inputReference>GetRelatedCase</inputReference>
    </recordUpdates>
    <start>
        <locationX>666</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetRelatedCase</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>FirstReplyTime</name>
        <label>First Reply Time</label>
        <locationX>490</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>UpdateRecords</targetReference>
        </connector>
        <flowName>CASE_SERVICE_FirstReplyTime</flowName>
        <inputAssignments>
            <name>Case</name>
            <value>
                <elementReference>GetRelatedCase</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ParentCaseId</name>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>GetRelatedCase</assignToReference>
            <name>Case</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>NumberOfEmailMessages</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <description>Total number of feed items</description>
        <name>NumberOfFeedItems</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>ParentCaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varCountFeedItems</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>varSumOfEmails</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
