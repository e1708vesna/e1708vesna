<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <description>Duplicate the original email message.</description>
        <name>CreateNewEmailMessage</name>
        <label>Create New Email Message</label>
        <locationX>50</locationX>
        <locationY>816</locationY>
        <assignmentItems>
            <assignToReference>$Record.Id</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.ParentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetCaseDetails.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.ClonedEmail__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SaveEmailMessage</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UpdateCaseFields</name>
        <label>Update Case Fields</label>
        <locationX>50</locationX>
        <locationY>600</locationY>
        <assignmentItems>
            <assignToReference>GetCaseDetails.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.Id</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.ParentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.WaitingOnMerchantDateTime__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Subject</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.Reopened__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.TimeReopened__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.CreatedDate</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.LastModifiedDate</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.ClosedDate</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.Type</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.SubType__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.ServiceTopic__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>GetCaseDetails.ZendeskId__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>NewCase</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Checks whether the case should be reopened or a new one needs to be created. If status of case is &apos;Waiting for Merchant&apos;, change status to &apos;In Progress&apos; if applicable.</description>
        <name>CaseStatus</name>
        <label>Case Status</label>
        <locationX>578</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>CreateNewCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.TimeToReopen__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCaseDetails</targetReference>
            </connector>
            <label>Closed - Create New</label>
        </rules>
        <rules>
            <name>ReopenCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.TimeToReopen__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetCaseInProgress</targetReference>
            </connector>
            <label>Closed - Reopen</label>
        </rules>
        <rules>
            <name>WaitingForMerchant</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Waiting for Merchant</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetCaseInProgressMerchantReply</targetReference>
            </connector>
            <label>Waiting for Merchant</label>
        </rules>
        <rules>
            <name>Handover</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Handover</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Case_In_Progress_2</targetReference>
            </connector>
            <label>Handover</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Internal</name>
        <label>Is Internal?</label>
        <locationX>182</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>CaseStatus</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NOT Internal</defaultConnectorLabel>
        <rules>
            <name>Internal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FromAdyenEmail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Internal</label>
        </rules>
    </decisions>
    <description>Clear zendesk ID on new case.</description>
    <environments>Default</environments>
    <formulas>
        <name>forStripRefIdHTMLBody</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!$Record.HtmlBody}, &apos;thread::&apos;, &apos;thread_old::&apos;)</expression>
    </formulas>
    <formulas>
        <name>forStripRefIdTextBody</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!$Record.TextBody}, &apos;thread::&apos;, &apos;thread_old::&apos;)</expression>
    </formulas>
    <interviewLabel>EMAIL_SERVICE_CreateNewOrReopenCase {!$Flow.CurrentDateTime}</interviewLabel>
    <label>EMAIL_SERVICE_CreateNewOrReopenCase</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>NewCase</name>
        <label>New Case</label>
        <locationX>50</locationX>
        <locationY>708</locationY>
        <connector>
            <targetReference>CreateNewEmailMessage</targetReference>
        </connector>
        <inputReference>GetCaseDetails</inputReference>
    </recordCreates>
    <recordCreates>
        <description>Save the new email message into the database</description>
        <name>SaveEmailMessage</name>
        <label>Save Email Message</label>
        <locationX>50</locationX>
        <locationY>924</locationY>
        <inputReference>$Record</inputReference>
    </recordCreates>
    <recordLookups>
        <name>GetCaseDetails</name>
        <label>Get Case Details</label>
        <locationX>50</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UpdateCaseFields</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Merchant replied on the case. Set the case back to &apos;In Progress&apos;.</description>
        <name>Set_Case_In_Progress_2</name>
        <label>Set Case &apos;In Progress&apos;</label>
        <locationX>842</locationX>
        <locationY>492</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WaitingOnMerchantDateTime__c</field>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <description>Case is within reply-time, so reopen the closed case.</description>
        <name>SetCaseInProgress</name>
        <label>Set Case &apos;In Progress&apos;</label>
        <locationX>314</locationX>
        <locationY>492</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Reopened__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TimeReopened__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <description>Merchant replied on the case. Set the case back to &apos;In Progress&apos;</description>
        <name>SetCaseInProgressMerchantReply</name>
        <label>Set Case &apos;In Progress&apos;</label>
        <locationX>578</locationX>
        <locationY>492</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WaitingOnMerchantDateTime__c</field>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>650</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Internal</targetReference>
        </connector>
        <filterFormula>AND (
{!$Record.ClonedEmail__c} = FALSE,
NOT({!$Permission.BypassCaseTriggerValidationMigration}),
{!$Record.Incoming} ,
OR({!$Record.Parent.RecordType.DeveloperName} == &apos;ServiceCase&apos;, {!$Record.Parent.RecordType.DeveloperName} == &apos;InternalCase&apos;, {!$Record.Parent.RecordType.DeveloperName} == &apos;Support&apos;),
OR({!$Record.Parent.IsShopperCase__c} == false, {!$Record.Parent.ShopperCaseAllowed__c}),
NOT(ISPICKVAL({!$Record.Parent.AutoCloseReason__c}, &apos;Blocked Email&apos;))
)</filterFormula>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>SendNotificationOnCaseReply</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>SendNotificationOnCaseReply</name>
        <label>Send Notification on Case Reply</label>
        <locationX>1370</locationX>
        <locationY>276</locationY>
        <flowName>Subflow_SendNotificationCaseOwner</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>Case with updated values</description>
        <name>CaseToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
