<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>CaseReassignmentNotifGROUP</name>
        <label>Case Reassignment Notifi GROUP</label>
        <locationX>666</locationX>
        <locationY>1379</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>ShareWithUser</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotificationType.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>CaseReassignmentBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>CaseReassignmentTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varRecipientIdGROUP</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>CaseReassignmentSINGLE</name>
        <label>Case Reassignment SINGLE</label>
        <locationX>930</locationX>
        <locationY>1379</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>ShareWithUser</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotificationType2.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>CaseReassignmentBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>CaseReassignmentTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varRecipientIdSINGLE</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>Notifies internal support case owners.</description>
        <name>NotifiySupportCaseOwners</name>
        <label>Notifiy Support Case Owners</label>
        <locationX>292</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>CheckForNordicsCaseOwner</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotifyCaseCreatorBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>NotifyCaseCreatorTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varCreatorID</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <description>SupportCaseType</description>
        <name>NotifyCaseCreator</name>
        <label>Notify Case Creator</label>
        <locationX>556</locationX>
        <locationY>431</locationY>
        <actionName>Case.Email_Case_Creator</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>CheckForNordicsCaseOwner</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Product_Feedback_Change_Owner</name>
        <label>Product Feedback - Change Owner</label>
        <locationX>325</locationX>
        <locationY>2279</locationY>
        <actionName>Case.AdyenProductFeedbackChangeOwner</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>SendNordicsNotification</name>
        <label>Send Nordics Notification</label>
        <locationX>50</locationX>
        <locationY>1271</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>ShareWithUser</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotificationId.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>CaseNotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>CaseNotificationTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varRecipientId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>AddReassignmentSINGLE</name>
        <label>Add Reassignment SINGLE</label>
        <locationX>930</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>varRecipientIdSINGLE</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CaseReassignmentSINGLE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddRecipientGROUP</name>
        <label>Add Recipient GROUP</label>
        <locationX>666</locationX>
        <locationY>1271</locationY>
        <assignmentItems>
            <assignToReference>varRecipientIdGROUP</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CaseReassignmentNotifGROUP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddRecipientId</name>
        <label>Add Recipient Id</label>
        <locationX>50</locationX>
        <locationY>1163</locationY>
        <assignmentItems>
            <assignToReference>varRecipientId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendNordicsNotification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>NotificationToCaseCreator</name>
        <label>Notification To Case Creator</label>
        <locationX>292</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>varCreatorID</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>NotifiySupportCaseOwners</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AlreadySharedWithUser</name>
        <label>Already Shared With User?</label>
        <locationX>259</locationX>
        <locationY>1955</locationY>
        <defaultConnector>
            <targetReference>CreateSharingRecord</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesAlreadyShared</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetExistingCaseShareRecord</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>To check if a new case is created for the Nordics queue, if yes notify owner.</description>
        <name>CheckForNordicsCaseOwner</name>
        <label>CheckForNordicsCaseOwner</label>
        <locationX>556</locationX>
        <locationY>839</locationY>
        <defaultConnector>
            <targetReference>IsRecordTypeService</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendNotificationtoCaseOwner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Nordics_Cases</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Nordics_Cases</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCustomNotificationId</targetReference>
            </connector>
            <label>Send Notification to Case Owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckIfWeHaveId</name>
        <label>CheckIfWeHaveId</label>
        <locationX>182</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>ShareWithUser</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IdFoundYes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCustomNotificationId.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddRecipientId</targetReference>
            </connector>
            <label>Id Found Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckReassignmentDecision</name>
        <label>Check Reassignment Decision</label>
        <locationX>930</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>ShareWithUser</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ReassignedToOtherUserGROUP</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forUserID</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCustomNotificationType</targetReference>
            </connector>
            <label>Reassigned To Other User GROUP</label>
        </rules>
        <rules>
            <name>ReassignedToOtherUserSINGLE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forUserID</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCustomNotificationType2</targetReference>
            </connector>
            <label>Reassigned To Other User SINGLE</label>
        </rules>
    </decisions>
    <decisions>
        <name>Didtheownerofprodfeedchanged</name>
        <label>Did the owner of prod feed changed?</label>
        <locationX>457</locationX>
        <locationY>2171</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yesitchanged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Product_Feedback</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Product_Feedback_Change_Owner</targetReference>
            </connector>
            <label>Yes it changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsRecordTypeService</name>
        <label>Is Record Type Service?</label>
        <locationX>930</locationX>
        <locationY>947</locationY>
        <defaultConnector>
            <targetReference>ShareWithUser</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Service Record Type</defaultConnectorLabel>
        <rules>
            <name>Tooling_Support</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ShareWithUser</targetReference>
            </connector>
            <label>Tooling Support</label>
        </rules>
        <rules>
            <name>SalesRecordType</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>ServiceCase</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>InternalCase</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CheckReassignmentDecision</targetReference>
            </connector>
            <label>Sales Record Type</label>
        </rules>
    </decisions>
    <decisions>
        <description>Notifies Support type case creators.</description>
        <name>NotificationSupportCase</name>
        <label>Notification Support Case</label>
        <locationX>556</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>CheckForNordicsCaseOwner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SupportCaseCreatorNotification</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>InternalSupportCasesQueue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCustomNotification</targetReference>
            </connector>
            <label>Support Case Creator Notification</label>
        </rules>
        <rules>
            <name>NotifiesCaseCreators</name>
            <conditionLogic>1 AND 2 AND (3 OR  4) AND 5 AND 6 AND 7</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>@adyen.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>InternalSupportCasesQueue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppressAutomatedEmails__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NotifyCaseCreator</targetReference>
            </connector>
            <label>Notifies Case Creators</label>
        </rules>
    </decisions>
    <decisions>
        <name>ShareWithUser</name>
        <label>Share with User?</label>
        <locationX>556</locationX>
        <locationY>1739</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4 AND 5 AND 6 AND 7 AND 8 AND 9</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__r.UserType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Standard</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Claim_Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>ServiceCase</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>InternalCase</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetExistingCaseShareRecord</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>23-09-2023 | Matthew : Added check for `SuppressAutomatedEmails__c = FALSE` before Case Creator Notification
22/08/23 Matthijs: Excluding Service &amp; Internal Cases (Non-Support) from CaseShare logic.</description>
    <environments>Default</environments>
    <formulas>
        <name>forUserID</name>
        <dataType>String</dataType>
        <expression>CASESAFEID({!$User.Id})</expression>
    </formulas>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>After-Save Updates Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>After-Save Updates Case</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateSharingRecord</name>
        <label>Create Sharing Record</label>
        <locationX>457</locationX>
        <locationY>2063</locationY>
        <connector>
            <targetReference>Didtheownerofprodfeedchanged</targetReference>
        </connector>
        <inputAssignments>
            <field>CaseAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CaseId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </inputAssignments>
        <object>CaseShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetCustomNotification</name>
        <label>Get Custom Notification</label>
        <locationX>292</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>NotificationToCaseCreator</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>EmailToCaseCreatorNotification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Send notification to case owner.</description>
        <name>GetCustomNotificationId</name>
        <label>Get Custom Notification Id</label>
        <locationX>182</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckIfWeHaveId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New_Nordics_Case</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCustomNotificationType</name>
        <label>Get Custom Notification Type</label>
        <locationX>666</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddRecipientGROUP</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CaseUserReassigned</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCustomNotificationType2</name>
        <label>Get Custom Notification Type</label>
        <locationX>930</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AddReassignmentSINGLE</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CaseUserReassigned</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetExistingCaseShareRecord</name>
        <label>Get Existing Case Share Record</label>
        <locationX>259</locationX>
        <locationY>1847</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AlreadySharedWithUser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CaseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CaseShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>430</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>NotificationSupportCase</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>CaseNotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A new Nordics Case has been created with Case Subject {!$Record.Subject} and Account Name {!$Record.Account.Name}</text>
    </textTemplates>
    <textTemplates>
        <name>CaseNotificationTitle</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>New Nordics Case Notification</text>
    </textTemplates>
    <textTemplates>
        <name>CaseReassignmentBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A new Case has been assigned to you with Case Subject {!$Record.Subject} and Case Number {!$Record.CaseNumber}.</text>
    </textTemplates>
    <textTemplates>
        <name>CaseReassignmentTitle</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>New Case Assigned with Case Subject {!$Record.Subject} and Case Number {!$Record.CaseNumber}</text>
    </textTemplates>
    <textTemplates>
        <description>Sends Notification to the sf case creators.</description>
        <name>NotifyCaseCreatorBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A new Case has been created for you with Case Subject {!$Record.Subject} and Case Number {!$Record.CaseNumber}.</text>
    </textTemplates>
    <textTemplates>
        <name>NotifyCaseCreatorTitle</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>New Case Created with Case Subject {!$Record.Subject} and Case Number {!$Record.CaseNumber}.</text>
    </textTemplates>
    <variables>
        <description>SupportCaseCreators get notified</description>
        <name>varCreatorID</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varRecipientId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varRecipientIdGROUP</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varRecipientIdSINGLE</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
