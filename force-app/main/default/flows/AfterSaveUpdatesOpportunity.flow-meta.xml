<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>NotifyPartnerEmailNotification</name>
        <label>Notify Partner Email</label>
        <locationX>710</locationX>
        <locationY>5243</locationY>
        <actionName>Opportunity.PartnerOpportunityClosed</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>SendAccountOwnerGoLiveNotification</name>
        <label>Send Account Owner Go-Live Notification</label>
        <locationX>666</locationX>
        <locationY>2579</locationY>
        <actionName>Opportunity.Opportunity_Go_Live_Notification_Account_Owner</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>GetRelatedHandovers</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>SendNotificationReferralContactOwner</name>
        <label>Send Notification</label>
        <locationX>864</locationX>
        <locationY>4103</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>SendOwnerNotificationOpps</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotificationReferral.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>textMessageToReferralContactOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Partner Referral Contact Owner updated on Opportunity</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>collectionRecipientPartnerReferralContactOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>SendNotificationToOwner</name>
        <label>Send Notification To Owner</label>
        <locationX>864</locationX>
        <locationY>4619</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>ShouldOpptyBeUpdatedDec</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>GetCustomNotification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>textMessageToOwner</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Referral change on an Opportunity</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>collectionRecipient</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>AssignLastStageChangeDate</name>
        <label>Assign Last Stage Change Date</label>
        <locationX>622</locationX>
        <locationY>2147</locationY>
        <assignmentItems>
            <assignToReference>varOpportunity.LastStageChangeDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forTodayDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ShouldOpptyBeUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateIPPStatus</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignOpptyId</name>
        <label>Assign Oppty Id</label>
        <locationX>842</locationX>
        <locationY>4919</locationY>
        <assignmentItems>
            <assignToReference>varOpportunity.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateOppty</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignPartnerManagerEmail</name>
        <label>Assign Partner Manager Email</label>
        <locationX>490</locationX>
        <locationY>3503</locationY>
        <assignmentItems>
            <assignToReference>varOpportunity.Partner_Manager_Email__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Referral_by_account__r.Owner.Email</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VarCheckboxNotifyPartnerMail</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>NewPartnerReferralContactOwner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignRecipient</name>
        <label>Assign Recipient</label>
        <locationX>864</locationX>
        <locationY>4511</locationY>
        <assignmentItems>
            <assignToReference>collectionRecipient</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendNotificationToOwner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignRecipientReferralContactOwner</name>
        <label>Assign Recipient</label>
        <locationX>864</locationX>
        <locationY>3995</locationY>
        <assignmentItems>
            <assignToReference>collectionRecipientPartnerReferralContactOwner</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record__Prior.PartnerReferralContactOwner__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendNotificationReferralContactOwner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CountSalesChannelsLostOpps</name>
        <label>Count Sales Channels Lost Opps</label>
        <locationX>1040</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>countPlatforms</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forPlatformsCountLost</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countUnifiedCommerce</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forUnifiedCommerceCountLost</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countFinancialServices</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forFinancialServicesCountLost</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countDigital</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forDigitalCountLost</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCountOpportunities</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopThroughLostOpportunities</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CountSalesChannelsOpenOpps</name>
        <label>Count Sales Channels Open Opps</label>
        <locationX>688</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>countPlatforms</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forPlatformsCountOpen</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countUnifiedCommerce</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forUnifiedCommerceCountOpen</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countFinancialServices</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forFinancialServicesCountOpen</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>countDigital</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>forDigitalCountOpen</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCountOpportunities</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopThroughOpenOpportunities</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UpdateSalesAreaAssignment</name>
        <label>Update Sales Area</label>
        <locationX>864</locationX>
        <locationY>1847</locationY>
        <assignmentItems>
            <assignToReference>varOpportunity.SalesArea__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner.SalesArea__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ShouldOpptyBeUpdated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsOpptyStageChanged</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AllResourcesAssigned</name>
        <label>All Resources Assigned?</label>
        <locationX>666</locationX>
        <locationY>2795</locationY>
        <defaultConnector>
            <targetReference>OpptyProductStageUpdate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>HandoverNotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetRelatedHandovers</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OpptyProductStageUpdate</targetReference>
            </connector>
            <label>Handover not Found</label>
        </rules>
        <rules>
            <name>YesAllResourcesAssigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetRelatedHandovers.CountOfResourcesRequested__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>GetRelatedHandovers.CountOfResourcesAssigned__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Related_Handover</targetReference>
            </connector>
            <label>Yes, all resources assigned</label>
        </rules>
        <rules>
            <name>NoOnlyAMAssigned</name>
            <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
            <conditions>
                <leftValueReference>GetRelatedHandovers.AccountManager__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRelatedHandovers.AMPool__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRelatedHandovers.Assigned_AM__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetRelatedHandovers.CountOfResourcesRequested__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>GetRelatedHandovers.CountOfResourcesAssigned__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Related_Account_Owner</targetReference>
            </connector>
            <label>No, only AM assigned</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsOpptyStageChanged</name>
        <label>Is Oppty Stage Changed</label>
        <locationX>996</locationX>
        <locationY>2039</locationY>
        <defaultConnector>
            <targetReference>NewPartnerReferralContactOwner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Change</defaultConnectorLabel>
        <rules>
            <name>StageChanged</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignLastStageChangeDate</targetReference>
            </connector>
            <label>Stage Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>NewOpptyUpdatedOwner</name>
        <label>New Oppty Updated Owner</label>
        <locationX>996</locationX>
        <locationY>1631</locationY>
        <defaultConnector>
            <targetReference>IsOpptyStageChanged</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NewOpptyUpdateOwner</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateOpptyTeamMember</targetReference>
            </connector>
            <label>New Oppty Update Owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>NewOpptyWithPrimaryContact</name>
        <label>New Oppty With Primary Contact</label>
        <locationX>996</locationX>
        <locationY>1331</locationY>
        <defaultConnector>
            <targetReference>NewOpptyUpdatedOwner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NewOpptyWithPC</name>
            <conditionLogic>1 AND 2</conditionLogic>
            <conditions>
                <leftValueReference>forNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Opportunity_Primary_Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateOpptyContact</targetReference>
            </connector>
            <label>New Oppty With PC</label>
        </rules>
    </decisions>
    <decisions>
        <name>NewPartnerReferralContactOwner</name>
        <label>New Partner Referral Contact Owner?</label>
        <locationX>996</locationX>
        <locationY>3779</locationY>
        <defaultConnector>
            <targetReference>SendOwnerNotificationOpps</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesPartnerReferralContactOwnerChanged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.PartnerReferralContactOwner__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.PartnerReferralContactOwner__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.PartnerReferralContactOwner__r.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>forLoggedInUser</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCustomNotificationReferral</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>NotifyOnClosure</name>
        <label>Notify On Closure</label>
        <locationX>622</locationX>
        <locationY>3395</locationY>
        <defaultConnector>
            <targetReference>NewPartnerReferralContactOwner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NotifyPartner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Referral_by_account__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignPartnerManagerEmail</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Notify Partner</label>
        </rules>
    </decisions>
    <decisions>
        <name>NotifyPartnerEmail</name>
        <label>Notify Partner Email</label>
        <locationX>842</locationX>
        <locationY>5135</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCheckboxNotifyPartnerMail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>NotifyPartnerEmailNotification</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>The logic is built like this, so that the Business Model Based on Adyen Data value on Account is recalculated when the Account is a Prospect &amp; the stage of an Opportunity moved to Lost (because lost Opportunities shouldn&apos;t count) or when a new Opportunity is created or when the Sales Channel of an Opportunity is changed.
Also for Opportunities created via Lead Conversion, the field should be populated but during evaluation the Account may still be a Suspect (moving to Prospect async), so for that reason the second part of the conditions was added: new Opp record &amp; Converted from Lead &amp; the Account isn&apos;t a Live Account.</description>
        <name>ReCalculateBusinessModelBasedOnAdyenData</name>
        <label>(re)Calculate &apos;Business Model Based on Adyen Data&apos;?</label>
        <locationX>996</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>NewOpptyWithPrimaryContact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesRecalculate</name>
            <conditionLogic>((1 OR 2) AND (3 OR (4 AND 5) OR 6)) OR (3 AND 7 AND (1 OR 2))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Account_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Suspect</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.Account_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Prospect</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>forNewRecord</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Lost</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Sales_channel__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ConvertedFromLead__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetAllRelatedOpenOpportunities</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>SendOwnerNotificationOpps</name>
        <label>Send Owner Notification Opps</label>
        <locationX>996</locationX>
        <locationY>4295</locationY>
        <defaultConnector>
            <targetReference>ShouldOpptyBeUpdatedDec</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NotifyOwner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$User.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Referral_by_account__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCustomNotification</targetReference>
            </connector>
            <label>Notify Owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>ShouldOpptyBeUpdatedDec</name>
        <label>Should Oppty Be Updated</label>
        <locationX>996</locationX>
        <locationY>4811</locationY>
        <defaultConnectorLabel>No Update</defaultConnectorLabel>
        <rules>
            <name>YesUpdate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ShouldOpptyBeUpdated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignOpptyId</targetReference>
            </connector>
            <label>Yes Update</label>
        </rules>
    </decisions>
    <decisions>
        <name>UpdateIPPStatus</name>
        <label>Update IPP Status</label>
        <locationX>622</locationX>
        <locationY>2255</locationY>
        <defaultConnector>
            <targetReference>OpptyProductStageUpdate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other Stage Update</defaultConnectorLabel>
        <rules>
            <name>AlsoUpdateIPPStatus</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Lost</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Lost</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>OpptyProductStageStatusUpdate</targetReference>
            </connector>
            <label>Close Lost</label>
        </rules>
        <rules>
            <name>CloseWon</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsWon</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ActivateAdditionalProducts</targetReference>
            </connector>
            <label>Close Won</label>
        </rules>
    </decisions>
    <decisions>
        <name>UseLostOrOpenOpportunities</name>
        <label>Use Lost or Open Opportunities?</label>
        <locationX>776</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>GetRelatedLostOpportunities</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Lost Opportunities</defaultConnectorLabel>
        <rules>
            <name>OpenOpportunities</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetAllRelatedOpenOpportunities</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetRelatedOpenOpportunities</targetReference>
            </connector>
            <label>Open Opportunities</label>
        </rules>
    </decisions>
    <description>Vini 25/08: Moved the Handover check node to the existing path were we check if the opp was closed, changed the Criteria to Get the Handover to include any Handover that is not Completed.</description>
    <environments>Default</environments>
    <formulas>
        <name>ForAMAssignment</name>
        <dataType>String</dataType>
        <expression>IF( 
{!GetRelatedHandovers.AccountManager__c} = TRUE, 
{!GetRelatedHandovers.Assigned_AM__r.Id}, 
{!GetRelatedHandovers.HandoverPoolUser__r.Id})</expression>
    </formulas>
    <formulas>
        <name>forBusinessModelBasedOnAdyenData</name>
        <dataType>String</dataType>
        <expression>IF(
{!countFinancialServices} = {!varCountOpportunities}, TEXT({!$Record.Account.MerchantCoreBusinessModel__c}),
IF(
{!countPlatforms} / ({!varCountOpportunities} - {!countFinancialServices}) &gt;= 0.5, &quot;Platforms&quot;,
IF(
{!countUnifiedCommerce} &gt; 0, &quot;Unified Commerce&quot;,
IF(
{!countDigital} &gt; 0, &quot;Digital&quot;,
&quot;&quot;))))</expression>
    </formulas>
    <formulas>
        <name>forDigitalCountLost</name>
        <dataType>Number</dataType>
        <expression>CASE({!LoopThroughLostOpportunities.Sales_channel__c}, 
&quot;Ecom&quot;, 1,
&quot;Mobile&quot;, 1,
&quot;&quot;, 1,
0 )</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forDigitalCountOpen</name>
        <dataType>Number</dataType>
        <expression>CASE({!LoopThroughOpenOpportunities.Sales_channel__c}, 
&quot;Ecom&quot;, 1,
&quot;Mobile&quot;, 1,
&quot;&quot;, 1,
0 )</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forFinancialServicesCountLost</name>
        <dataType>Number</dataType>
        <expression>CASE(
{!LoopThroughLostOpportunities.Sales_channel__c}, &quot;Issuing&quot;, 1, 0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forFinancialServicesCountOpen</name>
        <dataType>Number</dataType>
        <expression>CASE(
{!LoopThroughOpenOpportunities.Sales_channel__c}, &quot;Issuing&quot;, 1, 0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forGoLiveCompanySegment</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),TEXT({!$Record.Account.Company_Segment__c}),{!$Record.Account.GoLiveCompanySegment__c})</expression>
    </formulas>
    <formulas>
        <name>forGoLiveCountry</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),{!$Record.Account.BillingCountry},{!$Record.Account.GoLiveCountry__c})</expression>
    </formulas>
    <formulas>
        <name>forGoLiveIndustry</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),TEXT({!$Record.Account.Industry}),{!$Record.Account.GoLiveIndustry__c})</expression>
    </formulas>
    <formulas>
        <name>forGoLiveMonthlyGrossMargin</name>
        <dataType>Number</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),{!$Record.Total_Gross_Margin_Services_Products__c} / CURRENCYRATE(TEXT({!$Record.CurrencyIsoCode})) * CURRENCYRATE(TEXT({!$Record.Account.CurrencyIsoCode})),{!$Record.Account.GoLiveMonthlyGrossMargin__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>forGoLiveSalesChannel</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),TEXT({!$Record.Sales_channel__c}),{!$Record.Account.GoLiveSalesChannel__c})</expression>
    </formulas>
    <formulas>
        <name>forGoLiveSubIndustry</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),TEXT({!$Record.Account.SubIndustry__c}),{!$Record.Account.GoLiveSubindustry__c})</expression>
    </formulas>
    <formulas>
        <name>forIsOwnerUser</name>
        <dataType>Boolean</dataType>
        <expression>LEFT({!$Record.OwnerId}, 3) == &apos;005&apos;</expression>
    </formulas>
    <formulas>
        <name>forLoggedInUser</name>
        <dataType>String</dataType>
        <expression>CASESAFEID({!$User.Id})</expression>
    </formulas>
    <formulas>
        <name>forNewRecord</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>forNOW</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <formulas>
        <description>This is created like this as a Rollup Summary is calculated after after-save flows and thus the current record that is triggering is not taken into consideration.</description>
        <name>forNumberOfOpenOpportunities</name>
        <dataType>Number</dataType>
        <expression>{!$Record.Account.Has_Open_Opportunity__c} -  CASE({!$Record.StageName}, &apos;Closed Lost&apos;, 1, -1)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forOpportunityTriggeringLiveAccount</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!$Record.Account.Account_First_Live_Date__c}),{!$Record.Id},{!$Record.Account.OpportunityTriggeringLiveAccount__c})</expression>
    </formulas>
    <formulas>
        <description>Update Account owner to support in case there is no Handover related to the opportunity.</description>
        <name>forOwnerUpdateSupport</name>
        <dataType>String</dataType>
        <expression>IF(
AND(
   ISBLANK({!$Record.Account.Account_First_Live_Date__c}),
   ISPICKVAL({!$Record.HandoverRequired__c}, &quot;No&quot;)),
{!$Label.SalesSupportUserId}, 
{!$Record.Account.OwnerId}
)</expression>
    </formulas>
    <formulas>
        <name>forPlatformsCountLost</name>
        <dataType>Number</dataType>
        <expression>CASE(
{!LoopThroughLostOpportunities.Sales_channel__c}, &quot;Adyen for Platforms&quot;, 1, 0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forPlatformsCountOpen</name>
        <dataType>Number</dataType>
        <expression>CASE(
{!LoopThroughOpenOpportunities.Sales_channel__c}, &quot;Adyen for Platforms&quot;, 1, 0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forPOSStatus</name>
        <dataType>String</dataType>
        <expression>IF(
  AND(
    ISCHANGED( {!$Record.StageName} ), 
    ISPICKVAL( {!$Record.StageName}, &quot;Closed Lost&quot;)
  ),
&quot;Closed Lost&quot;, &quot;Needs Review&quot;)</expression>
    </formulas>
    <formulas>
        <description>to set which role the flow should choose .</description>
        <name>forTeamMemberRole</name>
        <dataType>String</dataType>
        <expression>IF({!$Permission.C_AccountManager} = TRUE, &quot;Account Manager&quot;, 
IF({!$Permission.C_SalesManager} = TRUE, &quot;Sales Manager&quot;,
IF({!$Permission.C_SDR} = TRUE, &quot;SDR&quot;,
IF({!$Permission.C_PartnerManager} = TRUE, &quot;Partner Manager&quot;,
IF({!$Permission.C_AMPool} = TRUE, &quot;Customer Success Manager&quot;,
 &quot;Opportunity Owner&quot;)))))</expression>
    </formulas>
    <formulas>
        <name>forTodayDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <formulas>
        <name>forUnifiedCommerceCountLost</name>
        <dataType>Number</dataType>
        <expression>CASE(
{!LoopThroughLostOpportunities.Sales_channel__c}, &quot;POS&quot;, 1, 
&quot;Omnichannel&quot;, 1,
0)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>forUnifiedCommerceCountOpen</name>
        <dataType>Number</dataType>
        <expression>CASE(
{!LoopThroughOpenOpportunities.Sales_channel__c}, &quot;POS&quot;, 1, 
&quot;Omnichannel&quot;, 1,
0)</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>After-Save Updates Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>After-Save Updates Opportunity</label>
    <loops>
        <name>LoopThroughLostOpportunities</name>
        <label>Loop Through Lost Opportunities</label>
        <locationX>952</locationX>
        <locationY>755</locationY>
        <collectionReference>GetRelatedLostOpportunities</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CountSalesChannelsLostOpps</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateBusinessModelBasedOnAdyenDataOnAccount</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopThroughOpenOpportunities</name>
        <label>Loop Through Open Opportunities</label>
        <locationX>600</locationX>
        <locationY>755</locationY>
        <collectionReference>GetRelatedOpenOpportunities</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CountSalesChannelsOpenOpps</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateBusinessModelBasedOnAdyenDataOnAccount</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateOpptyContact</name>
        <label>Create Oppty Contact Role</label>
        <locationX>864</locationX>
        <locationY>1439</locationY>
        <connector>
            <targetReference>NewOpptyUpdatedOwner</targetReference>
        </connector>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>$Record.Opportunity_Primary_Contact__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsPrimary</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>OpportunityContactRole</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateOpptyTeamMember</name>
        <label>Create Oppty Team Member</label>
        <locationX>864</locationX>
        <locationY>1739</locationY>
        <connector>
            <targetReference>UpdateSalesAreaAssignment</targetReference>
        </connector>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TeamMemberRole</field>
            <value>
                <elementReference>forTeamMemberRole</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>OpportunityTeamMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>GetAllRelatedOpenOpportunities</name>
        <label>Get All Related Open Opportunities</label>
        <locationX>776</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UseLostOrOpenOpportunities</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCustomNotification</name>
        <label>Get Custom Notification</label>
        <locationX>864</locationX>
        <locationY>4403</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignRecipient</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ReferralNotificationToRecordOwner</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCustomNotificationReferral</name>
        <label>Get Custom Notification Referral</label>
        <locationX>864</locationX>
        <locationY>3887</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignRecipientReferralContactOwner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ReferralContactOwnerNotification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRelatedHandovers</name>
        <label>Get Related Handovers</label>
        <locationX>666</locationX>
        <locationY>2687</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AllResourcesAssigned</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5)</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Assigned_AM__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AMPool__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>AccountManager__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Handover__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRelatedLostOpportunities</name>
        <label>Get Related Lost Opportunities</label>
        <locationX>952</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopThroughLostOpportunities</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed Lost</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRelatedOpenOpportunities</name>
        <label>Get Related Open Opportunities</label>
        <locationX>600</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopThroughOpenOpportunities</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>When an Opportunity is won we want to mark any Additional Products as Active so they show up as purchased products on the Account.</description>
        <name>ActivateAdditionalProducts</name>
        <label>Activate Additional Products</label>
        <locationX>666</locationX>
        <locationY>2363</locationY>
        <connector>
            <targetReference>SetAccountToLive</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.AdditionalProductsRecordTypeId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Active__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>AdditionalProduct__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>OpptyProductStageStatusUpdate</name>
        <label>Oppty Product Stage Update</label>
        <locationX>50</locationX>
        <locationY>2363</locationY>
        <connector>
            <targetReference>OpptyProductStageUpdate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>POS_Status__c</field>
            <value>
                <elementReference>forPOSStatus</elementReference>
            </value>
        </inputAssignments>
        <object>OpportunityLineItem</object>
    </recordUpdates>
    <recordUpdates>
        <name>OpptyProductStageUpdate</name>
        <label>Oppty Product Stage Update</label>
        <locationX>622</locationX>
        <locationY>3287</locationY>
        <connector>
            <targetReference>NotifyOnClosure</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OpportunityStage__c</field>
            <value>
                <elementReference>$Record.StageName</elementReference>
            </value>
        </inputAssignments>
        <object>OpportunityLineItem</object>
    </recordUpdates>
    <recordUpdates>
        <description>Change Account Record Type to Live</description>
        <name>SetAccountToLive</name>
        <label>Set Account to Live</label>
        <locationX>666</locationX>
        <locationY>2471</locationY>
        <connector>
            <targetReference>SendAccountOwnerGoLiveNotification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>GoLiveCompanySegment__c</field>
            <value>
                <elementReference>forGoLiveCompanySegment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GoLiveCountry__c</field>
            <value>
                <elementReference>forGoLiveCountry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GoLiveIndustry__c</field>
            <value>
                <elementReference>forGoLiveIndustry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GoLiveMonthlyGrossMargin__c</field>
            <value>
                <elementReference>forGoLiveMonthlyGrossMargin</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GoLiveSalesChannel__c</field>
            <value>
                <elementReference>forGoLiveSalesChannel</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GoLiveSubindustry__c</field>
            <value>
                <elementReference>forGoLiveSubIndustry</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityTriggeringLiveAccount__c</field>
            <value>
                <elementReference>forOpportunityTriggeringLiveAccount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>forOwnerUpdateSupport</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Related_Account</name>
        <label>Update Related Account</label>
        <locationX>490</locationX>
        <locationY>3011</locationY>
        <connector>
            <targetReference>OpptyProductStageUpdate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>ForAMAssignment</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Related_Account_Owner</name>
        <label>Update Related Account Owner</label>
        <locationX>754</locationX>
        <locationY>2903</locationY>
        <connector>
            <targetReference>OpptyProductStageUpdate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>ForAMAssignment</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Related_Handover</name>
        <label>Update Related Handover</label>
        <locationX>490</locationX>
        <locationY>2903</locationY>
        <connector>
            <targetReference>Update_Related_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRelatedHandovers.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Handover__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateBusinessModelBasedOnAdyenDataOnAccount</name>
        <label>Update Business Model Based on Adyen Data on Account</label>
        <locationX>776</locationX>
        <locationY>1139</locationY>
        <connector>
            <targetReference>NewOpptyWithPrimaryContact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BusinessModelBasedOnAdyenData__c</field>
            <value>
                <elementReference>forBusinessModelBasedOnAdyenData</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateOppty</name>
        <label>Update Oppty</label>
        <locationX>842</locationX>
        <locationY>5027</locationY>
        <connector>
            <targetReference>NotifyPartnerEmail</targetReference>
        </connector>
        <inputReference>varOpportunity</inputReference>
    </recordUpdates>
    <start>
        <locationX>870</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ReCalculateBusinessModelBasedOnAdyenData</targetReference>
        </connector>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>textMessageToOwner</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$User.FirstName} {!$User.LastName} changed the referral on one of your Opportunities: {!$Record.Name}</text>
    </textTemplates>
    <textTemplates>
        <name>textMessageToReferralContactOwner</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$User.FirstName} {!$User.LastName} changed the Partner Referral Contact Owner on an Opportunity where you were previously the Partner Referral Contact Owner: {!$Record.Name}</text>
    </textTemplates>
    <variables>
        <name>collectionRecipient</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>collectionRecipientPartnerReferralContactOwner</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>countDigital</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>countFinancialServices</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>countPlatforms</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>countUnifiedCommerce</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>OpportunityAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>ShouldOpptyBeUpdated</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>VarCheckboxNotifyPartnerMail</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varCountOpportunities</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>varOpportunity</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
</Flow>
