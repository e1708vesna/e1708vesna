<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>sendCustomNotificationToAMPoolManager</name>
        <label>send Custom Notification to AM Pool Manager</label>
        <locationX>446</locationX>
        <locationY>1847</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>getCustomNotification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varCollectionRecipientsIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>txtTemplateAccountReviewTaskTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>txtTemplateAccountReviewTaskBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>assignAccountOwnerManagerIdsToVarCol</name>
        <label>assign AccountOwnerManagerIds to VarCol</label>
        <locationX>446</locationX>
        <locationY>1631</locationY>
        <assignmentItems>
            <assignToReference>varCollectionRecipientsIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Account.Owner.ManagerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getCustomNotification</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>decBusinessTier</name>
        <label>dec Business Tier</label>
        <locationX>446</locationX>
        <locationY>1331</locationY>
        <defaultConnectorLabel>Shouldnt ever user this path</defaultConnectorLabel>
        <rules>
            <name>Gold</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BusinessTier__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Gold</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateGoldNewAccountReviewTask</targetReference>
            </connector>
            <label>Gold</label>
        </rules>
        <rules>
            <name>Silver</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BusinessTier__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Silver</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateSilverNewAccountReviewTask</targetReference>
            </connector>
            <label>Silver</label>
        </rules>
        <rules>
            <name>Bronze</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BusinessTier__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bronze</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateBronzeNewAccountReviewTask</targetReference>
            </connector>
            <label>Bronze</label>
        </rules>
    </decisions>
    <decisions>
        <name>LeadRelatedTaskIsClosedNonMarketo</name>
        <label>Lead related Task is closed (non-Marketo)</label>
        <locationX>776</locationX>
        <locationY>923</locationY>
        <defaultConnector>
            <targetReference>NewAccountReviewTask</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ClosedLead</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WhoId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00Q</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Label.MarketoIntegrationUser</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateLeadOwner</targetReference>
            </connector>
            <label>Closed Lead</label>
        </rules>
    </decisions>
    <decisions>
        <name>NewAccountReviewTask</name>
        <label>New Account Review Task</label>
        <locationX>776</locationX>
        <locationY>1223</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NewAccountReview</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Account Review</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.BusinessTier__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.AccountOwnerFormula__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>AM Pool</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>decBusinessTier</targetReference>
            </connector>
            <label>New Account Review</label>
        </rules>
    </decisions>
    <decisions>
        <description>Replacement of Process Builder &apos;Task Management&apos; for related record actions</description>
        <name>TaskRelatedToContactIsCreated</name>
        <label>Task related to Contact is created</label>
        <locationX>776</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>UpdateOwnerActivity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NewTaskOnContact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ForIsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.WhoId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>003</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateContactStatus</targetReference>
            </connector>
            <label>New Task on Contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>UpdateOwnerActivity</name>
        <label>Update Owner Activity</label>
        <locationX>776</locationX>
        <locationY>623</locationY>
        <defaultConnector>
            <targetReference>LeadRelatedTaskIsClosedNonMarketo</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>TaskCreatedByAccountOwner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Account.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateLastOwnerActivity</targetReference>
            </connector>
            <label>Task Created by Account Owner</label>
        </rules>
    </decisions>
    <description>15/06/2023 - AccountReview BusinessTierAutomations - template fix</description>
    <environments>Default</environments>
    <formulas>
        <name>forBronze365Days</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 365</expression>
    </formulas>
    <formulas>
        <name>forGold90Days</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 90</expression>
    </formulas>
    <formulas>
        <name>ForIsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>forSilver180Days</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 180</expression>
    </formulas>
    <interviewLabel>After-Save Updates Task {!$Flow.CurrentDateTime}</interviewLabel>
    <label>After-Save Updates Task</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateBronzeNewAccountReviewTask</name>
        <label>Create Bronze New Account Review Task</label>
        <locationX>578</locationX>
        <locationY>1439</locationY>
        <connector>
            <targetReference>assignAccountOwnerManagerIdsToVarCol</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>forBronze365Days</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Account Review</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateGoldNewAccountReviewTask</name>
        <label>Create Gold New Account Review Task</label>
        <locationX>50</locationX>
        <locationY>1439</locationY>
        <connector>
            <targetReference>assignAccountOwnerManagerIdsToVarCol</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>forGold90Days</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Account Review</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateSilverNewAccountReviewTask</name>
        <label>Create Silver New Account Review Task</label>
        <locationX>314</locationX>
        <locationY>1439</locationY>
        <connector>
            <targetReference>assignAccountOwnerManagerIdsToVarCol</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>forSilver180Days</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.Account.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Account Review</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getCustomNotification</name>
        <label>get Custom Notification</label>
        <locationX>446</locationX>
        <locationY>1739</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>sendCustomNotificationToAMPoolManager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CreateNewAccountReviewTask</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update status from Open to Attempting Contact</description>
        <name>UpdateContactStatus</name>
        <label>Update Contact Status</label>
        <locationX>644</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>UpdateOwnerActivity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContactStatus__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhoId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ContactStatus__c</field>
            <value>
                <stringValue>Attempting Contact</stringValue>
            </value>
        </inputAssignments>
        <object>Contact</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateLastOwnerActivity</name>
        <label>Update Last Owner Activity</label>
        <locationX>644</locationX>
        <locationY>731</locationY>
        <connector>
            <targetReference>LeadRelatedTaskIsClosedNonMarketo</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Prospect_Account_V2</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>LastOwnerActivity__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateLeadOwner</name>
        <label>Update Lead Owner</label>
        <locationX>644</locationX>
        <locationY>1031</locationY>
        <connector>
            <targetReference>NewAccountReviewTask</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnedByQueue__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Inbound_Lead_V2</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhoId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <start>
        <locationX>650</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>TaskRelatedToContactIsCreated</targetReference>
        </connector>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>txtTemplateAccountReviewTaskBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>An upcoming Account Review task was created for {!$Record.Account.Name} to complete, don&apos;t forget to update the due date if needed!</text>
    </textTemplates>
    <textTemplates>
        <name>txtTemplateAccountReviewTaskTitle</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>New Account Review task created!</text>
    </textTemplates>
    <variables>
        <name>varCollectionRecipientsIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
